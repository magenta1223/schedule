{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport setToken from \"@/utils/auth.js\";\nlet url = \"http://127.0.0.1:8000/api/song/\"; // 장고 drf 서버 주소\n\nexport default {\n  name: \"SongCreate\",\n  data: () => {\n    return {\n      title: \"\",\n      content: \"\",\n      update: false,\n      newPosition: \"\",\n      desserts: [{\n        name: 'Vocal',\n        requirement: 0\n      }, {\n        name: 'Guitar',\n        requirement: 0\n      }, {\n        name: 'Base',\n        requirement: 0\n      }, {\n        name: 'Drum',\n        requirement: 0\n      }, {\n        name: 'Keyboard',\n        requirement: 0\n      }]\n    };\n  },\n  components: {},\n  methods: {\n    subtract: function (item) {\n      if (item.requirement - 1 >= 0) {\n        item.requirement = item.requirement - 1;\n      }\n    },\n    add: function (item) {\n      item.requirement = item.requirement + 1;\n    },\n    addPosition: function () {\n      let existingPosition = false;\n      for (let i in this.desserts) {\n        if (this.desserts[i].name === this.newPosition) {\n          this.desserts[i].requirement += 1;\n          existingPosition = true;\n        }\n      }\n      if (!existingPosition) {\n        this.desserts.push({\n          name: this.newPosition,\n          requirement: 1\n        });\n      }\n      this.newPosition = \"\";\n    },\n    createSong: function () {\n      axios({\n        method: \"POST\",\n        url: url,\n        headers: setToken(),\n        params: {\n          user_id: localStorage.getItem('user'),\n          title: this.title,\n          content: this.content\n        }\n      }).then(response => {\n        response;\n        this.$router.push({\n          name: \"projects\"\n        });\n      }).catch(error => {\n        console.log(\"Failed to get retreival\", error.response);\n      });\n    }\n  },\n  mounted() {}\n};","map":{"version":3,"mappings":";AAiFA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,QAAO,MAAO,iBAAgB;AAErC,IAAIC,GAAE,GAAI,iCAAiC,EAAG;;AAE9C,eAAe;EAEXC,IAAG,EAAI,YAAY;EAEnBC,IAAG,EAAI,MAAM;IACT,OAAO;MACHC,KAAI,EAAI,EAAE;MACVC,OAAM,EAAI,EAAE;MACZC,MAAK,EAAI,KAAK;MACdC,WAAU,EAAI,EAAE;MAChBC,QAAQ,EAAE,CACZ;QACEN,IAAI,EAAE,OAAO;QACbO,WAAW,EAAE;MACf,CAAC,EACD;QACEP,IAAI,EAAE,QAAQ;QACdO,WAAW,EAAE;MACf,CAAC,EACD;QACEP,IAAI,EAAE,MAAM;QACZO,WAAW,EAAE;MACf,CAAC,EACD;QACEP,IAAI,EAAE,MAAM;QACZO,WAAW,EAAE;MACf,CAAC,EACD;QACEP,IAAI,EAAE,UAAU;QAChBO,WAAW,EAAE;MACf,CAAC;IAGC;EACJ,CAAC;EAELC,UAAS,EAAI,CACb,CAAC;EAEDC,OAAO,EAAE;IACLC,QAAO,EAAI,UAASC,IAAI,EAAC;MACrB,IAAIA,IAAI,CAACJ,WAAU,GAAI,KAAK,CAAC,EAAC;QAC1BI,IAAI,CAACJ,WAAU,GAAII,IAAI,CAACJ,WAAU,GAAI;MAC1C;IACJ,CAAC;IAEDK,GAAE,EAAI,UAASD,IAAI,EAAC;MAChBA,IAAI,CAACJ,WAAU,GAAII,IAAI,CAACJ,WAAU,GAAI;IAC1C,CAAC;IAEDM,WAAU,EAAI,YAAU;MACpB,IAAIC,gBAAe,GAAI,KAAI;MAC3B,KAAK,IAAIC,KAAK,IAAI,CAACT,QAAQ,EAAC;QACxB,IAAI,IAAI,CAACA,QAAQ,CAACS,CAAC,CAAC,CAACf,IAAG,KAAM,IAAI,CAACK,WAAW,EAAC;UAC3C,IAAI,CAACC,QAAQ,CAACS,CAAC,CAAC,CAACR,WAAU,IAAK;UAChCO,gBAAe,GAAI,IAAG;QAC1B;MACJ;MAEA,IAAI,CAACA,gBAAgB,EAAC;QAElB,IAAI,CAACR,QAAQ,CAACU,IAAI,CAAC;UACfhB,IAAG,EAAI,IAAI,CAACK,WAAW;UACvBE,WAAU,EAAI;QAClB,CAAC;MAEL;MAGA,IAAI,CAACF,WAAU,GAAI,EAAC;IAExB,CAAC;IAEDY,UAAS,EAAI,YAAU;MACnBpB,KAAK,CAAC;QACFqB,MAAK,EAAI,MAAM;QACfnB,GAAE,EAAIA,GAAG;QACToB,OAAM,EAAIrB,QAAQ,EAAE;QACpBsB,MAAK,EAAI;UACLC,OAAM,EAAIC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;UACtCrB,KAAI,EAAI,IAAI,CAACA,KAAK;UAClBC,OAAO,EAAE,IAAI,CAACA;QAClB;MACJ,CAAC,EACAqB,IAAI,CAAEC,QAAQ,IAAK;QAChBA,QAAO;QACP,IAAI,CAACC,OAAO,CAACV,IAAI,CAAC;UACdhB,IAAG,EAAI;QACX,CAAC;MACL,CAAC,CAAC,CAAC2B,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,KAAK,CAACH,QAAQ,CAAC;MAC1D,CAAC,CAAC;IACN;EAEJ,CAAC;EAEDM,OAAO,GAAG,CAEV;AAEA","names":["axios","setToken","url","name","data","title","content","update","newPosition","desserts","requirement","components","methods","subtract","item","add","addPosition","existingPosition","i","push","createSong","method","headers","params","user_id","localStorage","getItem","then","response","$router","catch","error","console","log","mounted"],"sourceRoot":"","sources":["C:\\schedule\\config\\front\\src\\views\\SongCreate.vue"],"sourcesContent":["<template>\r\n    <v-container class = \"posting-container\">\r\n\r\n        <v-row>\r\n            <v-col class =\"text-h2 text-start active mb-2\"> New Song\r\n            </v-col>\r\n        </v-row>\r\n        <!-- Title -->\r\n        <v-row>\r\n            <v-col> \r\n                <v-text-field v-model=\"title\" placeholder=\"Title\" name=\"title\" type=\"text\"></v-text-field>\r\n            </v-col>\r\n        </v-row>\r\n        <!-- Content -->\r\n        <!-- Text Editor : TipTap https://uxgjs.tistory.com/220 -->\r\n        <v-row>\r\n            <v-col> \r\n                <v-textarea\r\n                v-model=\"content\"\r\n                name=\"input-7-4\"\r\n                :value=\"content\"\r\n                ></v-textarea>\r\n            </v-col>\r\n        </v-row>\r\n        <!-- button -->\r\n        <v-row class=\"text-start\">\r\n            <v-col class=\"btn-container\">\r\n                <v-btn\r\n                class=\"ma-2\"\r\n                outlined\r\n                color=\"indigo\"\r\n                @click=\"createSong()\"\r\n                >\r\n                Create!  \r\n                </v-btn>\r\n            </v-col>\r\n        </v-row>\r\n\r\n          <v-table>\r\n            <thead>\r\n                <tr>\r\n                    <th class=\"text-left\">\r\n                    Name\r\n                    </th>\r\n                    <th class=\"text-center\">\r\n                    requirement\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr\r\n                    v-for=\"item in desserts\"\r\n                    :key=\"item.name\"\r\n                >\r\n                    <td>{{ item.name }}</td>\r\n                    <td class=\"text-center\">\r\n                        <v-btn class = \"elevation-0\" icon=\"mdi-minus\" size=\"small\" @click=\"subtract(item)\"></v-btn>\r\n                        {{ item.requirement }} 명\r\n                        <v-btn class = \"elevation-0\" icon=\"mdi-plus\" size=\"small\" @click=\"add(item)\">+</v-btn></td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <v-text-field v-model=\"newPosition\" variant=\"underlined\">\r\n                        </v-text-field>\r\n                    </td>\r\n                    <td>\r\n                        <v-btn class=\"elevation-0\" width=\"100%\" @click=\"addPosition()\">\r\n                            Add New Position\r\n                        </v-btn>\r\n                    </td>\r\n                </tr>\r\n\r\n            </tbody>\r\n            \r\n        </v-table>\r\n\r\n    </v-container>\r\n\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport setToken from \"@/utils/auth.js\"\r\n\r\nlet url = \"http://127.0.0.1:8000/api/song/\";  // 장고 drf 서버 주소\r\n\r\nexport default {\r\n    \r\n    name : \"SongCreate\",\r\n\r\n    data : () => {\r\n        return {\r\n            title : \"\",\r\n            content : \"\",\r\n            update : false,\r\n            newPosition : \"\",\r\n            desserts: [\r\n          {\r\n            name: 'Vocal',\r\n            requirement: 0,\r\n          },\r\n          {\r\n            name: 'Guitar',\r\n            requirement: 0,\r\n          },\r\n          {\r\n            name: 'Base',\r\n            requirement: 0,\r\n          },\r\n          {\r\n            name: 'Drum',\r\n            requirement: 0,\r\n          },\r\n          {\r\n            name: 'Keyboard',\r\n            requirement: 0,\r\n          },\r\n          \r\n        ],\r\n            }\r\n        },\r\n\r\n    components : {\r\n    },\r\n    \r\n    methods: {\r\n        subtract : function(item){\r\n            if (item.requirement - 1 >= 0){\r\n                item.requirement = item.requirement - 1\r\n            }\r\n        },\r\n\r\n        add : function(item){\r\n            item.requirement = item.requirement + 1\r\n        },\r\n\r\n        addPosition : function(){\r\n            let existingPosition = false\r\n            for (let i in this.desserts){\r\n                if (this.desserts[i].name === this.newPosition){\r\n                    this.desserts[i].requirement += 1\r\n                    existingPosition = true\r\n                }\r\n            }\r\n            \r\n            if (!existingPosition){\r\n\r\n                this.desserts.push({\r\n                    name : this.newPosition,\r\n                    requirement : 1\r\n                })\r\n\r\n            }\r\n\r\n\r\n            this.newPosition = \"\"\r\n\r\n        },\r\n\r\n        createSong : function(){\r\n            axios({\r\n                method : \"POST\",\r\n                url : url,\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                    title : this.title,\r\n                    content: this.content\r\n                }\r\n            })\r\n            .then((response) => {\r\n                response\r\n                this.$router.push({\r\n                    name : \"projects\",\r\n                })\r\n            }).catch((error) => {\r\n                console.log(\"Failed to get retreival\", error.response);\r\n            });\r\n        },\r\n\r\n    },\r\n\r\n    mounted() {\r\n\r\n    }\r\n\r\n    }\r\n</script>\r\n\r\n\r\n<style scoped>\r\n    .btn-container{\r\n        margin-left: auto!important;\r\n    }\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}