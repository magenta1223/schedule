{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport setToken from \"@/utils/auth.js\";\nlet url = \"http://127.0.0.1:8000/api/project/\"; // 장고 drf 서버 주소\n// let song_url = \"http://127.0.0.1:8000/api/song/\";  // 장고 drf 서버 주소\n\nexport default {\n  name: \"ProjectRetrieve\",\n  data: () => {\n    return {\n      project: \"\",\n      windowHeight: window.innerHeight,\n      windowWidth: window.innerWidth,\n      songs: [],\n      headers: [{\n        text: 'Artist',\n        value: 'artist'\n      }, {\n        text: 'Title',\n        value: 'title'\n      }, {\n        text: 'Content',\n        value: 'content'\n      }, {\n        text: 'Vocal',\n        value: 'Vocal'\n      }, {\n        text: 'Guitar1',\n        value: 'Guitar1'\n      }, {\n        text: 'Guitar2',\n        value: 'Guitar2'\n      }, {\n        text: 'Bass',\n        value: 'Bass'\n      }, {\n        text: 'Drum',\n        value: 'Drum'\n      }, {\n        text: 'Keyboard',\n        value: 'Keyboard'\n      }]\n    };\n  },\n  components: {},\n  // param이 바뀌어도 갱신이 되지 않음\n  // board는 이미 mount가 끝났기 때문\n  // 그래서 mounted를 call하지 않음\n  // mounted를 method화 하고, param을 watch하면서 변경될때마다 call하면 됨\n  methods: {\n    retrieveProject: function () {\n      axios({\n        method: \"GET\",\n        url: url + this.$route.params.project_id + '/',\n        headers: setToken(),\n        params: {\n          user_id: localStorage.getItem('user')\n        }\n      }).then(response => {\n        this.project = response.data;\n        this.songs = this.project.songs;\n        console.log(this.project);\n\n        // js redirect\n        // window.location.href = 'http://localhost:8080/';\n        // vue\n        //this.$router.push({ name : 'home'})\n      }).catch(error => {\n        console.log(\"Failed to get retreival\", error.response);\n      });\n    },\n    to: function () {\n      console.log(this.$router);\n      this.$router.push({\n        name: 'song_create',\n        params: {\n          project_id: this.$route.params.project_id\n        }\n      });\n    }\n  },\n  mounted() {\n    this.retrieveProject();\n    window.onresize = () => {\n      this.windowHeight = window.innerHeight;\n    };\n\n    // update인 경우와 아닌 경우\n    // update면 값을 미리 세팅해야 함\n    // this.update = this.$route.params.update\n    // this.category_id = this.$route.params.category_id\n    // this.wrapper_id = this.$route.params.wrapper_id\n\n    // console.log(this.$route.params)\n\n    // if (this.update) {\n    //     axios({\n    //         method : \"GET\",\n    //         url : url + this.wrapper_id,\n    //         headers : setToken(),\n    //         params : {\n    //             content_type : \"post\",\n    //         }\n    //     })\n    //     .then((response) => {\n    //         this.title = response.data.post.title\n    //         this.content = response.data.post.content\n    //     })\n    //     .catch(response => {\n    //         console.log(\"Failed\", response);\n    //     });\n    // }\n  }\n};","map":{"version":3,"mappings":";AAuDA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,QAAO,MAAO,iBAAgB;AAErC,IAAIC,GAAE,GAAI,oCAAoC,EAAG;AACjD;;AAGA,eAAe;EAEXC,IAAG,EAAI,iBAAiB;EAExBC,IAAG,EAAI,MAAM;IACT,OAAO;MACHC,OAAM,EAAI,EAAE;MACZC,YAAW,EAAIC,MAAM,CAACC,WAAW;MACjCC,WAAU,EAAIF,MAAM,CAACG,UAAU;MAC/BC,KAAI,EAAI,EAAE;MACVC,OAAM,EAAI,CACF;QAACC,IAAG,EAAI,QAAQ;QAAEC,KAAI,EAAI;MAAQ,CAAC,EACnC;QAACD,IAAG,EAAI,OAAO;QAAEC,KAAI,EAAI;MAAO,CAAC,EACjC;QAACD,IAAG,EAAI,SAAS;QAAEC,KAAI,EAAI;MAAS,CAAC,EACrC;QAACD,IAAG,EAAI,OAAO;QAAEC,KAAI,EAAI;MAAO,CAAC,EACjC;QAACD,IAAG,EAAI,SAAS;QAAEC,KAAI,EAAI;MAAS,CAAC,EACrC;QAACD,IAAG,EAAI,SAAS;QAAEC,KAAI,EAAI;MAAS,CAAC,EACrC;QAACD,IAAG,EAAI,MAAM;QAAEC,KAAI,EAAI;MAAM,CAAC,EAC/B;QAACD,IAAG,EAAI,MAAM;QAAEC,KAAI,EAAI;MAAM,CAAC,EAC/B;QAACD,IAAG,EAAI,UAAU;QAAEC,KAAI,EAAI;MAAU,CAAC;IAI/C;EACJ,CAAC;EAELC,UAAS,EAAI,CACb,CAAC;EAED;EACA;EACA;EACA;EACAC,OAAO,EAAE;IAELC,eAAc,EAAI,YAAU;MAExBjB,KAAK,CAAC;QACFkB,MAAK,EAAI,KAAK;QACdhB,GAAE,EAAIA,GAAE,GAAI,IAAI,CAACiB,MAAM,CAACC,MAAM,CAACC,UAAS,GAAI,GAAG;QAC/CT,OAAM,EAAIX,QAAQ,EAAE;QACpBmB,MAAK,EAAI;UACLE,OAAM,EAAIC,YAAY,CAACC,OAAO,CAAC,MAAM;QACzC;MACJ,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACrB,OAAM,GAAIqB,QAAQ,CAACtB,IAAG;QAC3B,IAAI,CAACO,KAAI,GAAI,IAAI,CAACN,OAAO,CAACM,KAAI;QAC9BgB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACvB,OAAO;;QAExB;QACA;QACA;QACA;MAEJ,CAAC,CAAC,CAACwB,KAAK,CAAEC,KAAK,IAAK;QAChBH,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEE,KAAK,CAACJ,QAAQ,CAAC;MAC1D,CAAC,CAAC;IACN,CAAC;IAEDK,EAAC,EAAI,YAAU;MACXJ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACI,OAAO;MACxB,IAAI,CAACA,OAAO,CAACC,IAAI,CAAC;QACd9B,IAAG,EAAI,aAAa;QACpBiB,MAAK,EAAI;UACLC,UAAS,EAAI,IAAI,CAACF,MAAM,CAACC,MAAM,CAACC;QACpC;MAAC,CAAC;IACV;EAEJ,CAAC;EAEDa,OAAO,GAAG;IACN,IAAI,CAACjB,eAAe,EAAC;IAErBV,MAAM,CAAC4B,QAAO,GAAI,MAAM;MACxB,IAAI,CAAC7B,YAAW,GAAIC,MAAM,CAACC,WAAU;IACrC;;IAEA;IACA;IACA;IACA;IACA;;IAEA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAGJ;AAEA","names":["axios","setToken","url","name","data","project","windowHeight","window","innerHeight","windowWidth","innerWidth","songs","headers","text","value","components","methods","retrieveProject","method","$route","params","project_id","user_id","localStorage","getItem","then","response","console","log","catch","error","to","$router","push","mounted","onresize"],"sourceRoot":"","sources":["C:\\schedule\\config\\front\\src\\views\\ProjectRetrieve.vue"],"sourcesContent":["<template>\r\n    \r\n    <v-container class = \"mb-6\">\r\n        <!-- 헤더 -->\r\n        <v-parallax\r\n            id = \"parralax\"\r\n            class = \"rounded-xl\"\r\n            :width=\"windowWidth\"\r\n            height=\"200px\"\r\n        >\r\n            <v-row class=\"blurred align-center justify-start rounded-xl ma-0\">\r\n                <v-col class = \"ma-4\">\r\n                <h1 class = \"font-weight-medium text-white\">\r\n                    {{project.title}}\r\n                </h1>\r\n                </v-col>\r\n\r\n            <!-- title :src=\"require('@/assets/wallpaper.jpg')\" -->\r\n            <!-- body -->\r\n            <!-- buttons -->\r\n            <v-btn @click=\"to()\">\r\n                Create Song\r\n            </v-btn>\r\n            </v-row>\r\n        </v-parallax>\r\n        <!-- 바디 -->\r\n        <v-table\r\n            class=\"elevation-1\"\r\n        >\r\n            <thead>\r\n                <tr>\r\n                    <th class=\"text-center\" v-for=\"col in headers\" :key=\"col.value\">\r\n                        {{col.text}}\r\n                    </th>\r\n\r\n                </tr>\r\n            </thead>\r\n\r\n            <!-- custom row design -->\r\n                <!-- when clicked row, the item corresponding with the row in the chart is highlighted -->\r\n                <tr v-for=\"song in songs\" :key=\"song.title\">\r\n                    <!-- fields -->\r\n                    <td class=\"text-center\">{{ song.artist }}</td>\r\n                    <td class=\"text-center\">{{ song.title }}</td>\r\n                    <td class=\"text-center\">{{ song.content }}</td>\r\n                    <!-- types -->\r\n                    <!-- <td> <v-chip v-for=\"type in item.types\" :key=\"type.id\" :color=\"type.color\" small class=\"ma-1\">{{type.name}}</v-chip> </td> -->\r\n                </tr>\r\n        </v-table>\r\n\r\n    </v-container>\r\n\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport setToken from \"@/utils/auth.js\"\r\n\r\nlet url = \"http://127.0.0.1:8000/api/project/\";  // 장고 drf 서버 주소\r\n// let song_url = \"http://127.0.0.1:8000/api/song/\";  // 장고 drf 서버 주소\r\n\r\n\r\nexport default {\r\n    \r\n    name : \"ProjectRetrieve\",\r\n\r\n    data : () => {\r\n        return {\r\n            project : \"\",\r\n            windowHeight : window.innerHeight,\r\n            windowWidth : window.innerWidth,\r\n            songs : [],\r\n            headers : [\r\n                    {text : 'Artist', value : 'artist'},\r\n                    {text : 'Title', value : 'title'},\r\n                    {text : 'Content', value : 'content'},\r\n                    {text : 'Vocal', value : 'Vocal'},\r\n                    {text : 'Guitar1', value : 'Guitar1'},\r\n                    {text : 'Guitar2', value : 'Guitar2'},\r\n                    {text : 'Bass', value : 'Bass'},\r\n                    {text : 'Drum', value : 'Drum'},\r\n                    {text : 'Keyboard', value : 'Keyboard'},\r\n\r\n            ]\r\n\r\n            }\r\n        },\r\n\r\n    components : {\r\n    },\r\n    \r\n    // param이 바뀌어도 갱신이 되지 않음\r\n    // board는 이미 mount가 끝났기 때문\r\n    // 그래서 mounted를 call하지 않음\r\n    // mounted를 method화 하고, param을 watch하면서 변경될때마다 call하면 됨\r\n    methods: {\r\n        \r\n        retrieveProject : function(){\r\n            \r\n            axios({\r\n                method : \"GET\",\r\n                url : url + this.$route.params.project_id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                }\r\n            }).then((response) => {\r\n                this.project = response.data\r\n                this.songs = this.project.songs\r\n                console.log(this.project)\r\n\r\n                // js redirect\r\n                // window.location.href = 'http://localhost:8080/';\r\n                // vue\r\n                //this.$router.push({ name : 'home'})\r\n\r\n            }).catch((error) => {\r\n                console.log(\"Failed to get retreival\", error.response);\r\n            });\r\n        },\r\n\r\n        to : function(){\r\n            console.log(this.$router)\r\n            this.$router.push({\r\n                name : 'song_create',\r\n                params : {\r\n                    project_id : this.$route.params.project_id\r\n                }})\r\n        }\r\n\r\n    },\r\n\r\n    mounted() {\r\n        this.retrieveProject()\r\n\r\n        window.onresize = () => {\r\n        this.windowHeight = window.innerHeight\r\n        }\r\n\r\n        // update인 경우와 아닌 경우\r\n        // update면 값을 미리 세팅해야 함\r\n        // this.update = this.$route.params.update\r\n        // this.category_id = this.$route.params.category_id\r\n        // this.wrapper_id = this.$route.params.wrapper_id\r\n\r\n        // console.log(this.$route.params)\r\n\r\n        // if (this.update) {\r\n        //     axios({\r\n        //         method : \"GET\",\r\n        //         url : url + this.wrapper_id,\r\n        //         headers : setToken(),\r\n        //         params : {\r\n        //             content_type : \"post\",\r\n        //         }\r\n        //     })\r\n        //     .then((response) => {\r\n        //         this.title = response.data.post.title\r\n        //         this.content = response.data.post.content\r\n        //     })\r\n        //     .catch(response => {\r\n        //         console.log(\"Failed\", response);\r\n        //     });\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    }\r\n\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n#parralax{\r\n    background-image : url('~@/assets/wallpaper.jpg');\r\n    background-size: cover;\r\n\r\n}\r\n\r\n.posting-container{\r\n    width: 80%;\r\n}\r\n\r\n\r\n.btn-container{\r\n    margin-left: auto!important;\r\n}\r\n\r\n.blurred{\r\n    background: rgba(0, 0, 0, 0.2);\r\n    backdrop-filter: blur(2px);\r\n    width : 100% !important;\r\n    height:  100% !important;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}