{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport VueCal from 'vue-cal';\nimport 'vue-cal/dist/vuecal.css';\nimport { mdiArrowLeft, mdiArrowRight } from \"@mdi/js\";\nimport Datepicker from '@vuepic/vue-datepicker';\nimport '@vuepic/vue-datepicker/dist/main.css';\nimport axios from \"axios\";\nimport setToken from \"@/utils/auth.js\";\n// import { Header, Item } from \"vue3-easy-data-table\";\n\nlet url = \"http://127.0.0.1:8000/api/event/\"; // 장고 drf 서버 주소\n\nexport default {\n  name: 'YourComponent',\n  components: {\n    VueCal,\n    Datepicker\n  },\n  data() {\n    return {\n      icons: {\n        mdiArrowLeft,\n        mdiArrowRight\n      },\n      selectedDate: null,\n      activeView: \"month\",\n      activeViewOptions: ['month', 'week', 'day'],\n      // disabling \n      disable_views: ['years', 'year'],\n      disable_days: [],\n      // 이거 computed로 설정. 곡 넣을 때 \n\n      // special hours : 검색해서 보자. 곡 선택 시 가능한 지역 알려주는거임. 물론 억지로 넣을 수도 잇게..\n\n      // week / day time interval\n      time_from: 8 * 60,\n      time_to: 19 * 60,\n      time_step: 30,\n      // view events in month\n      eomv: 'short',\n      // header\n\n      weekdayHeadings: {\n        Sunday: {\n          short: 'Sun',\n          color: 'red'\n        },\n        Monday: {\n          short: 'Mon',\n          color: 'black'\n        },\n        Tuesday: {\n          short: 'Tue',\n          color: 'black'\n        },\n        Wednesday: {\n          short: 'Wed',\n          color: 'black'\n        },\n        Thursday: {\n          short: 'Thu',\n          color: 'black'\n        },\n        Friday: {\n          short: 'Fri',\n          color: 'black'\n        },\n        Saturday: {\n          short: 'Sat',\n          color: 'blue'\n        }\n      },\n      events: [{\n        id: 1,\n        author: 1,\n        start: '2022-11-26 14:00',\n        end: '2022-11-26 17:30',\n        title: 'Boring event',\n        content: 'CEX'\n        // split : 1\n      }, {\n        start: '2022-11-26 12:00',\n        end: '2022-11-26 14:00',\n        title: '합주',\n        class: 'meeting',\n        background: true\n        // split : 2\n      }],\n\n      // add events\n      openAdd: false,\n      newDate: [new Date(), new Date()],\n      newEvent: {\n        title: \"\",\n        content: \"\"\n      },\n      // retrieve events\n      openRetrieve: false,\n      selectedEvent: {},\n      selectedEDate: []\n    };\n  },\n  methods: {\n    wdHeaderStyle: function (heading) {\n      if (heading.label === '') {\n        return '';\n      } else {\n        return 'color:' + this.weekdayHeadings[heading.label].color;\n      }\n    },\n    wdHeaderText: function (heading) {\n      if (heading.label === '') {\n        return '';\n      } else {\n        return this.weekdayHeadings[heading.label].short;\n      }\n    },\n    modal: function () {\n      this.newDate[0] = this.selectedDate;\n      this.newDate[1] = this.selectedDate;\n      this.openAdd = true;\n    },\n    onlyDate: function (date) {\n      date = new Date(date);\n      return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\n    },\n    parseEvent: function (event, index) {\n      if (event.allDay === true) {\n        event.start = this.onlyDate(event.start);\n        event.end = this.onlyDate(event.end);\n      } else {\n        event.start = new Date(event.start);\n        event.end = new Date(event.end);\n      }\n      event.class = event.cls;\n      event.index = index;\n      return event;\n    },\n    // list view\n    getEvents: function () {\n      axios({\n        method: \"GET\",\n        url: url,\n        headers: setToken(),\n        params: {\n          user_id: localStorage.getItem('user')\n        }\n      }).then(response => {\n        this.events = response.data.map((event, i) => {\n          return this.parseEvent(event, i);\n        });\n      }).catch(error => {\n        console.log(\"Failed to get song list\", error.response);\n      });\n    },\n    // create view\n    createEvent: function () {\n      axios({\n        method: \"POST\",\n        url: url,\n        headers: setToken(),\n        params: {\n          user_id: localStorage.getItem('user'),\n          start: this.newDate[0],\n          end: this.newDate[1],\n          title: this.newEvent.title,\n          content: this.newEvent.content,\n          participants: JSON.stringify([localStorage.getItem('user')])\n        }\n      }).then(response => {\n        this.events.push(this.parseEvent(response.data));\n        this.openAdd = false, this.newDate = [new Date(), new Date()];\n      }).catch(error => {\n        console.log(\"Failed to get song list\", error.response);\n      });\n    },\n    // retrieve \n    onEventClick: function (event, e) {\n      console.log(event, e);\n      this.selectedEvent = event;\n      this.selectedEDate = [event.start, event.end];\n      this.openRetrieve = true;\n    },\n    // update \n    updateEvent: function () {\n      axios({\n        method: \"PATCH\",\n        url: url + this.selectedEvent.id + '/',\n        headers: setToken(),\n        params: {\n          event_id: this.selectedEvent.id,\n          start: this.selectedEDate[0],\n          end: this.selectedEDate[1],\n          title: this.selectedEvent.title,\n          content: this.selectedEvent.content\n        }\n      }).then(response => {\n        this.events[this.selectedEvent.index] = this.parseEvent(response.data, this.selectedEvent.index);\n        this.selectedEvent = {};\n        this.selectedEDate = [];\n        this.openRetrieve = false;\n      }).catch(error => {\n        console.log(\"Failed to get song list\", error.response);\n      });\n    }\n  },\n  mounted() {\n    this.getEvents();\n  }\n};","map":{"version":3,"mappings":"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","names":["VueCal","mdiArrowLeft","mdiArrowRight","Datepicker","axios","setToken","url","name","components","data","icons","selectedDate","activeView","activeViewOptions","disable_views","disable_days","time_from","time_to","time_step","eomv","weekdayHeadings","Sunday","short","color","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","events","id","author","start","end","title","content","class","background","openAdd","newDate","Date","newEvent","openRetrieve","selectedEvent","selectedEDate","methods","wdHeaderStyle","heading","label","wdHeaderText","modal","onlyDate","date","getFullYear","getMonth","getDate","parseEvent","event","index","allDay","cls","getEvents","method","headers","params","user_id","localStorage","getItem","then","response","map","i","catch","error","console","log","createEvent","participants","JSON","stringify","push","onEventClick","e","updateEvent","event_id","mounted"],"sourceRoot":"","sources":["C:\\schedule\\config\\front\\src\\views\\Event\\Calendar.vue"],"sourcesContent":["<template>\r\n    <v-container>\r\n        <!-- HEADER -->\r\n        <v-row class =\"mb-4\">\r\n            <v-col cols=\"4\">\r\n                <v-select\r\n                    v-model=\"activeView\"\r\n                    :items=\"activeViewOptions\"\r\n                    item-title=\"name\"\r\n                    item-value=\"name\"\r\n                    label=\"View\"\r\n                    density=\"compact\"\r\n                ></v-select>\r\n            </v-col>\r\n            <v-col cols=\"4\">\r\n                <v-btn\r\n                    class =\"mr-1\"\r\n                    @click=\"$refs.vuecal.previous()\"\r\n                    :icon=\"icons.mdiArrowLeft\"\r\n                    size=\"small\"\r\n                >\r\n                </v-btn>\r\n                <v-btn\r\n                   \r\n                    @click=\"$refs.vuecal.next()\"\r\n                    :icon=\"icons.mdiArrowRight\"\r\n                    size=\"small\"\r\n                >\r\n                </v-btn>\r\n            </v-col>\r\n            <v-col>\r\n                {{selectedDate}}\r\n            </v-col>\r\n            <v-col cols=\"2\">\r\n                <v-btn @click=\"modal\"> Add </v-btn>\r\n            </v-col>\r\n        </v-row>\r\n\r\n        <!-- CALENDAR -->\r\n        <v-row>\r\n            <VueCal\r\n                ref=\"vuecal\"\r\n                v-model:selected-date=\"selectedDate\"\r\n                v-model:active-view=\"activeView\"\r\n                hide-view-selector\r\n                hide-title-bar\r\n                :events=\"events\"\r\n                :disable-views=\"disable_views\"\r\n                :time-from=\"time_from\"\r\n                :time-to=\"time_to\"\r\n                :time-step=\"time_step\"\r\n                :events-on-month-view=\"eomv\"\r\n                :on-event-click=\"onEventClick\"\r\n            >\r\n                <template #weekday-heading={heading}>\r\n                    <div :style=\"wdHeaderStyle(heading)\">\r\n                        {{wdHeaderText(heading)}}\r\n                    </div>\r\n                </template>\r\n            </VueCal>\r\n        </v-row>\r\n\r\n        <!-- CREATE DIALOG -->\r\n        <v-row>\r\n            <v-dialog v-model =\"openAdd\" class=\"justify-center align-center\" transition=\"dialog-bottom-transition\">\r\n                <v-card width=\"600px\">\r\n                    <v-card-title>\r\n                        Add Events \r\n                    </v-card-title>\r\n                    <v-card-text>DE</v-card-text>\r\n                    <v-row class=\"ma-2\">\r\n                        <v-text-field\r\n                        v-model=\"newEvent.title\"\r\n                        label=\"Title\"\r\n                        >\r\n                        </v-text-field>\r\n                    </v-row>\r\n                    <v-row class=\"ma-2\">\r\n                        <v-textarea\r\n                        v-model=\"newEvent.content\"\r\n                        label=\"Title\"\r\n                        >\r\n                        </v-textarea>\r\n                    </v-row>\r\n                    <div class=\"ma-2\">\r\n                        <Datepicker v-model=\"newDate\" range />\r\n                    </div>\r\n\r\n                    <v-card-actions>\r\n                        <v-btn color=\"primary\"  variant=\"outlined\" width=\"100%\" @click=\"createEvent\">\r\n                            Add Events! \r\n                        </v-btn>\r\n                    </v-card-actions>\r\n                </v-card>\r\n            </v-dialog>\r\n        </v-row>\r\n        \r\n        <!-- RETRIEVE DIALOG -->\r\n        <v-row>\r\n            <v-dialog v-model =\"openRetrieve\" class=\"justify-center align-center\" transition=\"dialog-bottom-transition\">\r\n                <v-card width=\"600px\">\r\n                    <v-card-title>\r\n                        Update Events\r\n                    </v-card-title>\r\n                    <v-row class=\"ma-2\">\r\n                        <v-text-field\r\n                        v-model=\"selectedEvent.title\"\r\n                        label=\"Title\"\r\n                        >\r\n                        </v-text-field>\r\n                    </v-row>\r\n                    <v-row class=\"ma-2\">\r\n                        <v-textarea\r\n                        v-model=\"selectedEvent.content\"\r\n                        label=\"Title\"\r\n                        >\r\n                        </v-textarea>\r\n                    </v-row>\r\n                    <div class=\"ma-2\">\r\n                        <Datepicker v-model=\"selectedEDate\" range />\r\n                    </div>\r\n\r\n                    <v-card-actions class=\"justify-space-around\">\r\n                        <v-btn color=\"primary\" width=\"25%\"  variant=\"outlined\" @click=\"updateEvent\">\r\n                            Update\r\n                        </v-btn>\r\n                        <v-btn color=\"error\"  width=\"25%\"  variant=\"outlined\" >\r\n                            Delete\r\n                        </v-btn>\r\n\r\n                    </v-card-actions>\r\n                </v-card>\r\n            </v-dialog>\r\n        </v-row>\r\n\r\n\r\n    </v-container>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\nimport VueCal from 'vue-cal'\r\nimport 'vue-cal/dist/vuecal.css'\r\nimport {mdiArrowLeft, mdiArrowRight} from \"@mdi/js\"\r\nimport Datepicker from '@vuepic/vue-datepicker';\r\nimport '@vuepic/vue-datepicker/dist/main.css'\r\nimport axios from \"axios\";\r\nimport setToken from \"@/utils/auth.js\"\r\n// import { Header, Item } from \"vue3-easy-data-table\";\r\n\r\nlet url = \"http://127.0.0.1:8000/api/event/\";  // 장고 drf 서버 주소\r\n\r\nexport default {\r\n    name: 'YourComponent',\r\n    components: {\r\n        VueCal,\r\n        Datepicker\r\n    },\r\n    data() {\r\n        return {\r\n            icons : {\r\n                mdiArrowLeft, mdiArrowRight\r\n            },\r\n            selectedDate: null,\r\n            activeView: \"month\",\r\n            activeViewOptions : ['month', 'week', 'day'],\r\n            \r\n            // disabling \r\n            disable_views : ['years', 'year'],\r\n            disable_days : [], // 이거 computed로 설정. 곡 넣을 때 \r\n            \r\n            // special hours : 검색해서 보자. 곡 선택 시 가능한 지역 알려주는거임. 물론 억지로 넣을 수도 잇게..\r\n            \r\n            // week / day time interval\r\n            time_from : 8 * 60,\r\n            time_to :19 * 60,\r\n            time_step : 30,\r\n\r\n            // view events in month\r\n            eomv : 'short',\r\n        \r\n            // header\r\n\r\n            weekdayHeadings : {\r\n                Sunday : {\r\n                    short : 'Sun',\r\n                    color : 'red'\r\n                },\r\n                Monday : {\r\n                    short : 'Mon',\r\n                    color : 'black'\r\n                },\r\n                Tuesday : {\r\n                    short : 'Tue',\r\n                    color : 'black'\r\n                },\r\n                Wednesday : {\r\n                    short : 'Wed',\r\n                    color : 'black'\r\n                },\r\n                Thursday : {\r\n                    short : 'Thu',\r\n                    color : 'black'\r\n                },\r\n                Friday : {\r\n                    short : 'Fri',\r\n                    color : 'black'\r\n                },\r\n                Saturday : {\r\n                    short : 'Sat',\r\n                    color : 'blue'\r\n                },\r\n\r\n            },\r\n\r\n            events: [\r\n                {\r\n                    id : 1,\r\n                    author : 1,\r\n                    start: '2022-11-26 14:00',\r\n                    end: '2022-11-26 17:30',\r\n                    title: 'Boring event',\r\n                    content: 'CEX',\r\n                    // split : 1\r\n                },\r\n                {\r\n                start: '2022-11-26 12:00',\r\n                end: '2022-11-26 14:00',\r\n                title: '합주',\r\n                class: 'meeting',\r\n                background: true,\r\n                // split : 2\r\n                },\r\n            ],\r\n\r\n            // add events\r\n            openAdd : false,\r\n            newDate : [\r\n                new Date(), \r\n                new Date()\r\n            ],\r\n            newEvent : {\r\n                title : \"\",\r\n                content : \"\"\r\n            },\r\n\r\n            // retrieve events\r\n            openRetrieve : false,\r\n            selectedEvent : {},\r\n            selectedEDate : []\r\n        };\r\n    },\r\n\r\n    methods : {\r\n        wdHeaderStyle : function(heading){\r\n            if (heading.label === ''){\r\n                return ''\r\n            } else {\r\n                return 'color:' + this.weekdayHeadings[heading.label].color\r\n            }\r\n        },\r\n        wdHeaderText : function(heading){\r\n            if (heading.label === ''){\r\n                return ''\r\n            } else {\r\n                return this.weekdayHeadings[heading.label].short\r\n            }\r\n        },\r\n\r\n        modal : function(){\r\n            \r\n            this.newDate[0] = this.selectedDate\r\n            this.newDate[1] = this.selectedDate\r\n            this.openAdd = true\r\n        },\r\n\r\n        onlyDate : function(date){\r\n            date = new Date(date)\r\n            return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n        },\r\n\r\n        parseEvent : function(event, index){\r\n            if (event.allDay === true){\r\n                event.start = this.onlyDate(event.start)\r\n                event.end = this.onlyDate(event.end)\r\n            } else {\r\n                event.start = new Date(event.start)\r\n                event.end = new Date(event.end)        \r\n            }\r\n            event.class = event.cls\r\n            event.index = index\r\n            return event\r\n        },\r\n        \r\n        // list view\r\n        getEvents : function(){\r\n            axios({\r\n                method : \"GET\",\r\n                url : url,\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                }\r\n            }).then((response) => {\r\n                this.events = response.data.map((event, i) => {\r\n                    return this.parseEvent(event, i)\r\n                })\r\n            }).catch((error) => {\r\n                console.log(\"Failed to get song list\", error.response)\r\n            })\r\n        },\r\n\r\n        // create view\r\n        createEvent : function(){\r\n\r\n            axios({\r\n                method : \"POST\",\r\n                url : url,\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                    start : this.newDate[0],\r\n                    end : this.newDate[1],\r\n                    title : this.newEvent.title,\r\n                    content : this.newEvent.content,\r\n                    participants : JSON.stringify([ localStorage.getItem('user')])\r\n                }\r\n            }).then((response) => {\r\n                this.events.push( this.parseEvent(response.data))\r\n                this.openAdd = false,\r\n                this.newDate = [\r\n                    new Date(), \r\n                    new Date()\r\n                ]\r\n\r\n\r\n            }).catch((error) => {\r\n                console.log(\"Failed to get song list\", error.response);\r\n            });\r\n\r\n        },\r\n\r\n        // retrieve \r\n        onEventClick : function(event, e){\r\n            console.log(event, e)\r\n            this.selectedEvent = event\r\n            this.selectedEDate = [event.start, event.end]\r\n            this.openRetrieve = true\r\n        },\r\n\r\n        // update \r\n        updateEvent : function(){\r\n\r\n            axios({\r\n                method : \"PATCH\",\r\n                url : url + this.selectedEvent.id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    event_id : this.selectedEvent.id,\r\n                    start : this.selectedEDate[0],\r\n                    end : this.selectedEDate[1],\r\n                    title : this.selectedEvent.title,\r\n                    content : this.selectedEvent.content,\r\n                }\r\n            }).then((response) => {\r\n\r\n                this.events[this.selectedEvent.index] = this.parseEvent(response.data, this.selectedEvent.index )\r\n                this.selectedEvent = {}\r\n                this.selectedEDate = []\r\n                this.openRetrieve = false\r\n\r\n\r\n            }).catch((error) => {\r\n                console.log(\"Failed to get song list\", error.response);\r\n            });\r\n\r\n        },\r\n\r\n\r\n\r\n    },\r\n\r\n    mounted() {\r\n        this.getEvents()\r\n    }\r\n\r\n    \r\n\r\n\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n\r\n.v-dialog .v-overlay__content{\r\n    flex-direction : row;\r\n    justify-content : center\r\n}\r\n\r\n.vuecal--month-view .vuecal__cell {height: 100px;}\r\n\r\n.vuecal--month-view .vuecal__cell-content {\r\n  justify-content: flex-start;\r\n  height: 100%;\r\n  align-items: flex-end;\r\n}\r\n\r\n.vuecal--month-view .vuecal__cell-date {padding: 4px;}\r\n.vuecal--month-view .vuecal__no-event {display: none;}\r\n.vuecal--week-view .vuecal__no-event {display: none;}\r\n\r\n.vuecal__event.P {\r\n  background: rgb(255, 98, 98);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}