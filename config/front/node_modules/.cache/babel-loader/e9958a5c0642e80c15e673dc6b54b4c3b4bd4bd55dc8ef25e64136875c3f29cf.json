{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport setToken from \"@/utils/auth.js\";\nimport { mdiDelete } from \"@mdi/js\";\nlet song_url = \"http://127.0.0.1:8000/api/song/\"; // 장고 drf 서버 주소\n\nexport default {\n  name: \"PlayerSelect\",\n  data: () => {\n    return {\n      players: {\n        players: [{\n          user: {\n            name: 'cex'\n          },\n          position: 'cex1'\n        }]\n      },\n      //manage\n      player_header: [{\n        text: \"Positions\",\n        value: \"position\"\n      }, {\n        text: \"Select Player\",\n        value: \"player\"\n      }],\n      selectedPlayers: {},\n      selectedSongs: [],\n      openModal: false,\n      delItem: {\n        name: ''\n      },\n      icons: {\n        mdiDelete\n      }\n    };\n  },\n  props: ['song'],\n  methods: {\n    serialize: function (item) {\n      console.log(item);\n      let instruments = {};\n      let selectedPlayers = {};\n      let players = item.players;\n      let inst_list = Array();\n      players = players.map(player => {\n        player.name = player.user.name;\n        player = {\n          ...player\n        }; // Proxy to dictionary\n        return player;\n      });\n      for (let i in players) {\n        let position = players[i].position;\n        if (!(position in instruments)) {\n          instruments[position] = Array();\n          selectedPlayers[position] = \"\";\n        }\n        instruments[position].push(players[i]);\n      }\n      for (let index in item.instruments) {\n        let position = item.instruments[index];\n        inst_list.push({\n          'position': position,\n          'player': instruments[position],\n          'selected': \"\"\n        });\n      }\n      this.selectedPlayers = selectedPlayers;\n      return inst_list;\n    },\n    fix: function (song) {\n      axios({\n        method: \"PATCH\",\n        url: song_url + song.id + '/',\n        headers: setToken(),\n        params: {\n          user_id: localStorage.getItem('user'),\n          selectedPlayers: JSON.stringify(this.selectedPlayers),\n          action: \"fix\"\n        }\n      }).then(response => {\n        response;\n      }).catch(error => {\n        console.log(\"Failed to fix this song\", error.response);\n      });\n    }\n  },\n  mounted() {\n    console.log(\"here\", this.song);\n    this.players = this.song;\n  }\n};","map":{"version":3,"mappings":";AAqCA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,QAAO,MAAO,iBAAgB;AACrC,SAAQC,SAAS,QAAO,SAAQ;AAEhC,IAAIC,QAAO,GAAI,iCAAiC,EAAG;;AAEnD,eAAe;EACXC,IAAG,EAAI,cAAa;EAEpBC,IAAG,EAAI,MAAM;IAET,OAAO;MACHC,OAAM,EAAI;QACNA,OAAM,EAAI,CACN;UACIC,IAAG,EAAI;YACHH,IAAG,EAAI;UACX,CAAC;UACDI,QAAO,EAAI;QACf;MAER,CAAC;MACD;MACAC,aAAY,EAAI,CACZ;QAACC,IAAG,EAAI,WAAW;QAAEC,KAAI,EAAI;MAAU,CAAC,EACxC;QAACD,IAAG,EAAI,eAAe;QAAEC,KAAI,EAAI;MAAQ,CAAC,CAC7C;MAEDC,eAAc,EAAI,CAAC,CAAC;MACpBC,aAAY,EAAI,EAAE;MAClBC,SAAQ,EAAI,KAAK;MACjBC,OAAM,EAAI;QACNX,IAAG,EAAI;MACX,CAAC;MAEDY,KAAI,EAAI;QACJd;MACJ;IACJ;EACJ,CAAC;EAEDe,KAAI,EAAI,CAAC,MAAM,CAAC;EAEhBC,OAAM,EAAI;IACNC,SAAQ,EAAI,UAASC,IAAI,EAAC;MACtBC,OAAO,CAACC,GAAG,CAACF,IAAI;MAChB,IAAIG,WAAU,GAAI,CAAC;MACnB,IAAIX,eAAc,GAAI,CAAC;MACvB,IAAIN,OAAM,GAAIc,IAAI,CAACd,OAAM;MACzB,IAAIkB,SAAQ,GAAIC,KAAK,EAAC;MAEtBnB,OAAM,GAAIA,OAAO,CAACoB,GAAG,CAAEC,MAAM,IAAK;QAC9BA,MAAM,CAACvB,IAAG,GAAIuB,MAAM,CAACpB,IAAI,CAACH,IAAG;QAC7BuB,MAAK,GAAI;UAAE,GAAGA;QAAO,CAAC,EAAE;QACxB,OAAOA,MAAK;MAChB,CAAC;MAED,KAAK,IAAIC,KAAKtB,OAAO,EAAC;QAClB,IAAIE,QAAO,GAAIF,OAAO,CAACsB,CAAC,CAAC,CAACpB,QAAO;QACjC,IAAI,EAAEA,QAAO,IAAKe,WAAW,CAAC,EAAC;UAC3BA,WAAW,CAACf,QAAQ,IAAIiB,KAAK,EAAC;UAC9Bb,eAAe,CAACJ,QAAQ,IAAI,EAAC;QACjC;QACAe,WAAW,CAACf,QAAQ,CAAC,CAACqB,IAAI,CAACvB,OAAO,CAACsB,CAAC,CAAC;MACzC;MAEA,KAAK,IAAIE,KAAI,IAAKV,IAAI,CAACG,WAAW,EAAC;QAC/B,IAAIf,QAAO,GAAIY,IAAI,CAACG,WAAW,CAACO,KAAK;QACrCN,SAAS,CAACK,IAAI,CAAC;UACX,UAAS,EAAIrB,QAAQ;UACrB,QAAO,EAAIe,WAAW,CAACf,QAAQ,CAAC;UAChC,UAAS,EAAI;QACjB,CAAC;MACL;MACA,IAAI,CAACI,eAAc,GAAIA,eAAc;MACrC,OAAOY,SAAQ;IACnB,CAAC;IAEDO,GAAE,EAAI,UAASC,IAAI,EAAC;MAChBhC,KAAK,CAAC;QACFiC,MAAK,EAAI,OAAO;QAChBC,GAAE,EAAI/B,QAAO,GAAI6B,IAAI,CAACG,EAAC,GAAI,GAAG;QAC9BC,OAAM,EAAInC,QAAQ,EAAE;QACpBoC,MAAK,EAAI;UACLC,OAAM,EAAIC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;UACtC5B,eAAc,EAAI6B,IAAI,CAACC,SAAS,CAAC,IAAI,CAAC9B,eAAe,CAAC;UACtD+B,MAAK,EAAI;QACb;MACJ,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;QAClBA,QAAQ;MACZ,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;QAChB1B,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEyB,KAAK,CAACF,QAAQ,CAAC;MAC1D,CAAC,CAAC;IACN;EACJ,CAAC;EAGDG,OAAO,GAAE;IACL3B,OAAO,CAACC,GAAG,CAAC,MAAM,EAAE,IAAI,CAACU,IAAI;IAC7B,IAAI,CAAC1B,OAAM,GAAI,IAAI,CAAC0B,IAAG;EAC3B;AACJ","names":["axios","setToken","mdiDelete","song_url","name","data","players","user","position","player_header","text","value","selectedPlayers","selectedSongs","openModal","delItem","icons","props","methods","serialize","item","console","log","instruments","inst_list","Array","map","player","i","push","index","fix","song","method","url","id","headers","params","user_id","localStorage","getItem","JSON","stringify","action","then","response","catch","error","mounted"],"sourceRoot":"","sources":["C:\\schedule\\config\\front\\src\\components\\Song\\PlayerSelect.vue"],"sourcesContent":["<template>\r\n\r\n<v-card class=\"elevation-0 pa-2\">\r\n    <EasyDataTable\r\n        :headers=\"player_header\"\r\n        :items=\"serialize(players)\"\r\n        body-text-direction =\"center\"\r\n        header-text-direction = \"center\"\r\n        :hide-rows-per-page=\"true\"\r\n        show-index\r\n    >\r\n        <template #item-player=\"item\">\r\n            <td>\r\n                <v-select\r\n                v-model=\"selectedPlayers[item.position]\"\r\n                :items=\"item.player\"\r\n                item-title=\"name\"\r\n                item-value=\"id\"\r\n                density=\"compact\"\r\n                >                                      \r\n                </v-select>\r\n            </td>\r\n        </template>\r\n    </EasyDataTable>\r\n    <v-card-actions>\r\n        <v-btn width = \"100%\" @click=\"fix(item)\">\r\n            FIX\r\n        </v-btn>\r\n    </v-card-actions>\r\n</v-card>\r\n       \r\n</template>\r\n\r\n\r\n\r\n<script>\r\n\r\nimport axios from \"axios\";\r\nimport setToken from \"@/utils/auth.js\"\r\nimport {mdiDelete} from \"@mdi/js\"\r\n\r\nlet song_url = \"http://127.0.0.1:8000/api/song/\";  // 장고 drf 서버 주소\r\n\r\nexport default {\r\n    name : \"PlayerSelect\" , \r\n\r\n    data : () => {\r\n\r\n        return {\r\n            players : {\r\n                players : [\r\n                    {\r\n                        user : {\r\n                            name : 'cex'\r\n                        },\r\n                        position : 'cex1'\r\n                    }\r\n                ]\r\n            },\r\n            //manage\r\n            player_header : [\r\n                {text : \"Positions\", value : \"position\"},\r\n                {text : \"Select Player\", value : \"player\"},\r\n            ],\r\n\r\n            selectedPlayers : {},\r\n            selectedSongs : [],\r\n            openModal : false,\r\n            delItem : {\r\n                name : ''\r\n            },\r\n\r\n            icons : {\r\n                mdiDelete\r\n            }\r\n        }\r\n    },\r\n\r\n    props : ['song'],\r\n\r\n    methods : { \r\n        serialize : function(item){\r\n            console.log(item)\r\n            let instruments = {}\r\n            let selectedPlayers = {}\r\n            let players = item.players\r\n            let inst_list = Array()\r\n\r\n            players = players.map((player) => {\r\n                player.name = player.user.name\r\n                player = { ...player }; // Proxy to dictionary\r\n                return player\r\n            })\r\n\r\n            for (let i in players){\r\n                let position = players[i].position\r\n                if (!(position in instruments)){\r\n                    instruments[position] = Array()\r\n                    selectedPlayers[position] = \"\"\r\n                }\r\n                instruments[position].push(players[i])\r\n            }\r\n\r\n            for (let index in item.instruments){\r\n                let position = item.instruments[index]\r\n                inst_list.push({\r\n                    'position' : position,\r\n                    'player' : instruments[position],\r\n                    'selected' : \"\"\r\n                })\r\n            }\r\n            this.selectedPlayers = selectedPlayers\r\n            return inst_list\r\n        },\r\n\r\n        fix : function(song){\r\n            axios({\r\n                method : \"PATCH\",\r\n                url : song_url + song.id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                    selectedPlayers : JSON.stringify(this.selectedPlayers),\r\n                    action : \"fix\"\r\n                }\r\n            }).then((response) => {\r\n                response;\r\n            }).catch((error) => {\r\n                console.log(\"Failed to fix this song\", error.response);\r\n            });\r\n        },\r\n    },\r\n\r\n\r\n    mounted(){\r\n        console.log(\"here\", this.song)\r\n        this.players = this.song\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n\r\n.customize-table{\r\n    --easy-table-body-item-padding : 0px, 0px;\r\n    --easy-table-body-row-height : 24px!important;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}