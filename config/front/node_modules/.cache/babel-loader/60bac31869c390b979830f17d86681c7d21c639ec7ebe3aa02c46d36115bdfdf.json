{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3b3d79fe\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"text-left\"\n}, \" Name \"), /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"text-center\"\n}, \" requirement \")])], -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"text-center\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_textarea = _resolveComponent(\"v-textarea\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_table = _resolveComponent(\"v-table\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    class: \"posting-container\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        class: \"text-h2 text-start active mb-2\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" New Song \")]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" Title \"), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, null, {\n        default: _withCtx(() => [_createVNode(_component_v_text_field, {\n          modelValue: _ctx.title,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.title = $event),\n          placeholder: \"Title\",\n          name: \"title\",\n          type: \"text\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, null, {\n        default: _withCtx(() => [_createVNode(_component_v_text_field, {\n          modelValue: _ctx.artist,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.artist = $event),\n          placeholder: \"Artist\",\n          name: \"artist\",\n          type: \"text\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" Content \"), _createCommentVNode(\" Text Editor : TipTap https://uxgjs.tistory.com/220 \"), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, null, {\n        default: _withCtx(() => [_createVNode(_component_v_textarea, {\n          modelValue: _ctx.content,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.content = $event),\n          name: \"input-7-4\",\n          value: _ctx.content\n        }, null, 8 /* PROPS */, [\"modelValue\", \"value\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" button \"), _createVNode(_component_v_row, {\n      class: \"text-start\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        class: \"btn-container\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_btn, {\n          class: \"ma-2\",\n          outlined: \"\",\n          color: \"indigo\",\n          onClick: _cache[3] || (_cache[3] = $event => $options.createSong())\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" Create! \")]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_table, null, {\n      default: _withCtx(() => [_hoisted_1, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.positions, item => {\n        return _openBlock(), _createElementBlock(\"tr\", {\n          key: item.name\n        }, [_createElementVNode(\"td\", null, _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_2, [_createVNode(_component_v_btn, {\n          class: \"elevation-0\",\n          icon: \"mdi-minus\",\n          size: \"small\",\n          onClick: $event => $options.subtract(item)\n        }, null, 8 /* PROPS */, [\"onClick\"]), _createTextVNode(\" \" + _toDisplayString(item.requirement) + \" ëª… \", 1 /* TEXT */), _createVNode(_component_v_btn, {\n          class: \"elevation-0\",\n          icon: \"mdi-plus\",\n          size: \"small\",\n          onClick: $event => $options.add(item)\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"+\")]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])])]);\n      }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, [_createVNode(_component_v_text_field, {\n        modelValue: _ctx.newPosition,\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.newPosition = $event),\n        variant: \"underlined\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]), _createElementVNode(\"td\", null, [_createVNode(_component_v_btn, {\n        class: \"elevation-0\",\n        width: \"100%\",\n        onClick: _cache[5] || (_cache[5] = $event => $options.addPosition())\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" Add New Position \")]),\n        _: 1 /* STABLE */\n      })])])])]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":";;gEA6CYA,oBASQ,6BARJA,oBAOK,0BANDA,oBAEK;EAFDC,KAAK,EAAC;AAAW,GAAC,QAEtB,gBACAD,oBAEK;EAFDC,KAAK,EAAC;AAAa,GAAC,eAExB;;EASIA,KAAK,EAAC;AAAa;;;;;;;;;uBA5DvCC,aAiFcC;IAjFDF,KAAK,EAAG;EAAmB;sBAEpC,MAGQ,CAHRG,aAGQC;wBAFJ,MACQ,CADRD,aACQE;QADDL,KAAK,EAAE;MAAgC;0BAAC,MAC/C,kBAD+C,YAC/C;;;;;QAEJM,8BAAc,EACdH,aAIQC;wBAHJ,MAEQ,CAFRD,aAEQE;0BADJ,MAA0F,CAA1FF,aAA0FI;sBAAnEC,UAAK;qEAALA,UAAK;UAAEC,WAAW,EAAC,OAAO;UAACC,IAAI,EAAC,OAAO;UAACC,IAAI,EAAC;;;;;;QAG5ER,aAIQC;wBAHJ,MAEQ,CAFRD,aAEQE;0BADJ,MAA6F,CAA7FF,aAA6FI;sBAAtEC,WAAM;qEAANA,WAAM;UAAEC,WAAW,EAAC,QAAQ;UAACC,IAAI,EAAC,QAAQ;UAACC,IAAI,EAAC;;;;;;QAI/EL,gCAAgB,EAChBA,2EAA2D,EAC3DH,aAQQC;wBAPJ,MAMQ,CANRD,aAMQE;0BALJ,MAIc,CAJdF,aAIcS;sBAHLJ,YAAO;qEAAPA,YAAO;UAChBE,IAAI,EAAC,WAAW;UACfG,KAAK,EAAEL;;;;;;QAIhBF,+BAAe,EACfH,aAWQC;MAXDJ,KAAK,EAAC;IAAY;wBACrB,MASQ,CATRG,aASQE;QATDL,KAAK,EAAC;MAAe;0BACxB,MAOQ,CAPRG,aAOQW;UANRd,KAAK,EAAC,MAAM;UACZe,QAAQ,EAAR,EAAQ;UACRC,KAAK,EAAC,QAAQ;UACbC,OAAK,sCAAEC,mBAAU;;4BACjB,MAED,kBAFC,WAED;;;;;;;;QAINf,aAoCQgB;wBAnCN,MASQ,CATRC,UASQ,EACRrB,oBAuBQ,mCAtBJsB,oBASKC,6BARcd,cAAS,EAAjBe,IAAI;6BADfF,oBASK;UAPAG,GAAG,EAAED,IAAI,CAACb;YAEXX,oBAAwB,6BAAjBwB,IAAI,CAACb,IAAI,kBAChBX,oBAG+F,MAH/F0B,UAG+F,GAF3FtB,aAA2FW;UAApFd,KAAK,EAAG,aAAa;UAAC0B,IAAI,EAAC,WAAW;UAACC,IAAI,EAAC,OAAO;UAAEV,OAAK,YAAEC,iBAAQ,CAACK,IAAI;+DAAW,GAC3F,oBAAGA,IAAI,CAACK,WAAW,IAAG,KACtB,8BAAsFd;UAA/Ed,KAAK,EAAG,aAAa;UAAC0B,IAAI,EAAC,UAAU;UAACC,IAAI,EAAC,OAAO;UAAEV,OAAK,YAAEC,YAAG,CAACK,IAAI;;4BAAG,MAAC,kBAAD,GAAC;;;sCAEtFxB,oBAUK,aATDA,oBAGK,aAFDI,aACeI;oBADQC,gBAAW;mEAAXA,gBAAW;QAAEqB,OAAO,EAAC;iDAGhD9B,oBAIK,aAHDI,aAEQW;QAFDd,KAAK,EAAC,aAAa;QAAC8B,KAAK,EAAC,MAAM;QAAEb,OAAK,sCAAEC,oBAAW;;0BAAI,MAE/D,kBAF+D,oBAE/D","names":["_createElementVNode","class","_createBlock","_component_v_container","_createVNode","_component_v_row","_component_v_col","_createCommentVNode","_component_v_text_field","_ctx","placeholder","name","type","_component_v_textarea","value","_component_v_btn","outlined","color","onClick","$options","_component_v_table","_hoisted_1","_createElementBlock","_Fragment","item","key","_hoisted_2","icon","size","requirement","variant","width"],"sourceRoot":"","sources":["C:\\schedule\\config\\front\\src\\views\\Song\\SongCreate.vue"],"sourcesContent":["<template>\r\n    <v-container class = \"posting-container\">\r\n\r\n        <v-row>\r\n            <v-col class =\"text-h2 text-start active mb-2\"> New Song\r\n            </v-col>\r\n        </v-row>\r\n        <!-- Title -->\r\n        <v-row>\r\n            <v-col> \r\n                <v-text-field v-model=\"title\" placeholder=\"Title\" name=\"title\" type=\"text\"></v-text-field>\r\n            </v-col>\r\n        </v-row>\r\n        <v-row>\r\n            <v-col> \r\n                <v-text-field v-model=\"artist\" placeholder=\"Artist\" name=\"artist\" type=\"text\"></v-text-field>\r\n            </v-col>\r\n        </v-row>\r\n\r\n        <!-- Content -->\r\n        <!-- Text Editor : TipTap https://uxgjs.tistory.com/220 -->\r\n        <v-row>\r\n            <v-col> \r\n                <v-textarea\r\n                v-model=\"content\"\r\n                name=\"input-7-4\"\r\n                :value=\"content\"\r\n                ></v-textarea>\r\n            </v-col>\r\n        </v-row>\r\n        <!-- button -->\r\n        <v-row class=\"text-start\">\r\n            <v-col class=\"btn-container\">\r\n                <v-btn\r\n                class=\"ma-2\"\r\n                outlined\r\n                color=\"indigo\"\r\n                @click=\"createSong()\"\r\n                >\r\n                Create!  \r\n                </v-btn>\r\n            </v-col>\r\n        </v-row>\r\n\r\n          <v-table>\r\n            <thead>\r\n                <tr>\r\n                    <th class=\"text-left\">\r\n                    Name\r\n                    </th>\r\n                    <th class=\"text-center\">\r\n                    requirement\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr\r\n                    v-for=\"item in positions\"\r\n                    :key=\"item.name\"\r\n                >\r\n                    <td>{{ item.name }}</td>\r\n                    <td class=\"text-center\">\r\n                        <v-btn class = \"elevation-0\" icon=\"mdi-minus\" size=\"small\" @click=\"subtract(item)\"></v-btn>\r\n                        {{ item.requirement }} ëª…\r\n                        <v-btn class = \"elevation-0\" icon=\"mdi-plus\" size=\"small\" @click=\"add(item)\">+</v-btn></td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <v-text-field v-model=\"newPosition\" variant=\"underlined\">\r\n                        </v-text-field>\r\n                    </td>\r\n                    <td>\r\n                        <v-btn class=\"elevation-0\" width=\"100%\" @click=\"addPosition()\">\r\n                            Add New Position\r\n                        </v-btn>\r\n                    </td>\r\n                </tr>\r\n\r\n            </tbody>\r\n            \r\n        </v-table>\r\n\r\n    </v-container>\r\n\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport setToken from \"@/utils/auth.js\"\r\n\r\nlet url = \"http://127.0.0.1:8000/api/song/\";  // ìž¥ê³  drf ì„œë²„ ì£¼ì†Œ\r\n\r\nexport default {\r\n    \r\n    name : \"SongCreate\",\r\n\r\n    data : () => {\r\n        return {\r\n            title : \"\",\r\n            artist : \"\",\r\n            content : \"\",\r\n            newPosition : \"\",\r\n            positions: [\r\n                {\r\n                    name: 'Vocal',\r\n                    requirement: 0,\r\n                },\r\n                {\r\n                    name: 'Guitar',\r\n                    requirement: 0,\r\n                },\r\n                {\r\n                    name: 'Bass',\r\n                    requirement: 0,\r\n                },\r\n                {\r\n                    name: 'Drum',\r\n                    requirement: 0,\r\n                },\r\n                {\r\n                    name: 'Keyboard',\r\n                    requirement: 0,\r\n                },\r\n          \r\n        ],\r\n            }\r\n        },\r\n\r\n    components : {\r\n    },\r\n    \r\n    methods: {\r\n        subtract : function(item){\r\n            if (item.requirement - 1 >= 0){\r\n                item.requirement = item.requirement - 1\r\n            }\r\n        },\r\n\r\n        add : function(item){\r\n            item.requirement = item.requirement + 1\r\n        },\r\n\r\n        addPosition : function(){\r\n            let existingPosition = false\r\n            for (let i in this.positions){\r\n                if (this.positions[i].name === this.newPosition){\r\n                    this.positions[i].requirement += 1\r\n                    existingPosition = true\r\n                }\r\n            }\r\n            \r\n            if (!existingPosition){\r\n                this.positions.push({\r\n                    name : this.newPosition,\r\n                    requirement : 1\r\n                })\r\n            }\r\n            this.newPosition = \"\"\r\n\r\n        },\r\n\r\n        createSong : function(){\r\n            console.log( this.$route.params.project_id)\r\n            axios({\r\n                method : \"POST\",\r\n                url : url,\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                    project_id : this.$route.params.project_id,\r\n                    title : this.title,\r\n                    artist : this.artist,\r\n                    content: this.content,\r\n                    positions : JSON.stringify(this.positions)\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(response)\r\n                this.$router.push({\r\n                    name : 'song_list'\r\n                    // name : 'project_retreive',\r\n                    // params : {\r\n                    // project_id : this.$route.params.project_id\r\n                    // },\r\n                })\r\n            }).catch((error) => {\r\n                console.log(\"Failed to get retreival\", error.response);\r\n            });\r\n        },\r\n\r\n    },\r\n\r\n    mounted() {\r\n\r\n    }\r\n\r\n    }\r\n</script>\r\n\r\n\r\n<style scoped>\r\n    .btn-container{\r\n        margin-left: auto!important;\r\n    }\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}