{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport setToken from \"@/utils/auth.js\";\n// import { Header, Item } from \"vue3-easy-data-table\";\n\nlet url = \"http://127.0.0.1:8000/api/project/\"; // 장고 drf 서버 주소\nlet song_url = \"http://127.0.0.1:8000/api/song/\"; // 장고 drf 서버 주소\n\nexport default {\n  name: \"ProjectRetrieve\",\n  data: () => {\n    return {\n      // windows\n      windowHeight: window.innerHeight,\n      windowWidth: window.innerWidth,\n      // project\n      project: \"\",\n      //songs\n      songs: [],\n      headers: [{\n        text: 'Artist',\n        value: 'artist'\n      }, {\n        text: 'Title',\n        value: 'title'\n      }, {\n        text: 'Vocal',\n        value: 'Vocal'\n      }, {\n        text: 'Guitar1',\n        value: 'Guitar1'\n      }, {\n        text: 'Guitar2',\n        value: 'Guitar2'\n      }, {\n        text: 'Bass',\n        value: 'Bass'\n      }, {\n        text: 'Drum',\n        value: 'Drum'\n      }, {\n        text: 'Keyboard',\n        value: 'Keyboard'\n      }],\n      delFrom: \"\",\n      // positions\n      pos_headers: [{\n        text: \"Name\",\n        value: \"name\"\n      }, {\n        text: \"Position\",\n        value: \"position\"\n      }],\n      selected_position: \"\",\n      openModal: false,\n      delPosition: \"\",\n      manage: false,\n      //manage\n      manage_header: [{\n        text: \"Positions\",\n        value: \"position\"\n      }, {\n        text: \"Select Player\",\n        value: \"player\"\n      }],\n      instruments: {},\n      fixed: \"\",\n      fixedPosition: {\n\n        // ??\n        // 셀렉트할때마다 값을 더함.\n      }\n    };\n  },\n  components: {},\n  methods: {\n    retrieveProject: function () {\n      axios({\n        method: \"GET\",\n        url: url + this.$route.params.project_id + '/',\n        headers: setToken(),\n        params: {\n          user_id: localStorage.getItem('user')\n        }\n      }).then(response => {\n        this.project = response.data;\n        this.songs = this.project.songs.map((song, index) => {\n          song.index = index;\n          return song;\n        });\n      }).catch(error => {\n        console.log(\"Failed to get retreival\", error.response);\n      });\n    },\n    setIndex: function (old_val, new_val) {\n      new_val.index = old_val.index;\n      return new_val;\n    },\n    to: function () {\n      // console.log(this.$router)\n      this.$router.push({\n        name: 'song_create',\n        params: {\n          project_id: this.$route.params.project_id\n        }\n      });\n    },\n    applyPosition: function (song) {\n      axios({\n        method: \"PATCH\",\n        url: song_url + song.id + '/',\n        headers: setToken(),\n        params: {\n          user_id: localStorage.getItem('user'),\n          position: this.selected_position,\n          action: \"apply\"\n        }\n      }).then(response => {\n        this.songs[song.index] = this.setIndex(song, response.data);\n      }).catch(error => {\n        console.log(\"Failed to update song\", error.response);\n      });\n    },\n    selectSong: function (index) {\n      this.delFrom = this.songs[index];\n    },\n    deleteModal: function (item) {\n      // item의 user와 현재 user가 같은지?\n      if (item.user.id === parseInt(localStorage.getItem(\"user\"))) {\n        this.delPosition = item;\n        this.openModal = true;\n      }\n    },\n    quitPosition: function () {\n      axios({\n        method: \"PATCH\",\n        url: song_url + this.delFrom.id + '/',\n        headers: setToken(),\n        params: {\n          user_id: localStorage.getItem('user'),\n          position: this.delPosition.position,\n          action: \"quit\"\n        }\n      }).then(response => {\n        this.openModal = false;\n        this.songs[this.delFrom.index] = this.setIndex(this.delFrom, response.data);\n      }).catch(error => {\n        console.log(\"Failed to quit from the song\", error.response);\n      });\n    },\n    serialize: function (item) {\n      let instruments = {};\n      let selectedPlayers = {};\n      let players = item.players;\n      players = players.map(player => {\n        player.name = player.user.name;\n        player = {\n          ...player\n        }; // Proxy to dictionary\n        return player;\n      });\n      let inst_list = Array();\n      for (let i in players) {\n        let position = players[i].position;\n        if (!(position in instruments)) {\n          instruments[position] = Array();\n          selectedPlayers[position] = \"\";\n        }\n        instruments[position].push(players[i]);\n      }\n      for (let index in item.instruments) {\n        let position = item.instruments[index];\n        inst_list.push({\n          'position': position,\n          'player': instruments[position],\n          'selected': \"\"\n        });\n      }\n      this.selectedPlayers = selectedPlayers;\n      return inst_list;\n    },\n    updateFixedPosition: function (item) {\n      console.log(\"updating\", this.fixedPosition);\n      this.fixedPosition[item.position] = item.player;\n    },\n    fix: function (song) {\n      song;\n      this.fi;\n      // 확정 정보를 넘겨줘야 함. \n    },\n\n    log: function (item) {\n      console.log(item), console.log(this.selectedPlayers);\n    }\n  },\n  mounted() {\n    this.retrieveProject();\n    window.onresize = () => {\n      this.windowHeight = window.innerHeight;\n    };\n  },\n  watch: {\n    songs: {\n      handler: function (newVal, oldVal) {\n        newVal;\n        oldVal;\n      },\n      deep: true,\n      immediate: true\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","setToken","url","song_url","name","data","windowHeight","window","innerHeight","windowWidth","innerWidth","project","songs","headers","text","value","delFrom","pos_headers","selected_position","openModal","delPosition","manage","manage_header","instruments","fixed","fixedPosition","components","methods","retrieveProject","method","$route","params","project_id","user_id","localStorage","getItem","then","response","map","song","index","catch","error","console","log","setIndex","old_val","new_val","to","$router","push","applyPosition","id","position","action","selectSong","deleteModal","item","user","parseInt","quitPosition","serialize","selectedPlayers","players","player","inst_list","Array","i","updateFixedPosition","fix","fi","mounted","onresize","watch","handler","newVal","oldVal","deep","immediate"],"sourceRoot":"","sources":["C:\\schedule\\config\\front\\src\\views\\ProjectRetrieve.vue"],"sourcesContent":["<template>\r\n    \r\n    <v-container class = \"mb-6\">\r\n        <!-- 헤더 -->\r\n        <v-container>\r\n        <v-parallax\r\n            id = \"parralax\"\r\n            class = \"rounded-xl\"\r\n            :width=\"windowWidth\"\r\n            height=\"200px\"\r\n        >\r\n            <v-row class=\"blurred align-center justify-start rounded-xl ma-0\">\r\n                <v-col class = \"ma-4\">\r\n                <h1 class = \"font-weight-medium text-white\">\r\n                    {{project.title}}\r\n                </h1>\r\n                </v-col>\r\n\r\n            <!-- title :src=\"require('@/assets/wallpaper.jpg')\" -->\r\n            <!-- body -->\r\n            <!-- buttons -->\r\n            <v-btn @click=\"to()\">\r\n                Create Song\r\n            </v-btn>\r\n            </v-row>\r\n        </v-parallax>\r\n        </v-container>\r\n        <!-- 바디 -->\r\n        \r\n        <v-container>\r\n            <!-- 선곡 테이블. 확정 여부로 필터링 가능하게. 곡 생성하면 기본적으로 선곡모드. 매니저가 픽스 박으면 확정모드. -->\r\n            <EasyDataTable\r\n                :headers=\"headers\"\r\n                :items=\"songs\"\r\n                @expand-row=\"selectSong\"\r\n            >\r\n                <template #expand=\"item\">\r\n                    <v-card v-if=\"manage\">\r\n                        <!-- 세션 별 선택 -->\r\n                        <!-- 확정모드로 변경. 그러려면 모드가 3개있어야 함. 선곡, 관리, 확정 -->\r\n                        <!-- 세션 하나씩 확정? 그러면 확정된 세션에는 지원 불가능하게 하는 기능도 있어야 함 -->\r\n                        <!-- 별로 좋아보이진 않는데.. 그냥 하자 -->\r\n                        <v-card-title>\r\n                            MANAGE MODE\r\n                        </v-card-title>\r\n                        <EasyDataTable\r\n                            :headers=\"manage_header\"\r\n                            :items=\"serialize(item)\"\r\n                        >\r\n                        <template #item-position=\"item\">\r\n                            <td @click=\"log(item)\">\r\n                                {{item.position}}\r\n                            </td>\r\n                        </template>\r\n                            <template #item-player=\"item\">\r\n                                \r\n                                <td>\r\n                                    <!-- item의 개수는 가변임. 키도 막 달라짐 -->\r\n                                    <!-- instrument를 받으면 그에 맞게 바로 세팅을 해야되나?  -->\r\n                                    <!-- v-model=\"selectedPlayers[item.position]\" -->\r\n                                    <v-select\r\n                                    v-model=\"item.selected\"\r\n                                    :items=\"item.player\"\r\n                                    item-title=\"name\"\r\n                                    item-value=\"user\"\r\n                                    density=\"compact\"\r\n                                    @change=\"updateFixedPosition(item)\"\r\n                                    >\r\n                                     <!-- @update=\"updateFixedPosition(item)\" -->\r\n                                      \r\n                                    </v-select>\r\n                                </td>\r\n                            </template>\r\n                        </EasyDataTable>\r\n                        <v-card-actions>\r\n                            <v-btn width = \"100%\" @click=\"fix(item)\">\r\n                                FIX\r\n                            </v-btn>\r\n                        </v-card-actions>\r\n\r\n\r\n                    </v-card>\r\n                    <!-- 선곡모드 :: 추가 링크, 유툽, 뭐.. 줄 선 사람 리스트? 특수 세션 등 -->\r\n                    <v-card v-else>\r\n                        <v-row>\r\n                            <!-- title -->\r\n                            <v-col cols=\"4\">\r\n                                <v-card-title>\r\n                                    <h3>\r\n                                        {{item.title}}\r\n                                    </h3>\r\n                                    <h6>\r\n                                        {{item.artist}}\r\n                                    </h6>\r\n                                </v-card-title>\r\n                                <v-card-text>\r\n                                    <h2> 비고</h2>\r\n                                </v-card-text>\r\n                                <v-card-text class=\"text-start\">\r\n                                    {{item.content}}\r\n                                </v-card-text>\r\n                                <v-card-actions>\r\n                                    <v-btn width=\"100%\" @click=\"manage=true\">\r\n                                        Fix\r\n                                    </v-btn>\r\n                                </v-card-actions>\r\n                            </v-col>\r\n                        <v-col>\r\n                            <!-- 비고 -->\r\n                            <h3> 지원하기 </h3>\r\n                            <v-row>\r\n                                <v-col>\r\n                                    <v-select\r\n                                        v-model=\"selected_position\"\r\n                                        :items=\"item.instruments\"\r\n                                        item-title=\"name\"\r\n                                        item-value=\"name\"\r\n                                        label=\"Position\"\r\n                                        density=\"compact\"\r\n                                    ></v-select>\r\n                                </v-col>\r\n                                <v-col>\r\n                                    <v-btn\r\n                                    class=\"ma-2\"\r\n                                    outlined\r\n                                    color=\"indigo\"\r\n                                    @click=\"applyPosition(item)\"\r\n                                    >\r\n                                    Apply!  \r\n                                    </v-btn>\r\n\r\n                                </v-col>\r\n                            </v-row>\r\n\r\n                            <!-- 세션 지원 및 현황 -->\r\n                                <EasyDataTable\r\n                                    :headers=\"pos_headers\"\r\n                                    :items=\"item.players\"\r\n                                    @click-row=\"deleteModal\"\r\n                                >\r\n                                    <template #item-name=\"{user}\">\r\n                                        <td>\r\n                                            {{user.name}}\r\n                                        </td>\r\n                                    </template>\r\n                                </EasyDataTable>\r\n                        </v-col>\r\n                        </v-row>\r\n                    </v-card>\r\n                    <!-- item마다 확정인지 아닌지를 보여주는 field 필요 -->\r\n                    <!-- <v-card v-else-if=\"mode==='fix'\"> Fix </v-card> -->\r\n\r\n                </template>\r\n\r\n            </EasyDataTable>\r\n\r\n\r\n\r\n        </v-container>\r\n\r\n        <v-dialog v-model =\"openModal\" >\r\n            <v-card max-width=\"600px\" class=\"dialog\">\r\n                <v-card-title>\r\n                    Quit from {{this.delFrom.title}}\r\n                </v-card-title>\r\n                <v-card-text>\r\n                    Are you sure to quit from {{this.delPosition.position}} from {{this.delFrom.title}}?\r\n                </v-card-text>\r\n                <v-card-actions>\r\n                    <v-btn color=\"error\"  variant=\"outlined\" width=\"100%\" @click=\"quitPosition\">\r\n                        Quit\r\n                    </v-btn>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n\r\n    </v-container>\r\n\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport setToken from \"@/utils/auth.js\"\r\n// import { Header, Item } from \"vue3-easy-data-table\";\r\n\r\nlet url = \"http://127.0.0.1:8000/api/project/\";  // 장고 drf 서버 주소\r\nlet song_url = \"http://127.0.0.1:8000/api/song/\";  // 장고 drf 서버 주소\r\n\r\n\r\n\r\nexport default {\r\n    \r\n    name : \"ProjectRetrieve\",\r\n\r\n    data : () => {\r\n        return {\r\n            // windows\r\n            windowHeight : window.innerHeight,\r\n            windowWidth : window.innerWidth,\r\n            \r\n            // project\r\n            project : \"\",\r\n\r\n            //songs\r\n            songs : [],\r\n            headers : [\r\n                    {text : 'Artist', value : 'artist'},\r\n                    {text : 'Title', value : 'title'},\r\n                    {text : 'Vocal', value : 'Vocal'},\r\n                    {text : 'Guitar1', value : 'Guitar1'},\r\n                    {text : 'Guitar2', value : 'Guitar2'},\r\n                    {text : 'Bass', value : 'Bass'},\r\n                    {text : 'Drum', value : 'Drum'},\r\n                    {text : 'Keyboard', value : 'Keyboard'},\r\n            ],\r\n            delFrom : \"\",\r\n            \r\n            // positions\r\n            pos_headers : [\r\n                {text : \"Name\", value : \"name\"},\r\n                {text : \"Position\", value : \"position\"},\r\n            ],\r\n            selected_position : \"\",\r\n            openModal : false,\r\n            delPosition : \"\",\r\n            manage : false,\r\n\r\n            //manage\r\n            manage_header : [\r\n                {text : \"Positions\", value : \"position\"},\r\n                {text : \"Select Player\", value : \"player\"},\r\n            ],\r\n            instruments : {},\r\n            fixed : \"\",\r\n            fixedPosition : {\r\n                \r\n                // ??\r\n                // 셀렉트할때마다 값을 더함.\r\n            }\r\n            \r\n\r\n        }\r\n    },\r\n\r\n    components : {\r\n    },\r\n    \r\n    methods: {\r\n        \r\n        retrieveProject : function(){\r\n            axios({\r\n                method : \"GET\",\r\n                url : url + this.$route.params.project_id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                }\r\n            }).then((response) => {\r\n                this.project = response.data\r\n                this.songs = this.project.songs.map( (song, index) => {\r\n                    song.index = index\r\n                    return song\r\n                })\r\n            }).catch((error) => {\r\n                console.log(\"Failed to get retreival\", error.response);\r\n            });\r\n        },\r\n\r\n        setIndex : function(old_val, new_val){\r\n            new_val.index = old_val.index\r\n            return new_val\r\n        }, \r\n\r\n        to : function(){\r\n            // console.log(this.$router)\r\n            this.$router.push({\r\n                name : 'song_create',\r\n                params : {\r\n                    project_id : this.$route.params.project_id\r\n                }})\r\n        },\r\n\r\n        applyPosition : function(song){\r\n            axios({\r\n                method : \"PATCH\",\r\n                url : song_url + song.id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                    position : this.selected_position,\r\n                    action : \"apply\"\r\n                }\r\n            }).then((response) => {\r\n                this.songs[song.index] = this.setIndex(song, response.data)\r\n            }).catch((error) => {\r\n                console.log(\"Failed to update song\", error.response);\r\n            });\r\n        },\r\n\r\n        selectSong : function(index){\r\n            this.delFrom = this.songs[index]\r\n        },\r\n\r\n        deleteModal : function(item){\r\n            // item의 user와 현재 user가 같은지?\r\n            if (item.user.id === parseInt(localStorage.getItem(\"user\"))){\r\n                this.delPosition = item\r\n                this.openModal = true\r\n            } \r\n        },\r\n\r\n        quitPosition : function(){\r\n            axios({\r\n                method : \"PATCH\",\r\n                url : song_url + this.delFrom.id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                    position : this.delPosition.position,\r\n                    action : \"quit\"\r\n                }\r\n            }).then((response) => {\r\n                this.openModal = false\r\n                this.songs[this.delFrom.index] = this.setIndex(this.delFrom, response.data)\r\n            }).catch((error) => {\r\n                console.log(\"Failed to quit from the song\", error.response);\r\n            });\r\n        },\r\n\r\n        serialize : function(item){\r\n\r\n            let instruments = {}\r\n            let selectedPlayers = {}\r\n            let players = item.players\r\n\r\n            players = players.map((player) => {\r\n                player.name = player.user.name\r\n                player = { ...player }; // Proxy to dictionary\r\n                return player\r\n            })\r\n\r\n            let inst_list = Array()\r\n            \r\n            for (let i in players){\r\n                let position = players[i].position\r\n                if (!(position in instruments)){\r\n                    instruments[position] = Array()\r\n                    selectedPlayers[position] = \"\"\r\n                }\r\n                instruments[position].push(players[i])\r\n            }\r\n\r\n            for (let index in item.instruments){\r\n                let position = item.instruments[index]\r\n                inst_list.push({\r\n                    'position' : position,\r\n                    'player' : instruments[position],\r\n                    'selected' : \"\"\r\n                })\r\n            }\r\n\r\n            this.selectedPlayers = selectedPlayers\r\n\r\n            return inst_list\r\n        },\r\n\r\n        updateFixedPosition : function(item){\r\n            console.log(\"updating\",  this.fixedPosition)\r\n            this.fixedPosition[item.position] = item.player \r\n        },\r\n        \r\n        fix : function(song){\r\n            song;\r\n            this.fi\r\n            // 확정 정보를 넘겨줘야 함. \r\n\r\n        },\r\n        log : function(item) {\r\n            console.log(item),\r\n            console.log(this.selectedPlayers)\r\n        }\r\n\r\n    },\r\n\r\n    mounted() {\r\n        this.retrieveProject()\r\n        window.onresize = () => {\r\n            this.windowHeight = window.innerHeight\r\n        }\r\n\r\n    },\r\n\r\n    watch : {\r\n        songs : {\r\n            handler: function(newVal, oldVal){\r\n                newVal; oldVal\r\n            },\r\n            deep : true,\r\n            immediate : true\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n#parralax{\r\n    background-image : url('~@/assets/wallpaper.jpg');\r\n    background-size: cover;\r\n\r\n}\r\n\r\n.posting-container{\r\n    width: 80%;\r\n}\r\n\r\n\r\n.btn-container{\r\n    margin-left: auto!important;\r\n}\r\n\r\n.blurred{\r\n    background: rgba(0, 0, 0, 0.2);\r\n    backdrop-filter: blur(2px);\r\n    width : 100% !important;\r\n    height:  100% !important;\r\n}\r\n\r\n.dialog{\r\n    margin-left: auto!important; margin-right: auto!important; \r\n}\r\n\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}