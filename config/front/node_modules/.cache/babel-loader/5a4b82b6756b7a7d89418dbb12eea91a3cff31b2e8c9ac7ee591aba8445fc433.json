{"ast":null,"code":"// import { onMounted, ref, Ref } from 'vue'\n// import { useRoute, useRouter } from 'vue-router'\n\n// const route = useRoute()\n// const router = useRouter()\n\nexport default {\n  name: \"ManageStatus\",\n  data: () => {\n    return {\n      // route : useRoute(),\n      // router : useRouter(),\n      project_id: -1,\n      status: \"P\",\n      statusOptions: [{\n        name: \"Prepare\",\n        value: \"P\",\n        color: \"orange\"\n      }, {\n        name: \"Ready\",\n        value: \"R\",\n        color: \"success\"\n      }, {\n        name: \"OnGoing\",\n        value: \"O\",\n        color: \"primary\"\n      }, {\n        name: \"Done\",\n        value: \"D\",\n        color: \"error\"\n      }]\n    };\n  },\n  methods: {\n    save: function () {}\n  },\n  mounted() {\n    this.status = this.$route.query.status;\n    this.project_id = this.$route.query.project_id;\n    console.log(this.status);\n  }\n};","map":{"version":3,"mappings":"AAyBA;AACA;;AAEA;AACA;;AAEA,eAAe;EACXA,IAAG,EAAI,cAAa;EAGpBC,IAAG,EAAI,MAAM;IACT,OAAO;MACC;MACA;MACAC,UAAS,EAAI,CAAC,CAAC;MACfC,MAAK,EAAI,GAAG;MACZC,aAAY,EAAI,CACZ;QACIJ,IAAG,EAAI,SAAS;QAChBK,KAAI,EAAI,GAAG;QACXC,KAAI,EAAI;MACZ,CAAC,EACD;QACIN,IAAG,EAAI,OAAO;QACdK,KAAI,EAAI,GAAG;QACXC,KAAI,EAAI;MACZ,CAAC,EACD;QACIN,IAAG,EAAI,SAAS;QAChBK,KAAI,EAAI,GAAG;QACXC,KAAI,EAAI;MACZ,CAAC,EACD;QACIN,IAAG,EAAI,MAAM;QACbK,KAAI,EAAI,GAAG;QACXC,KAAI,EAAI;MACZ,CAAC;IAEb;EACJ,CAAC;EAGDC,OAAM,EAAI;IACNC,IAAG,EAAI,YAAU,CAEjB;EACJ,CAAC;EAEDC,OAAO,GAAG;IACN,IAAI,CAACN,MAAK,GAAI,IAAI,CAACO,MAAM,CAACC,KAAK,CAACR,MAAK;IACrC,IAAI,CAACD,UAAS,GAAI,IAAI,CAACQ,MAAM,CAACC,KAAK,CAACT,UAAS;IAC7CU,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,MAAM;EAC3B;AAUJ","names":["name","data","project_id","status","statusOptions","value","color","methods","save","mounted","$route","query","console","log"],"sourceRoot":"","sources":["C:\\schedule\\config\\front\\src\\views\\Project\\Manage\\ManageStatus.vue"],"sourcesContent":["<template>\r\n    <v-container>\r\n        <!-- <v-radio-group v-model=\"status\" inline @change=\"save\"> -->\r\n        <v-radio-group v-model=\"status\" inline>\r\n            <template v-slot:label>\r\n                <strong> Status of Project </strong>\r\n            </template>\r\n            <v-radio\r\n                v-for=\"option in statusOptions\"\r\n                :key=\"option.value\"\r\n                :value=\"option.value\"\r\n                :color=\"option.color\"\r\n            >\r\n                <template v-slot:label>\r\n                    <strong >{{option.name}} </strong>\r\n                </template>\r\n            </v-radio>\r\n        </v-radio-group>\r\n    </v-container>\r\n</template>\r\n\r\n\r\n\r\n\r\n<script>\r\n// import { onMounted, ref, Ref } from 'vue'\r\n// import { useRoute, useRouter } from 'vue-router'\r\n\r\n// const route = useRoute()\r\n// const router = useRouter()\r\n\r\nexport default {\r\n    name : \"ManageStatus\" , \r\n\r\n\r\n    data : () => {\r\n        return {\r\n                // route : useRoute(),\r\n                // router : useRouter(),\r\n                project_id : -1,\r\n                status : \"P\",\r\n                statusOptions : [\r\n                    {\r\n                        name : \"Prepare\",\r\n                        value : \"P\",\r\n                        color : \"orange\"\r\n                    },\r\n                    {\r\n                        name : \"Ready\",\r\n                        value : \"R\",\r\n                        color : \"success\"\r\n                    },\r\n                    {\r\n                        name : \"OnGoing\",\r\n                        value : \"O\",\r\n                        color : \"primary\"\r\n                    },\r\n                    {\r\n                        name : \"Done\",\r\n                        value : \"D\",\r\n                        color : \"error\"\r\n                    },                \r\n                ]\r\n        }\r\n    },\r\n\r\n\r\n    methods : {\r\n        save : function(){\r\n            \r\n        }\r\n    },\r\n\r\n    mounted() {\r\n        this.status = this.$route.query.status\r\n        this.project_id = this.$route.query.project_id\r\n        console.log(this.status)\r\n    },\r\n\r\n\r\n\r\n\r\n    \r\n\r\n\r\n    \r\n\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}