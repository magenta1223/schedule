{"ast":null,"code":"import axios from \"axios\";\nimport VueCal from 'vue-cal';\nimport 'vue-cal/dist/vuecal.css';\n// import Datepicker from '@vuepic/vue-datepicker';\nimport { mdiArrowLeft, mdiArrowRight, mdiClose } from \"@mdi/js\";\nimport setToken from \"@/utils/auth.js\";\nlet url = \"http://127.0.0.1:8000/api/project/\"; // 장고 drf 서버 주소\n\nexport default {\n  name: 'YourComponent',\n  data: () => {\n    return {\n      icons: {\n        mdiArrowLeft,\n        mdiArrowRight,\n        mdiClose\n      },\n      // calendar header\n      selectedDate: null,\n      activeView: \"month\",\n      activeViewOptions: ['month', 'week', 'day'],\n      // views \n      disable_views: ['years', 'year'],\n      disable_days: [],\n      // 이거 computed로 설정. 곡 넣을 때 \n\n      // week / day time interval\n      time_from: 8 * 60,\n      time_to: 23 * 60,\n      time_step: 30,\n      // view events in month\n      eomv: 'short',\n      // header\n      weekdayHeadings: {\n        Sunday: {\n          short: 'Sun',\n          color: 'red'\n        },\n        Monday: {\n          short: 'Mon',\n          color: 'black'\n        },\n        Tuesday: {\n          short: 'Tue',\n          color: 'black'\n        },\n        Wednesday: {\n          short: 'Wed',\n          color: 'black'\n        },\n        Thursday: {\n          short: 'Thu',\n          color: 'black'\n        },\n        Friday: {\n          short: 'Fri',\n          color: 'black'\n        },\n        Saturday: {\n          short: 'Sat',\n          color: 'blue'\n        }\n      },\n      events: [{\n        id: 1,\n        author: 1,\n        start: '2022-11-26 14:00',\n        end: '2022-11-26 17:30',\n        title: 'Boring event',\n        content: 'CEX'\n        // split : 1\n      }, {\n        start: '2022-11-26 12:00',\n        end: '2022-11-26 14:00',\n        title: '합주',\n        class: 'meeting',\n        background: true\n        // split : 2\n      }],\n\n      // add events\n      openAdd: false,\n      newDate: [new Date(), new Date()],\n      newEvent: {\n        title: \"\",\n        content: \"\"\n      },\n      // retrieve events\n      openRetrieve: false,\n      selectedNewDates: new Set(),\n      openAddMeeting: false\n    };\n  },\n  components: {\n    VueCal\n    // Datepicker\n  },\n\n  methods: {\n    wdHeaderStyle: function (heading) {\n      if (heading.label === '') {\n        return '';\n      } else {\n        return 'color:' + this.weekdayHeadings[heading.label].color;\n      }\n    },\n    wdHeaderText: function (heading) {\n      if (heading.label === '') {\n        return '';\n      } else {\n        return this.weekdayHeadings[heading.label].short;\n      }\n    },\n    onEventClick: function (event) {\n      event;\n      console.log('eventclick');\n    },\n    onCellClick: function (isSelected, event) {\n      event;\n      // isSelected === true : 이제 선택 안함\n      // isSelected === false : 이제 선택 함\n      // selected events에서 제거할지 말지 ? \n      if (typeof isSelected === 'boolean') {\n        if (!isSelected) {\n          console.log(event.startDate);\n          this.selectedNewDates.add(String(event.startDate));\n        } else {\n          this.selectedNewDates.delete(String(event.startDate));\n        }\n      }\n\n      // console.log('----------------------------')\n      // console.log(isSelected, this.selectedNewDates)\n      // console.log('----------------------------')\n    },\n\n    retrieveProject: function () {\n      axios({\n        method: \"GET\",\n        url: url + this.$route.query.project_id + '/',\n        headers: setToken(),\n        params: {\n          user_id: localStorage.getItem('user')\n        }\n      }).then(response => {\n        this.project = response.data; // project만 가져오자. songs는 songs list에서 가져오고 \n        this.project.songs.map((song, index) => {\n          song.index = index;\n          return this.parsePlayer(song);\n        });\n      }).catch(error => {\n        console.log(\"Failed to get retreival\", error.response);\n      });\n    },\n    parsePlayer: function (song) {\n      song.players.map(player => {\n        if (player.fixed) {\n          //song[player.position] = player \n          song[player.position] = player.user.name;\n        }\n      });\n      return song;\n    },\n    modal: function () {\n      this.openAddMeeting = true;\n      console.log(this.selectedNewDates);\n      this.getSongs();\n    },\n    // 1. 전체 사용자에 대해 날짜별, 시간대별로 가능한 곡을 전부 뽑는다. \n    // 2. 리스팅\n\n    // 이걸 날짜별로 나누고 싶어.\n    // 1. 전체 사용자에 대해 일정 contraint를 고려해, 날짜별로 가능한 곡을 전부 뽑아본다\n    // 2. 여기에 추가적으로 합주시간 범위를 지정. global contraint\n    // 3. 곡에 대한 constraint : \n    // 1번과 조건이 역임.\n    // 어떤 곡에 대해, 현재 선택된 날짜들로 가봄\n    // 날짜와 곡이 동시에 주어진 상황. 되냐?\n    // \n\n    getSongs: function () {\n      console.log();\n      for (let date of this.selectedNewDates) {\n        // 탐색의 범위를 줄이기 위해. 일부라도 가능하면.. \n        let availableUsers = this.getAvailableUsers(date);\n        for (let j in this.project.songs) {\n          let song = this.project.songs[j];\n          this.isAvailableAt(availableUsers, song, date, 2);\n        }\n        // constraints\n        // 1) 시간대. 시간대로 거르는 로직을 한번 더 하면 됨\n\n        // 2) song. 루프 돌기전에 그 곡들을 먼저 체크. 하나라도 안되면 그날은 안되는 날.\n\n        date, availableUsers;\n      }\n    },\n    isAvailableAt(users, song, date, time) {\n      users, song, date, time;\n      // 그 곡이 그 때 가능한지?\n      // song의 player들로 가능한지\n      // song의 users가 users안에 포함되는지 확인\n      // 이게 전체 사용자를 고려해야됨. const가 다달라서 \n      // 시간대별로 가능한지 체크,\n      // 그 곡의 players를 딥카피로 받아놓고 \n      // 그 user에 대해서만 보면 되긴 함. \n      console.log(song.players);\n    },\n    getAvailableUsers: function (date) {\n      let users = new Set();\n      users;\n      date;\n      date = new Date(date);\n      for (let i in this.project.songs) {\n        let players = this.project.songs[i].players;\n        let breakpoint = false;\n        for (let j in players) {\n          let events = players[j].user.events;\n          for (let k in events) {\n            let event = events[k];\n            let start = new Date(event.start);\n            let end = new Date(event.end);\n            if (event.allDay) {\n              if (start <= date && end >= date) {\n                // allday 1일 찍어놓으면 시작과 끝이 같음.\n                // 겹치면 ? 일정이 있음! \n                breakpoint = true;\n                break;\n              }\n            } else {\n              if (start <= date && end > date) {\n                // allday 1일 찍어놓으면 시작과 끝이 같음.\n                breakpoint = true;\n                break;\n              }\n            }\n          }\n          // 무사히 루프를 빠져나오면?\n          if (!breakpoint) {\n            users.add(players[j]);\n            breakpoint = false;\n          }\n        }\n      }\n      console.log(users);\n    },\n    getAvailableSongs: function (availableUsers) {\n      // \n\n      availableUsers;\n      let availableSongs = Array();\n      return availableSongs;\n    },\n    getAvailableDays: function (constraintSongs) {\n      // 이 곡을 꼭 해야돼\n      // 그르면 날짜별로 그 곡이 가능한지 체크를 한다.\n      // 되는 날짜를 반환\n      constraintSongs;\n      this.selectedNewDates.map(date => {\n        date;\n      });\n      let availableDays = Array();\n      return availableDays;\n    }\n  },\n  mounted() {\n    this.retrieveProject();\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","VueCal","mdiArrowLeft","mdiArrowRight","mdiClose","setToken","url","name","data","icons","selectedDate","activeView","activeViewOptions","disable_views","disable_days","time_from","time_to","time_step","eomv","weekdayHeadings","Sunday","short","color","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","events","id","author","start","end","title","content","class","background","openAdd","newDate","Date","newEvent","openRetrieve","selectedNewDates","Set","openAddMeeting","components","methods","wdHeaderStyle","heading","label","wdHeaderText","onEventClick","event","console","log","onCellClick","isSelected","startDate","add","String","delete","retrieveProject","method","$route","query","project_id","headers","params","user_id","localStorage","getItem","then","response","project","songs","map","song","index","parsePlayer","catch","error","players","player","fixed","position","user","modal","getSongs","date","availableUsers","getAvailableUsers","j","isAvailableAt","users","time","i","breakpoint","k","allDay","getAvailableSongs","availableSongs","Array","getAvailableDays","constraintSongs","availableDays","mounted"],"sourceRoot":"","sources":["C:\\schedule\\config\\front\\src\\views\\Project\\Manage\\ManageSchedule.vue"],"sourcesContent":["<template>\r\n    <v-container>\r\n        <!-- 헤더 -->\r\n        <v-row class =\"mb-4\">\r\n            <v-col cols=\"4\">\r\n                <v-select\r\n                    v-model=\"activeView\"\r\n                    :items=\"activeViewOptions\"\r\n                    item-title=\"name\"\r\n                    item-value=\"name\"\r\n                    label=\"View\"\r\n                    density=\"compact\"\r\n                ></v-select>\r\n            </v-col>\r\n            <v-col cols=\"4\">\r\n                <v-btn\r\n                    class =\"mr-1\"\r\n                    @click=\"$refs.vuecal.previous()\"\r\n                    :icon=\"icons.mdiArrowLeft\"\r\n                    size=\"small\"\r\n                >\r\n                </v-btn>\r\n                <v-btn\r\n                    \r\n                    @click=\"$refs.vuecal.next()\"\r\n                    :icon=\"icons.mdiArrowRight\"\r\n                    size=\"small\"\r\n                >\r\n                </v-btn>\r\n            </v-col>\r\n            <v-col>\r\n                {{selectedDate}}\r\n            </v-col>\r\n            <v-col cols=\"2\">\r\n                <v-btn @click=\"modal\"> SEARCH </v-btn>\r\n            </v-col>\r\n        </v-row>\r\n        \r\n        <!-- 캘린더 -->\r\n        <v-row>\r\n            <v-item-group multiple>\r\n                <VueCal\r\n                    ref=\"vuecal\"\r\n                    v-model:selected-date=\"selectedDate\"\r\n                    v-model:active-view=\"activeView\"\r\n                    hide-view-selector\r\n                    hide-title-bar\r\n                    :events=\"events\"\r\n                    :disable-views=\"disable_views\"\r\n                    :time-from=\"time_from\"\r\n                    :time-to=\"time_to\"\r\n                    :time-step=\"time_step\"\r\n                    :events-on-month-view=\"eomv\"\r\n                    :on-event-click=\"onEventClick\"\r\n                    @cell-click=\"onCellClick\"\r\n                >\r\n                    <template #weekday-heading={heading}>\r\n                        <div :style=\"wdHeaderStyle(heading)\">\r\n                            {{wdHeaderText(heading)}}\r\n                        </div>\r\n                    </template>\r\n                    \r\n                    <template #cell-content=\"{ cell, view, events, goNarrower }\" >\r\n                        <div class=\"vuecal__flex vuecal__cell-content custom-cell\" @click=\"onCellClick(cell)\">\r\n                            <!-- <v-row class =\"ma-2\">\r\n                                {{ cell.content }}\r\n                            </v-row> -->\r\n                            <v-item v-slot=\"{ isSelected, toggle }\">\r\n                                <v-card\r\n                                :color=\"isSelected ? 'primary' : ''\"\r\n                                class=\"d-flex align-center rounded-0 elevation-0\"\r\n                                dark\r\n                                @click=\"[onCellClick(isSelected, cell), toggle()]\"\r\n                                height=\"100%\"\r\n                                width=\"100%\"\r\n                                >\r\n                                <v-card-text class=\"text-center\">\r\n                                    {{cell.content}}\r\n                                    <!-- {{ isSelected ? 'Selected' : 'Click Me!' }} -->\r\n                                </v-card-text>\r\n                                </v-card>\r\n                            </v-item>\r\n\r\n                        </div>\r\n                        <span class=\"vuecal__cell-date\" :class=\"view.id\" v-if=\"view.id === 'day'\" @click=\"goNarrower\">\r\n                        {{ cell.content }}\r\n                        </span>\r\n                        <span class=\"vuecal__cell-events-count\" v-if=\"view.id === 'month' && events.length\">{{ events.length }} </span>\r\n                        <span class=\"vuecal__no-event\" v-if=\"['week', 'day'].includes(view.id) && !events.length\">Nothing here 👌</span>\r\n                    </template>\r\n                </VueCal>\r\n            </v-item-group>\r\n        </v-row>\r\n        <!-- 모달 -->\r\n        <v-row>\r\n            <v-dialog\r\n            v-model=\"openAddMeeting\"\r\n            fullscreen\r\n            :scrim=\"false\"\r\n            transition=\"dialog-bottom-transition\"\r\n            >\r\n\r\n                <v-card>\r\n                    <!-- 툴바 -->\r\n                    <v-toolbar\r\n                    dark\r\n                    color=\"primary\"\r\n                    >\r\n                        <v-btn\r\n                            :icon=\"icons.mdiClose\"\r\n                            dark\r\n                            @click=\"openAddMeeting = false\"\r\n                        >\r\n                        </v-btn>\r\n\r\n                        <v-toolbar-title>\r\n                            Searching best meeting\r\n                        </v-toolbar-title>\r\n                    </v-toolbar>\r\n\r\n                    <!-- 참여 가능 인원 받아오기 -->\r\n                    \r\n                    <v-row v-for=\"date in selectedNewDates\" :key=\"date\"> \r\n                        <v-card-title>\r\n                            {{date}}\r\n                        </v-card-title>\r\n                    </v-row>\r\n                    <!-- 일단 되는 사람 다 불러오고 -->\r\n                    <!-- 시간대, 곡 등을 조건을 걸어본다. 그에 맞춰서 disable되는 곡이나 사람이 생기겠지? -->\r\n                    <!-- 시간대를 조건으로 걸면?  -->\r\n\r\n                    <!-- 조건 다 골랐으면 배치를 해야됨. -->\r\n                    <!-- phase 별로 페이지 짜야됨. 페이지 넘기기 -->\r\n                    \r\n\r\n\r\n                </v-card>\r\n            </v-dialog>\r\n\r\n        </v-row>\r\n\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\"\r\nimport VueCal from 'vue-cal'\r\nimport 'vue-cal/dist/vuecal.css'\r\n// import Datepicker from '@vuepic/vue-datepicker';\r\nimport {mdiArrowLeft, mdiArrowRight, mdiClose} from \"@mdi/js\"\r\n\r\nimport setToken from \"@/utils/auth.js\"\r\n\r\nlet url = \"http://127.0.0.1:8000/api/project/\";  // 장고 drf 서버 주소\r\n\r\nexport default {\r\n    name: 'YourComponent',\r\n\r\n    data : () => {\r\n        return {\r\n            icons : {\r\n                mdiArrowLeft, mdiArrowRight, mdiClose\r\n            },\r\n            \r\n            // calendar header\r\n            selectedDate: null,\r\n            activeView: \"month\",\r\n            activeViewOptions : ['month', 'week', 'day'],\r\n            \r\n            // views \r\n            disable_views : ['years', 'year'],\r\n            disable_days : [], // 이거 computed로 설정. 곡 넣을 때 \r\n                    \r\n            // week / day time interval\r\n            time_from : 8 * 60,\r\n            time_to :23 * 60,\r\n            time_step : 30,\r\n\r\n            // view events in month\r\n            eomv : 'short',\r\n        \r\n            // header\r\n            weekdayHeadings : {\r\n                Sunday : {\r\n                    short : 'Sun',\r\n                    color : 'red'\r\n                },\r\n                Monday : {\r\n                    short : 'Mon',\r\n                    color : 'black'\r\n                },\r\n                Tuesday : {\r\n                    short : 'Tue',\r\n                    color : 'black'\r\n                },\r\n                Wednesday : {\r\n                    short : 'Wed',\r\n                    color : 'black'\r\n                },\r\n                Thursday : {\r\n                    short : 'Thu',\r\n                    color : 'black'\r\n                },\r\n                Friday : {\r\n                    short : 'Fri',\r\n                    color : 'black'\r\n                },\r\n                Saturday : {\r\n                    short : 'Sat',\r\n                    color : 'blue'\r\n                },\r\n\r\n            },\r\n\r\n            events: [\r\n                {\r\n                    id : 1,\r\n                    author : 1,\r\n                    start: '2022-11-26 14:00',\r\n                    end: '2022-11-26 17:30',\r\n                    title: 'Boring event',\r\n                    content: 'CEX',\r\n                    // split : 1\r\n                },\r\n                {\r\n                start: '2022-11-26 12:00',\r\n                end: '2022-11-26 14:00',\r\n                title: '합주',\r\n                class: 'meeting',\r\n                background: true,\r\n                // split : 2\r\n                },\r\n            ],\r\n\r\n            // add events\r\n            openAdd : false,\r\n            newDate : [\r\n                new Date(), \r\n                new Date()\r\n            ],\r\n            newEvent : {\r\n                title : \"\",\r\n                content : \"\"\r\n            },\r\n\r\n            // retrieve events\r\n            openRetrieve : false,\r\n\r\n            selectedNewDates : new Set(),\r\n            openAddMeeting : false,\r\n\r\n        }\r\n    },\r\n\r\n    components: {\r\n        VueCal,\r\n        // Datepicker\r\n    },\r\n\r\n    methods : {\r\n        wdHeaderStyle : function(heading){\r\n            if (heading.label === ''){\r\n                return ''\r\n            } else {\r\n                return 'color:' + this.weekdayHeadings[heading.label].color\r\n            }\r\n        },\r\n        wdHeaderText : function(heading){\r\n            if (heading.label === ''){\r\n                return ''\r\n            } else {\r\n                return this.weekdayHeadings[heading.label].short\r\n            }\r\n        },\r\n\r\n        onEventClick: function(event){\r\n            event;\r\n            console.log('eventclick')\r\n        },\r\n\r\n        onCellClick : function(isSelected, event){\r\n            event;\r\n            // isSelected === true : 이제 선택 안함\r\n            // isSelected === false : 이제 선택 함\r\n            // selected events에서 제거할지 말지 ? \r\n            if (typeof(isSelected) === 'boolean'){\r\n                if (!isSelected){\r\n                    console.log(event.startDate)\r\n                    this.selectedNewDates.add(String(event.startDate))\r\n                } else {\r\n                    this.selectedNewDates.delete(String(event.startDate))\r\n                }\r\n            } \r\n\r\n            // console.log('----------------------------')\r\n            // console.log(isSelected, this.selectedNewDates)\r\n            // console.log('----------------------------')\r\n\r\n        },\r\n\r\n        retrieveProject : function(){\r\n            axios({\r\n                method : \"GET\",\r\n                url : url + this.$route.query.project_id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                }\r\n            }).then((response) => {\r\n                this.project = response.data // project만 가져오자. songs는 songs list에서 가져오고 \r\n                this.project.songs.map((song, index) => {\r\n                    song.index = index\r\n                    return this.parsePlayer(song)\r\n                })\r\n            }).catch((error) => {\r\n                console.log(\"Failed to get retreival\", error.response);\r\n            });\r\n        },\r\n\r\n        parsePlayer : function(song){\r\n            song.players.map((player) => {\r\n                if (player.fixed){\r\n                    //song[player.position] = player \r\n                    song[player.position] = player.user.name \r\n                }\r\n            })\r\n            return song\r\n        },\r\n\r\n\r\n        modal : function(){\r\n            \r\n            this.openAddMeeting = true\r\n            console.log(this.selectedNewDates)\r\n            this.getSongs()\r\n\r\n        },\r\n\r\n        \r\n        // 1. 전체 사용자에 대해 날짜별, 시간대별로 가능한 곡을 전부 뽑는다. \r\n        // 2. 리스팅\r\n\r\n        // 이걸 날짜별로 나누고 싶어.\r\n        // 1. 전체 사용자에 대해 일정 contraint를 고려해, 날짜별로 가능한 곡을 전부 뽑아본다\r\n        // 2. 여기에 추가적으로 합주시간 범위를 지정. global contraint\r\n        // 3. 곡에 대한 constraint : \r\n        // 1번과 조건이 역임.\r\n        // 어떤 곡에 대해, 현재 선택된 날짜들로 가봄\r\n        // 날짜와 곡이 동시에 주어진 상황. 되냐?\r\n        // \r\n\r\n        getSongs : function(){\r\n            console.log()\r\n            for (let date of this.selectedNewDates){\r\n                // 탐색의 범위를 줄이기 위해. 일부라도 가능하면.. \r\n                let availableUsers = this.getAvailableUsers(date)\r\n                \r\n                for (let j in this.project.songs){\r\n                    let song = this.project.songs[j]\r\n                    \r\n                    this.isAvailableAt(availableUsers, song, date, 2)\r\n                }\r\n                // constraints\r\n                // 1) 시간대. 시간대로 거르는 로직을 한번 더 하면 됨\r\n\r\n                // 2) song. 루프 돌기전에 그 곡들을 먼저 체크. 하나라도 안되면 그날은 안되는 날.\r\n\r\n                date, availableUsers\r\n            }\r\n\r\n        },\r\n\r\n        isAvailableAt(users, song, date, time){\r\n            users, song, date, time\r\n            // 그 곡이 그 때 가능한지?\r\n            // song의 player들로 가능한지\r\n            // song의 users가 users안에 포함되는지 확인\r\n            // 이게 전체 사용자를 고려해야됨. const가 다달라서 \r\n            // 시간대별로 가능한지 체크,\r\n            // 그 곡의 players를 딥카피로 받아놓고 \r\n            // 그 user에 대해서만 보면 되긴 함. \r\n            console.log(song.players)\r\n\r\n        }, \r\n\r\n        getAvailableUsers : function(date){\r\n\r\n            let users = new Set()\r\n            users; date;\r\n\r\n            date = new Date(date)\r\n            \r\n            for (let i in this.project.songs){\r\n                let players = this.project.songs[i].players\r\n                let breakpoint = false\r\n                for (let j in players){\r\n                    let events = players[j].user.events\r\n                    for (let k in events){\r\n                        let event = events[k]\r\n                        let start = new Date(event.start)\r\n                        let end = new Date(event.end)\r\n\r\n\r\n                        if (event.allDay){\r\n                            if (start <= date && end >= date){\r\n                                // allday 1일 찍어놓으면 시작과 끝이 같음.\r\n                                // 겹치면 ? 일정이 있음! \r\n                                breakpoint = true\r\n                                break\r\n                            }\r\n                        } else {\r\n                            if (start <= date && end > date){\r\n                                // allday 1일 찍어놓으면 시작과 끝이 같음.\r\n                                breakpoint = true\r\n                                break\r\n                            }    \r\n                        }\r\n                    }\r\n                    // 무사히 루프를 빠져나오면?\r\n                    if (!breakpoint){\r\n                        users.add(players[j])\r\n                        breakpoint = false\r\n                    }\r\n                }\r\n            }\r\n            console.log(users)\r\n\r\n\r\n        }, \r\n\r\n        getAvailableSongs : function(availableUsers){\r\n            // \r\n            \r\n            availableUsers;\r\n            let availableSongs = Array()\r\n            return availableSongs\r\n            \r\n        },\r\n\r\n\r\n\r\n        getAvailableDays : function(constraintSongs){\r\n            // 이 곡을 꼭 해야돼\r\n            // 그르면 날짜별로 그 곡이 가능한지 체크를 한다.\r\n            // 되는 날짜를 반환\r\n            constraintSongs;\r\n\r\n            this.selectedNewDates.map((date) => {\r\n                date;\r\n\r\n            })\r\n\r\n            let availableDays = Array()\r\n            return availableDays\r\n\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n        this.retrieveProject()\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n.v-dialog .v-overlay__content{\r\n    flex-direction : row;\r\n    justify-content : center\r\n}\r\n\r\n.vuecal--month-view .vuecal__cell {height: 100px;}\r\n\r\n.vuecal--month-view .vuecal__cell-content {\r\n  justify-content: flex-start;\r\n  height: 100%;\r\n  align-items: flex-end;\r\n}\r\n\r\n.vuecal--month-view .vuecal__cell-date {padding: 4px;}\r\n.vuecal--month-view .vuecal__no-event {display: none;}\r\n.vuecal--week-view .vuecal__no-event {display: none;}\r\n\r\n.vuecal__event.P {\r\n  background: rgb(255, 98, 98);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.vuecal__flex[grow]{\r\n    flex:none\r\n}\r\n\r\n\r\n\r\n.vuecal__flex .vuecal__cell-content .custom-cell{\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n}\r\n\r\n</style>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}