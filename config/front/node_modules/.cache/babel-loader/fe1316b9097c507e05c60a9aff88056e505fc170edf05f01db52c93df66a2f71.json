{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport setToken from \"@/utils/auth.js\";\n// import { Header, Item } from \"vue3-easy-data-table\";\nimport SongList from \"@/views/Song/SongList.vue\";\nlet url = \"http://127.0.0.1:8000/api/project/\"; // 장고 drf 서버 주소\n\nexport default {\n  name: \"ProjectRetrieve\",\n  data: () => {\n    return {\n      // windows\n      windowHeight: window.innerHeight,\n      windowWidth: window.innerWidth,\n      // manage\n      manage_mode: false,\n      // project\n      project: \"\",\n      headers: [{\n        text: 'Artist',\n        value: 'artist'\n      }, {\n        text: 'Title',\n        value: 'title'\n      }, {\n        text: 'Vocal',\n        value: 'Vocal'\n      }, {\n        text: 'Guitar1',\n        value: 'Guitar1'\n      }, {\n        text: 'Guitar2',\n        value: 'Guitar2'\n      }, {\n        text: 'Bass',\n        value: 'Bass'\n      }, {\n        text: 'Drum',\n        value: 'Drum'\n      }, {\n        text: 'Keyboard',\n        value: 'Keyboard'\n      }, {\n        text: 'Fixed',\n        value: 'fix'\n      }]\n\n      //songs\n      // songs : [],\n      // headers : [\n      //         {text : 'Artist', value : 'artist'},\n      //         {text : 'Title', value : 'title'},\n      //         {text : 'Vocal', value : 'Vocal'},\n      //         {text : 'Guitar1', value : 'Guitar1'},\n      //         {text : 'Guitar2', value : 'Guitar2'},\n      //         {text : 'Bass', value : 'Bass'},\n      //         {text : 'Drum', value : 'Drum'},\n      //         {text : 'Keyboard', value : 'Keyboard'},\n      //         {text : 'Fixed', value : 'fix'},\n      // ],\n      // delFrom : \"\", // quit from song\n\n      // // positions\n      // pos_headers : [\n      //     {text : \"Name\", value : \"name\"},\n      //     {text : \"Position\", value : \"position\"},\n      //     {text : \"Status\", value : \"fixed\"},\n      // ],\n      // selected_position : \"\",\n      // openModal : false,\n      // delPosition : \"\",\n\n      // colors : {\n      //     true : \"primary\",\n      //     false : \"error\"\n      // },\n      // texts : {\n      //     true : \"Fixed\",\n      //     false : \"Not Fixed\"\n      // }\n    };\n  },\n\n  components: {\n    SongList\n  },\n  methods: {\n    retrieveProject: function () {\n      axios({\n        method: \"GET\",\n        url: url + this.$route.params.project_id + '/',\n        headers: setToken(),\n        params: {\n          user_id: localStorage.getItem('user')\n        }\n      }).then(response => {\n        this.project = response.data; // project만 가져오자. songs는 songs list에서 가져오고 \n        if (parseInt(localStorage.getItem('user')) === this.project.leader) {\n          console.log(\"ture\");\n          this.manage_mode = true;\n        }\n      }).catch(error => {\n        console.log(\"Failed to get retreival\", error.response);\n      });\n    },\n    to: function (destination) {\n      // console.log(this.$router)\n\n      this.$router.push({\n        name: destination,\n        params: {\n          project_id: this.$route.params.project_id\n        }\n      });\n    }\n  },\n  mounted() {\n    this.retrieveProject();\n    window.onresize = () => {\n      this.windowHeight = window.innerHeight;\n    };\n  }\n};","map":{"version":3,"mappings":";AAkDA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,QAAO,MAAO,iBAAgB;AACrC;AACA,OAAOC,QAAO,MAAO,2BAA0B;AAE/C,IAAIC,GAAE,GAAI,oCAAoC,EAAG;;AAIjD,eAAe;EAEXC,IAAG,EAAI,iBAAiB;EAExBC,IAAG,EAAI,MAAM;IACT,OAAO;MACH;MACAC,YAAW,EAAIC,MAAM,CAACC,WAAW;MACjCC,WAAU,EAAIF,MAAM,CAACG,UAAU;MAE/B;MACAC,WAAU,EAAI,KAAK;MAEnB;MACAC,OAAM,EAAI,EAAE;MAEZC,OAAM,EAAI,CACF;QAACC,IAAG,EAAI,QAAQ;QAAEC,KAAI,EAAI;MAAQ,CAAC,EACnC;QAACD,IAAG,EAAI,OAAO;QAAEC,KAAI,EAAI;MAAO,CAAC,EACjC;QAACD,IAAG,EAAI,OAAO;QAAEC,KAAI,EAAI;MAAO,CAAC,EACjC;QAACD,IAAG,EAAI,SAAS;QAAEC,KAAI,EAAI;MAAS,CAAC,EACrC;QAACD,IAAG,EAAI,SAAS;QAAEC,KAAI,EAAI;MAAS,CAAC,EACrC;QAACD,IAAG,EAAI,MAAM;QAAEC,KAAI,EAAI;MAAM,CAAC,EAC/B;QAACD,IAAG,EAAI,MAAM;QAAEC,KAAI,EAAI;MAAM,CAAC,EAC/B;QAACD,IAAG,EAAI,UAAU;QAAEC,KAAI,EAAI;MAAU,CAAC,EACvC;QAACD,IAAG,EAAI,OAAO;QAAEC,KAAI,EAAI;MAAK,CAAC;;MAIvC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAGJ;EACJ,CAAC;;EAEDC,UAAS,EAAI;IACTd;EACJ,CAAC;EAEDe,OAAO,EAAE;IAGLC,eAAc,EAAI,YAAU;MACxBlB,KAAK,CAAC;QACFmB,MAAK,EAAI,KAAK;QACdhB,GAAE,EAAIA,GAAE,GAAI,IAAI,CAACiB,MAAM,CAACC,MAAM,CAACC,UAAS,GAAI,GAAG;QAC/CT,OAAM,EAAIZ,QAAQ,EAAE;QACpBoB,MAAK,EAAI;UACLE,OAAM,EAAIC,YAAY,CAACC,OAAO,CAAC,MAAM;QACzC;MACJ,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACf,OAAM,GAAIe,QAAQ,CAACtB,IAAG,EAAE;QAC7B,IAAIuB,QAAQ,CAACJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,MAAM,IAAI,CAACb,OAAO,CAACiB,MAAM,EAAC;UAC/DC,OAAO,CAACC,GAAG,CAAC,MAAM;UAClB,IAAI,CAACpB,WAAU,GAAI,IAAG;QAC1B;MAEJ,CAAC,CAAC,CAACqB,KAAK,CAAEC,KAAK,IAAK;QAChBH,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEE,KAAK,CAACN,QAAQ,CAAC;MAC1D,CAAC,CAAC;IACN,CAAC;IAEDO,EAAC,EAAI,UAASC,WAAW,EAAC;MACtB;;MAEA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QACdjC,IAAG,EAAI+B,WAAW;QAClBd,MAAK,EAAI;UACLC,UAAS,EAAI,IAAI,CAACF,MAAM,CAACC,MAAM,CAACC;QACpC;MAAC,CAAC;IACV;EAIJ,CAAC;EAEDgB,OAAO,GAAG;IACN,IAAI,CAACpB,eAAe,EAAC;IACrBX,MAAM,CAACgC,QAAO,GAAI,MAAM;MACpB,IAAI,CAACjC,YAAW,GAAIC,MAAM,CAACC,WAAU;IACzC;EACJ;AAEJ","names":["axios","setToken","SongList","url","name","data","windowHeight","window","innerHeight","windowWidth","innerWidth","manage_mode","project","headers","text","value","components","methods","retrieveProject","method","$route","params","project_id","user_id","localStorage","getItem","then","response","parseInt","leader","console","log","catch","error","to","destination","$router","push","mounted","onresize"],"sourceRoot":"","sources":["C:\\schedule\\config\\front\\src\\views\\Project\\ProjectRetrieve.vue"],"sourcesContent":["<template>\r\n    \r\n    <v-container class = \"mb-6\">\r\n        <!-- 헤더 -->\r\n        <v-container>\r\n        <v-parallax\r\n            id = \"parralax\"\r\n            class = \"rounded-xl\"\r\n            :width=\"windowWidth\"\r\n            height=\"200px\"\r\n        >\r\n        <v-row class=\"blurred rounded-xl ma-0\"  justify=\"space-between\" align=\"center\">\r\n                <v-col class = \"ma-4\">\r\n                    <h1 class = \"font-weight-medium text-white\">\r\n                        {{project.title}}\r\n                    </h1>\r\n                    <v-btn v-if=\"manage_mode\" @click=\"to('project_manage')\">\r\n                        MANAGE\r\n                    </v-btn>\r\n                </v-col>\r\n\r\n        </v-row>\r\n        </v-parallax>\r\n        </v-container>\r\n        <!-- 바디 -->\r\n            <v-btn @click=\"to('song_create')\">\r\n                Create Song\r\n            </v-btn>\r\n\r\n            <v-tabs\r\n            show-arrows\r\n            >\r\n        <v-tabs-slider color=\"teal lighten-3\"></v-tabs-slider>\r\n\r\n        <v-tab\r\n            v-for=\"category in headers\"\r\n            :key=\"category.text\"\r\n        >\r\n            {{category.text}}\r\n\r\n        </v-tab>\r\n    </v-tabs>\r\n    <SongList/>\r\n    </v-container>\r\n\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport setToken from \"@/utils/auth.js\"\r\n// import { Header, Item } from \"vue3-easy-data-table\";\r\nimport SongList from \"@/views/Song/SongList.vue\"\r\n\r\nlet url = \"http://127.0.0.1:8000/api/project/\";  // 장고 drf 서버 주소\r\n\r\n\r\n\r\nexport default {\r\n    \r\n    name : \"ProjectRetrieve\",\r\n\r\n    data : () => {\r\n        return {\r\n            // windows\r\n            windowHeight : window.innerHeight,\r\n            windowWidth : window.innerWidth,\r\n            \r\n            // manage\r\n            manage_mode : false,\r\n\r\n            // project\r\n            project : \"\",\r\n\r\n            headers : [\r\n                    {text : 'Artist', value : 'artist'},\r\n                    {text : 'Title', value : 'title'},\r\n                    {text : 'Vocal', value : 'Vocal'},\r\n                    {text : 'Guitar1', value : 'Guitar1'},\r\n                    {text : 'Guitar2', value : 'Guitar2'},\r\n                    {text : 'Bass', value : 'Bass'},\r\n                    {text : 'Drum', value : 'Drum'},\r\n                    {text : 'Keyboard', value : 'Keyboard'},\r\n                    {text : 'Fixed', value : 'fix'},\r\n            ],\r\n\r\n\r\n            //songs\r\n            // songs : [],\r\n            // headers : [\r\n            //         {text : 'Artist', value : 'artist'},\r\n            //         {text : 'Title', value : 'title'},\r\n            //         {text : 'Vocal', value : 'Vocal'},\r\n            //         {text : 'Guitar1', value : 'Guitar1'},\r\n            //         {text : 'Guitar2', value : 'Guitar2'},\r\n            //         {text : 'Bass', value : 'Bass'},\r\n            //         {text : 'Drum', value : 'Drum'},\r\n            //         {text : 'Keyboard', value : 'Keyboard'},\r\n            //         {text : 'Fixed', value : 'fix'},\r\n            // ],\r\n            // delFrom : \"\", // quit from song\r\n            \r\n            // // positions\r\n            // pos_headers : [\r\n            //     {text : \"Name\", value : \"name\"},\r\n            //     {text : \"Position\", value : \"position\"},\r\n            //     {text : \"Status\", value : \"fixed\"},\r\n            // ],\r\n            // selected_position : \"\",\r\n            // openModal : false,\r\n            // delPosition : \"\",\r\n\r\n            // colors : {\r\n            //     true : \"primary\",\r\n            //     false : \"error\"\r\n            // },\r\n            // texts : {\r\n            //     true : \"Fixed\",\r\n            //     false : \"Not Fixed\"\r\n            // }\r\n\r\n      \r\n        }\r\n    },\r\n\r\n    components : {\r\n        SongList\r\n    },\r\n    \r\n    methods: {\r\n\r\n\r\n        retrieveProject : function(){\r\n            axios({\r\n                method : \"GET\",\r\n                url : url + this.$route.params.project_id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                }\r\n            }).then((response) => {\r\n                this.project = response.data // project만 가져오자. songs는 songs list에서 가져오고 \r\n                if (parseInt(localStorage.getItem('user')) === this.project.leader){\r\n                    console.log(\"ture\")\r\n                    this.manage_mode = true\r\n                }\r\n\r\n            }).catch((error) => {\r\n                console.log(\"Failed to get retreival\", error.response);\r\n            });\r\n        },\r\n\r\n        to : function(destination){\r\n            // console.log(this.$router)\r\n\r\n            this.$router.push({\r\n                name : destination,\r\n                params : {\r\n                    project_id : this.$route.params.project_id\r\n                }})\r\n        },\r\n\r\n\r\n\r\n    },\r\n\r\n    mounted() {\r\n        this.retrieveProject()\r\n        window.onresize = () => {\r\n            this.windowHeight = window.innerHeight\r\n        }\r\n    },\r\n\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n#parralax{\r\n    background-image : url('~@/assets/wallpaper.jpg');\r\n    background-size: cover;\r\n\r\n}\r\n\r\n.posting-container{\r\n    width: 80%;\r\n}\r\n\r\n.btn-container{\r\n    margin-left: auto!important;\r\n}\r\n\r\n.blurred{\r\n    background: rgba(0, 0, 0, 0.2);\r\n    backdrop-filter: blur(10px);\r\n    width : 100% !important;\r\n    height:  100% !important;\r\n}\r\n\r\n\r\n</style>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}