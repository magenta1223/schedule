{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport setToken from \"@/utils/auth.js\";\n// import { Header, Item } from \"vue3-easy-data-table\";\nimport SongList from \"@/views/Song/SongList.vue\";\nlet url = \"http://127.0.0.1:8000/api/project/\"; // 장고 drf 서버 주소\nlet song_url = \"http://127.0.0.1:8000/api/song/\"; // 장고 drf 서버 주소\n\nexport default {\n  name: \"ProjectRetrieve\",\n  data: () => {\n    return {\n      // windows\n      windowHeight: window.innerHeight,\n      windowWidth: window.innerWidth,\n      // manage\n      manage_mode: false,\n      // project\n      project: \"\"\n\n      //songs\n      //             songs : [],\n      //             headers : [\n      //                     {text : 'Artist', value : 'artist'},\n      //                     {text : 'Title', value : 'title'},\n      //                     {text : 'Vocal', value : 'Vocal'},\n      //                     {text : 'Guitar1', value : 'Guitar1'},\n      //                     {text : 'Guitar2', value : 'Guitar2'},\n      //                     {text : 'Bass', value : 'Bass'},\n      //                     {text : 'Drum', value : 'Drum'},\n      //                     {text : 'Keyboard', value : 'Keyboard'},\n      //                     {text : 'Fixed', value : 'fix'},\n      // ],\n      //             delFrom : \"\", // quit from song\n\n      //             // positions\n      //             pos_headers : [\n      //                 {text : \"Name\", value : \"name\"},\n      //                 {text : \"Position\", value : \"position\"},\n      //                 {text : \"Status\", value : \"fixed\"},\n      //             ],\n      //             selected_position : \"\",\n      //             openModal : false,\n      //             delPosition : \"\",\n\n      //             colors : {\n      //                 true : \"primary\",\n      //                 false : \"error\"\n      //             },\n      //             texts : {\n      //                 true : \"Fixed\",\n      //                 false : \"Not Fixed\"\n      //             }\n    };\n  },\n\n  components: {\n    SongList\n  },\n  methods: {\n    parsePlayer: function (song) {\n      song.players.map(player => {\n        if (player.fixed) {\n          //song[player.position] = player \n          song[player.position] = player.user.name;\n        }\n      });\n      return song;\n    },\n    retrieveProject: function () {\n      axios({\n        method: \"GET\",\n        url: url + this.$route.params.project_id + '/',\n        headers: setToken(),\n        params: {\n          user_id: localStorage.getItem('user')\n        }\n      }).then(response => {\n        this.project = response.data;\n        this.songs = this.project.songs.map((song, index) => {\n          song.index = index;\n          song = this.parsePlayer(song);\n          return song;\n        });\n        if (parseInt(localStorage.getItem('user')) === this.project.leader) {\n          console.log(\"ture\");\n          this.manage_mode = true;\n        }\n      }).catch(error => {\n        console.log(\"Failed to get retreival\", error.response);\n      });\n    },\n    setIndex: function (oldSong, newSong) {\n      newSong.index = oldSong.index;\n      newSong = this.parsePlayer(newSong);\n      return newSong;\n    },\n    to: function (destination) {\n      // console.log(this.$router)\n\n      this.$router.push({\n        name: destination,\n        params: {\n          project_id: this.$route.params.project_id\n        }\n      });\n    },\n    applyPosition: function (song) {\n      axios({\n        method: \"PATCH\",\n        url: song_url + song.id + '/',\n        headers: setToken(),\n        params: {\n          user_id: localStorage.getItem('user'),\n          position: this.selected_position,\n          action: \"apply\"\n        }\n      }).then(response => {\n        this.songs[song.index] = this.setIndex(song, response.data);\n      }).catch(error => {\n        console.log(\"Failed to update song\", error.response);\n      });\n    },\n    selectSong: function (index) {\n      this.delFrom = this.songs[index];\n    },\n    deleteModal: function (item) {\n      // item의 user와 현재 user가 같은지?\n      if (item.user.id === parseInt(localStorage.getItem(\"user\"))) {\n        this.delPosition = item;\n        this.openModal = true;\n      }\n    },\n    quitPosition: function () {\n      axios({\n        method: \"PATCH\",\n        url: song_url + this.delFrom.id + '/',\n        headers: setToken(),\n        params: {\n          user_id: localStorage.getItem('user'),\n          position: this.delPosition.position,\n          action: \"quit\"\n        }\n      }).then(response => {\n        this.openModal = false;\n        this.songs[this.delFrom.index] = this.setIndex(this.delFrom, response.data);\n      }).catch(error => {\n        console.log(\"Failed to quit from the song\", error.response);\n      });\n    }\n  },\n  mounted() {\n    this.retrieveProject();\n    window.onresize = () => {\n      this.windowHeight = window.innerHeight;\n    };\n  },\n  watch: {\n    songs: {\n      handler: function (newVal, oldVal) {\n        newVal;\n        oldVal;\n      },\n      deep: true,\n      immediate: true\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","setToken","SongList","url","song_url","name","data","windowHeight","window","innerHeight","windowWidth","innerWidth","manage_mode","project","components","methods","parsePlayer","song","players","map","player","fixed","position","user","retrieveProject","method","$route","params","project_id","headers","user_id","localStorage","getItem","then","response","songs","index","parseInt","leader","console","log","catch","error","setIndex","oldSong","newSong","to","destination","$router","push","applyPosition","id","selected_position","action","selectSong","delFrom","deleteModal","item","delPosition","openModal","quitPosition","mounted","onresize","watch","handler","newVal","oldVal","deep","immediate"],"sourceRoot":"","sources":["C:\\schedule\\config\\front\\src\\views\\Project\\ProjectRetrieve.vue"],"sourcesContent":["<template>\r\n    \r\n    <v-container class = \"mb-6\">\r\n        <!-- 헤더 -->\r\n        <v-container>\r\n        <v-parallax\r\n            id = \"parralax\"\r\n            class = \"rounded-xl\"\r\n            :width=\"windowWidth\"\r\n            height=\"200px\"\r\n        >\r\n        <v-row class=\"blurred rounded-xl ma-0\"  justify=\"space-between\" align=\"center\">\r\n                <v-col class = \"ma-4\">\r\n                    <h1 class = \"font-weight-medium text-white\">\r\n                        {{project.title}}\r\n                    </h1>\r\n                    <v-btn v-if=\"manage_mode\" @click=\"to('project_manage')\">\r\n                        MANAGE\r\n                    </v-btn>\r\n                </v-col>\r\n\r\n        </v-row>\r\n        </v-parallax>\r\n        </v-container>\r\n        <!-- 바디 -->\r\n            <v-btn @click=\"to('song_create')\">\r\n                Create Song\r\n            </v-btn>\r\n\r\n            <v-tabs\r\n            show-arrows\r\n            >\r\n        <v-tabs-slider color=\"teal lighten-3\"></v-tabs-slider>\r\n\r\n        <v-tab\r\n            v-for=\"category in headers\"\r\n            :key=\"category.text\"\r\n        >\r\n            {{category.text}}\r\n\r\n        </v-tab>\r\n    </v-tabs>\r\n    <SongList/>\r\n    </v-container>\r\n\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport setToken from \"@/utils/auth.js\"\r\n// import { Header, Item } from \"vue3-easy-data-table\";\r\nimport SongList from \"@/views/Song/SongList.vue\"\r\n\r\nlet url = \"http://127.0.0.1:8000/api/project/\";  // 장고 drf 서버 주소\r\nlet song_url = \"http://127.0.0.1:8000/api/song/\";  // 장고 drf 서버 주소\r\n\r\n\r\n\r\nexport default {\r\n    \r\n    name : \"ProjectRetrieve\",\r\n\r\n    data : () => {\r\n        return {\r\n            // windows\r\n            windowHeight : window.innerHeight,\r\n            windowWidth : window.innerWidth,\r\n            \r\n            // manage\r\n            manage_mode : false,\r\n\r\n            // project\r\n            project : \"\",\r\n\r\n            //songs\r\n//             songs : [],\r\n//             headers : [\r\n//                     {text : 'Artist', value : 'artist'},\r\n//                     {text : 'Title', value : 'title'},\r\n//                     {text : 'Vocal', value : 'Vocal'},\r\n//                     {text : 'Guitar1', value : 'Guitar1'},\r\n//                     {text : 'Guitar2', value : 'Guitar2'},\r\n//                     {text : 'Bass', value : 'Bass'},\r\n//                     {text : 'Drum', value : 'Drum'},\r\n//                     {text : 'Keyboard', value : 'Keyboard'},\r\n//                     {text : 'Fixed', value : 'fix'},\r\n// ],\r\n//             delFrom : \"\", // quit from song\r\n            \r\n//             // positions\r\n//             pos_headers : [\r\n//                 {text : \"Name\", value : \"name\"},\r\n//                 {text : \"Position\", value : \"position\"},\r\n//                 {text : \"Status\", value : \"fixed\"},\r\n//             ],\r\n//             selected_position : \"\",\r\n//             openModal : false,\r\n//             delPosition : \"\",\r\n\r\n//             colors : {\r\n//                 true : \"primary\",\r\n//                 false : \"error\"\r\n//             },\r\n//             texts : {\r\n//                 true : \"Fixed\",\r\n//                 false : \"Not Fixed\"\r\n//             }\r\n\r\n      \r\n        }\r\n    },\r\n\r\n    components : {\r\n        SongList\r\n    },\r\n    \r\n    methods: {\r\n        parsePlayer : function(song){\r\n            song.players.map((player) => {\r\n                if (player.fixed){\r\n                    //song[player.position] = player \r\n                    song[player.position] = player.user.name \r\n                }\r\n            })\r\n            return song\r\n        },\r\n        \r\n        retrieveProject : function(){\r\n            axios({\r\n                method : \"GET\",\r\n                url : url + this.$route.params.project_id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                }\r\n            }).then((response) => {\r\n                this.project = response.data\r\n                this.songs = this.project.songs.map( (song, index) => {\r\n                    song.index = index\r\n                    song = this.parsePlayer(song)\r\n                    return song\r\n                })\r\n                if (parseInt(localStorage.getItem('user')) === this.project.leader){\r\n                    console.log(\"ture\")\r\n                    this.manage_mode = true\r\n                }\r\n\r\n            }).catch((error) => {\r\n                console.log(\"Failed to get retreival\", error.response);\r\n            });\r\n        },\r\n\r\n        setIndex : function(oldSong, newSong){\r\n            newSong.index = oldSong.index\r\n            newSong = this.parsePlayer(newSong)\r\n            return newSong\r\n        }, \r\n\r\n        to : function(destination){\r\n            // console.log(this.$router)\r\n\r\n            this.$router.push({\r\n                name : destination,\r\n                params : {\r\n                    project_id : this.$route.params.project_id\r\n                }})\r\n        },\r\n\r\n        applyPosition : function(song){\r\n            axios({\r\n                method : \"PATCH\",\r\n                url : song_url + song.id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                    position : this.selected_position,\r\n                    action : \"apply\"\r\n                }\r\n            }).then((response) => {\r\n                this.songs[song.index] = this.setIndex(song, response.data)\r\n            }).catch((error) => {\r\n                console.log(\"Failed to update song\", error.response);\r\n            });\r\n        },\r\n\r\n        selectSong : function(index){\r\n            this.delFrom = this.songs[index]\r\n        },\r\n\r\n        deleteModal : function(item){\r\n            // item의 user와 현재 user가 같은지?\r\n            if (item.user.id === parseInt(localStorage.getItem(\"user\"))){\r\n                this.delPosition = item\r\n                this.openModal = true\r\n            } \r\n        },\r\n\r\n        quitPosition : function(){\r\n            axios({\r\n                method : \"PATCH\",\r\n                url : song_url + this.delFrom.id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                    position : this.delPosition.position,\r\n                    action : \"quit\"\r\n                }\r\n            }).then((response) => {\r\n                this.openModal = false\r\n                this.songs[this.delFrom.index] = this.setIndex(this.delFrom, response.data)\r\n            }).catch((error) => {\r\n                console.log(\"Failed to quit from the song\", error.response);\r\n            });\r\n        },\r\n\r\n\r\n\r\n    },\r\n\r\n    mounted() {\r\n        this.retrieveProject()\r\n        window.onresize = () => {\r\n            this.windowHeight = window.innerHeight\r\n        }\r\n    },\r\n\r\n    watch : {\r\n        songs : {\r\n            handler: function(newVal, oldVal){\r\n                newVal; oldVal\r\n            },\r\n            deep : true,\r\n            immediate : true\r\n        },\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n#parralax{\r\n    background-image : url('~@/assets/wallpaper.jpg');\r\n    background-size: cover;\r\n\r\n}\r\n\r\n.posting-container{\r\n    width: 80%;\r\n}\r\n\r\n.btn-container{\r\n    margin-left: auto!important;\r\n}\r\n\r\n.blurred{\r\n    background: rgba(0, 0, 0, 0.2);\r\n    backdrop-filter: blur(10px);\r\n    width : 100% !important;\r\n    height:  100% !important;\r\n}\r\n\r\n.dialog{\r\n    margin-left: auto!important; margin-right: auto!important; \r\n}\r\n\r\n.customize-table{\r\n    --easy-table-body-item-padding : 0px, 0px;\r\n}\r\n</style>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}