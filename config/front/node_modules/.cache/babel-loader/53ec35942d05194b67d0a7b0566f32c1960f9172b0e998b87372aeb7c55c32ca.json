{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"d-flex flex-column fill-height justify-center align-center text-white\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_parallax = _resolveComponent(\"v-parallax\");\n  return _openBlock(), _createBlock(_component_v_parallax, {\n    align: \"center\",\n    height: _ctx.windowHeight,\n    src: require('@/assets/wallpaper.jpg')\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_v_card, {\n      class: \"elevation-12 transparent-body\",\n      width: \"80%\"\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" title \"), _createVNode(_component_v_card_title, null, {\n        default: _withCtx(() => [_createTextVNode(\" CEX \")]),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" body \"), _createVNode(_component_v_card_text, null, {\n        default: _withCtx(() => [_createVNode(_component_v_form, null, {\n          default: _withCtx(() => [_createVNode(_component_v_text_field, {\n            modelValue: _ctx.user.username,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.user.username = $event),\n            class: \"text-white\",\n            name: \"username\",\n            label: \"Email/ID\",\n            type: \"text\"\n          }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_text_field, {\n            modelValue: _ctx.user.password,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.user.password = $event),\n            id: \"password\",\n            class: \"text-white\",\n            name: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            color: \"white\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" buttons \")]),\n      _: 1 /* STABLE */\n    })])]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"height\", \"src\"]);\n}","map":{"version":3,"mappings":";;EAQSA,KAAK,EAAC;AAAuE;;;;;;;;uBALtFC,aAyCaC;IAxCTC,KAAK,EAAC,QAAQ;IACbC,MAAM,EAAEC,iBAAY;IACpBC,GAAG,EAAEC,OAAO;;sBAEb,MAmCM,CAnCNC,oBAmCM,OAnCNC,UAmCM,GAlCFC,aAiCSC;MAjCDX,KAAK,EAAC,+BAA+B;MAACY,KAAK,EAAC;;wBAChD,MAAc,CAAdC,8BAAc,EACdH,aAEeI;0BAFD,MAEd,kBAFc,OAEd;;UAGAD,6BAAa,EACbH,aAoBcK;0BAnBV,MAkBS,CAlBTL,aAkBSM;4BAjBL,MAMgB,CANhBN,aAMgBO;wBALHZ,SAAI,CAACa,QAAQ;uEAAbb,SAAI,CAACa,QAAQ;YACtBlB,KAAK,EAAG,YAAY;YACpBmB,IAAI,EAAC,UAAU;YACfC,KAAK,EAAC,UAAU;YAChBC,IAAI,EAAC;mDAETX,aASgBO;wBARHZ,SAAI,CAACiB,QAAQ;uEAAbjB,SAAI,CAACiB,QAAQ;YACtBC,EAAE,EAAC,UAAU;YACbvB,KAAK,EAAG,YAAY;YACpBmB,IAAI,EAAC,UAAU;YACfC,KAAK,EAAC,UAAU;YAChBC,IAAI,EAAC,UAAU;YACfG,KAAK,EAAG;;;;;;UAKpBX,gCAAgB","names":["class","_createBlock","_component_v_parallax","align","height","_ctx","src","require","_createElementVNode","_hoisted_1","_createVNode","_component_v_card","width","_createCommentVNode","_component_v_card_title","_component_v_card_text","_component_v_form","_component_v_text_field","username","name","label","type","password","id","color"],"sourceRoot":"","sources":["C:\\schedule\\config\\front\\src\\views\\Auth\\RegisterUser.vue"],"sourcesContent":["<template>\r\n\r\n\r\n<v-parallax\r\n    align=\"center\"\r\n    :height=\"windowHeight\"\r\n    :src=\"require('@/assets/wallpaper.jpg')\"\r\n  >\r\n    <div class=\"d-flex flex-column fill-height justify-center align-center text-white\">\r\n        <v-card class=\"elevation-12 transparent-body\" width=\"80%\">\r\n            <!-- title -->\r\n            <v-card-title>\r\n                CEX\r\n            </v-card-title>\r\n\r\n\r\n            <!-- body -->\r\n            <v-card-text >\r\n                <v-form>\r\n                    <v-text-field\r\n                        v-model=\"user.username\"\r\n                        class = \"text-white\"\r\n                        name=\"username\"\r\n                        label=\"Email/ID\"\r\n                        type=\"text\"\r\n                    ></v-text-field>\r\n                    <v-text-field\r\n                        v-model=\"user.password\"\r\n                        id=\"password\"\r\n                        class = \"text-white\"\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        color = \"white\"\r\n\r\n                    ></v-text-field>\r\n                </v-form>\r\n            </v-card-text>\r\n            <!-- buttons -->\r\n\r\n\r\n\r\n        </v-card>\r\n    </div>\r\n</v-parallax>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nlet url = \"http://127.0.0.1:8000/api/login/\";\r\n\r\nexport default {\r\n\r\n    name : \"RegisterUser\",\r\n    data : () => {\r\n        return {\r\n            user : {\r\n                username: \"\",\r\n                password : \"\",\r\n            },\r\n            windowHeight : window.innerHeight\r\n                 \r\n        };\r\n    },\r\n\r\n\r\n   methods : {\r\n       Login :function() {\r\n        console.log(this.user)\r\n            axios({\r\n                method: \"POST\",\r\n                url: url, // localhost:8000/user/1 로 delete method\r\n                data: this.user,\r\n            })\r\n                .then((response) => {\r\n                    console.log(response.data);\r\n                    localStorage.setItem(\"authdata\", response.data)\r\n                    localStorage.setItem('access_token', response.data.access_token);\r\n                    localStorage.setItem('refresh_token', response.data.refresh_token);\r\n                    localStorage.setItem('user', response.data.user.id);\r\n                    console.log(\"done\")\r\n\r\n\r\n\r\n\r\n                    // js redirect\r\n                    // window.location.href = 'http://localhost:8080/';\r\n                    \r\n                    // vue\r\n                    //this.$router.push({ name : 'home'})\r\n                    console.log(this.$router)\r\n                    this.$router.go(this.$router.currentRoute);\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"Failed to get userList\", error.response);\r\n                });\r\n        },\r\n    Register :function() {\r\n        this.$router.push({ name : 'register'})\r\n        },\r\n   },\r\n\r\n  mounted(){\r\n    \r\n    window.onresize = () => {\r\n      this.windowHeight = window.innerHeight\r\n    }\r\n  },\r\n\r\n\r\n\r\n\r\n\r\n};\r\n</script>\r\n\r\n<style>\r\n#register {\r\n    margin-left : auto ;\r\n    color : white;\r\n}\r\n\r\n.transparent-body {\r\n    background: rgba(0, 0, 0, 0.2);\r\n    backdrop-filter: blur(10px);\r\n    /* color : rgb(255,255,255); 기본 배경 및 텍스트 컬러 */\r\n    \r\n    /* color : rgb(0,0,0) */\r\n\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}