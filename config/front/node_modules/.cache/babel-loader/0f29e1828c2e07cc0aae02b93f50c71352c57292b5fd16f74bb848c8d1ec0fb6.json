{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_MainView = _resolveComponent(\"MainView\");\n  const _component_v_main = _resolveComponent(\"v-main\");\n  const _component_LogIn = _resolveComponent(\"LogIn\");\n  const _component_RegisterUser = _resolveComponent(\"RegisterUser\");\n  const _component_v_app = _resolveComponent(\"v-app\");\n  return _openBlock(), _createBlock(_component_v_app, null, {\n    default: _withCtx(() => [_ctx.status ? (_openBlock(), _createBlock(_component_v_main, {\n      key: 0\n    }, {\n      default: _withCtx(() => [_createVNode(_component_MainView)]),\n      _: 1 /* STABLE */\n    })) : (_openBlock(), _createBlock(_component_v_main, {\n      key: 1\n    }, {\n      default: _withCtx(() => [_createVNode(_component_LogIn), _createVNode(_component_RegisterUser)]),\n      _: 1 /* STABLE */\n    }))]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":";;;;;;;uBACIA,aAQQC;sBAPJ,MAES,CAFKC,WAAM,kBAApBF,aAESG;MAAAC;IAAA;wBADL,MAAW,CAAXC,aAAWC;;yBAEfN,aAGSG;MAAAC;IAAA;wBAFL,MAAQ,CAARC,aAAQE,mBACRF,aAAeG","names":["_createBlock","_component_v_app","_ctx","_component_v_main","key","_createVNode","_component_MainView","_component_LogIn","_component_RegisterUser"],"sourceRoot":"","sources":["C:\\schedule\\config\\front\\src\\App.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-main v-if=\"status\">\n            <MainView/>\n        </v-main>\n        <v-main v-else>\n            <LogIn/>\n            <RegisterUser/>\n        </v-main>\n    </v-app>\n</template>\n\n<script>\nimport MainView from '@/views/Main.vue'\nimport LogIn from '@/views/Auth/LogIn.vue'\nimport RegisterUser from '@/views/Auth/RegisterUser.vue'\n\n// import axios from \"axios\";\n\nexport default {\n  name: 'App',\n\n    data: () => ({\n        status : \"login\"\n    }),\n    created : function(){\n        // 로컬스토리지에 jwt 이 존재하는지에 따라 로그인 여부 판단하기\n        const token = localStorage.getItem('access_token')\n        \n        // 이미 로그인한 상태. \n        if (localStorage.getItem(\"access_token\")){\n            const expired = (JSON.parse(atob(localStorage.getItem(\"access_token\").split('.')[1]))).exp\n            // 토큰만료 시 로그아웃 \n            if (expired >= Date.now()/1000){\n                this.status = \"logged\"\n                this.$router.push({\"name\" : \"projects\"})\n            } else {\n                this.status = \"login\"\n            }\n        // 최초 로그인. token이 \n        }\n        token\n        \n\n    },\n\n\n    components: {\n        MainView,\n        LogIn,\n        RegisterUser\n    },\n\n\n}\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}