{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport setToken from \"@/utils/auth.js\";\nimport ManageSongs from \"@/views/Project/Manage/ManageSongs.vue\";\nimport ManageStatus from \"@/views/Project/Manage/ManageStatus.vue\";\n\n// import { Header, Item } from \"vue3-easy-data-table\";\nlet url = \"http://127.0.0.1:8000/api/project/\"; // 장고 drf 서버 주소\nlet song_url = \"http://127.0.0.1:8000/api/song/\"; // 장고 drf 서버 주소\n\nexport default {\n  name: \"ProjectManage\",\n  data: () => {\n    return {\n      // windows\n      windowHeight: window.innerHeight,\n      windowWidth: window.innerWidth,\n      // manage\n      manage: false,\n      // project -> props\n      project: \"\"\n\n      //songs -> props\n    };\n  },\n\n  components: {\n    ManageSongs,\n    ManageStatus\n  },\n  methods: {\n    parsePlayer: function (song) {\n      song.players.map(player => {\n        if (player.fixed) {\n          song[player.position] = player.user.name;\n        }\n      });\n      return song;\n    },\n    setIndex: function (oldSong, newSong) {\n      newSong.index = oldSong.index;\n      newSong = this.parsePlayer(newSong);\n      return newSong;\n    },\n    retrieveProject: function () {\n      axios({\n        method: \"GET\",\n        url: url + this.$route.params.project_id + '/',\n        headers: setToken(),\n        params: {\n          user_id: localStorage.getItem('user')\n        }\n      }).then(response => {\n        this.project = response.data;\n        this.songs = this.project.songs.map((song, index) => {\n          song.index = index;\n          song = this.parsePlayer(song);\n          this.selectedSongs.push(song.fix);\n          return song;\n        });\n        console.log(this.selectedSongs);\n        this.status = this.project.status;\n        console.log(this.project);\n        if (parseInt(localStorage.getItem('user')) === this.project.leader) {\n          console.log(\"ture\");\n          this.manage_mode = true;\n        }\n      }).catch(error => {\n        console.log(\"Failed to get retreival\", error.response);\n      });\n    },\n    to: function (destination) {\n      // console.log(this.$router)\n\n      this.$router.push({\n        name: destination,\n        params: {\n          project_id: this.$route.params.project_id\n        }\n      });\n    },\n    serialize: function (item) {\n      let instruments = {};\n      let selectedPlayers = {};\n      let players = item.players;\n      let inst_list = Array();\n      players = players.map(player => {\n        player.name = player.user.name;\n        player = {\n          ...player\n        }; // Proxy to dictionary\n        return player;\n      });\n      for (let i in players) {\n        let position = players[i].position;\n        if (!(position in instruments)) {\n          instruments[position] = Array();\n          selectedPlayers[position] = \"\";\n        }\n        instruments[position].push(players[i]);\n      }\n      for (let index in item.instruments) {\n        let position = item.instruments[index];\n        inst_list.push({\n          'position': position,\n          'player': instruments[position],\n          'selected': \"\"\n        });\n      }\n      this.selectedPlayers = selectedPlayers;\n      return inst_list;\n    },\n    fix: function (song) {\n      console.log(song);\n      axios({\n        method: \"PATCH\",\n        url: song_url + song.id + '/',\n        headers: setToken(),\n        params: {\n          user_id: localStorage.getItem('user'),\n          selectedPlayers: JSON.stringify(this.selectedPlayers),\n          action: \"fix\"\n        }\n      }).then(response => {\n        this.songs[song.index] = this.setIndex(song, response.data);\n        this.manage = false;\n      }).catch(error => {\n        console.log(\"Failed to fix this song\", error.response);\n      });\n    },\n    save: function () {\n      console.log(this.selectedSongs);\n      this.selectedSongs.map((boolean, song_index) => {\n        this.songs[song_index].fix = boolean;\n      });\n      axios({\n        method: \"PATCH\",\n        url: url + this.project.id + '/',\n        headers: setToken(),\n        params: {\n          user_id: localStorage.getItem('user'),\n          project_id: this.project.id,\n          selectedSongs: JSON.stringify(this.songs),\n          status: this.status,\n          action: \"fix\"\n        }\n      }).then(response => {\n        // saved modal 띄우기\n        console.log(response);\n      }).catch(error => {\n        console.log(\"Failed to fix the project\", error.response);\n      });\n    },\n    modal: function (item) {\n      this.openModal = true;\n      this.delItem = item;\n    },\n    deleteSong: function (song) {\n      //모달 띄우고 delete view로 걍 보내버리면 됨?> \n      axios({\n        method: \"DELETE\",\n        url: song_url + song.id,\n        headers: setToken()\n      }).then(response => {\n        response;\n        this.openModal = false;\n        // this.songs에서 지우고 index 다시 세팅\n        this.songs.splice(song.index, 1);\n        this.selectedSongs.splice(song.index, 1);\n        this.songs = this.songs.map((song, index) => {\n          song.index = index;\n          return song;\n        });\n        // saved modal 띄우기\n      }).catch(error => {\n        console.log(\"Failed to delete song\", error.response);\n      });\n    },\n    idle: function (item) {\n      item;\n    }\n  },\n  mounted() {\n    window.onresize = () => {\n      this.windowHeight = window.innerHeight;\n    };\n  },\n  watch: {\n    songs: {\n      handler: function (newVal, oldVal) {\n        newVal;\n        oldVal;\n      },\n      deep: true,\n      immediate: true\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","setToken","ManageSongs","ManageStatus","url","song_url","name","data","windowHeight","window","innerHeight","windowWidth","innerWidth","manage","project","components","methods","parsePlayer","song","players","map","player","fixed","position","user","setIndex","oldSong","newSong","index","retrieveProject","method","$route","params","project_id","headers","user_id","localStorage","getItem","then","response","songs","selectedSongs","push","fix","console","log","status","parseInt","leader","manage_mode","catch","error","to","destination","$router","serialize","item","instruments","selectedPlayers","inst_list","Array","i","id","JSON","stringify","action","save","boolean","song_index","modal","openModal","delItem","deleteSong","splice","idle","mounted","onresize","watch","handler","newVal","oldVal","deep","immediate"],"sourceRoot":"","sources":["C:\\schedule\\config\\front\\src\\views\\Project\\Manage\\ProjectManage.vue"],"sourcesContent":["<template>\r\n    <v-container class = \"mb-6\">\r\n        <!-- 헤더 -->\r\n        <v-container>\r\n        <v-parallax\r\n            id = \"parralax\"\r\n            class = \"rounded-xl\"\r\n            :width=\"windowWidth\"\r\n            height=\"200px\"\r\n        >\r\n            <v-row class=\"blurred align-center justify-start rounded-xl ma-0\">\r\n                <v-col class = \"ma-4\">\r\n                    <h1 class = \"font-weight-medium text-white\">\r\n                        MANAGE MODE : {{project.title}}\r\n                    </h1>\r\n\r\n                    <v-btn @click=\"save\">\r\n                        SAVE\r\n                    </v-btn>\r\n                </v-col>\r\n            </v-row>\r\n        </v-parallax>\r\n        </v-container>\r\n        <!-- 바디 -->\r\n        <ManageStatus/>\r\n        \r\n\r\n    <ManageSongs/>\r\n    </v-container>\r\n    \r\n\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport setToken from \"@/utils/auth.js\"\r\nimport ManageSongs from \"@/views/Project/Manage/ManageSongs.vue\"\r\nimport ManageStatus from \"@/views/Project/Manage/ManageStatus.vue\"\r\n\r\n// import { Header, Item } from \"vue3-easy-data-table\";\r\nlet url = \"http://127.0.0.1:8000/api/project/\";  // 장고 drf 서버 주소\r\nlet song_url = \"http://127.0.0.1:8000/api/song/\";  // 장고 drf 서버 주소\r\n\r\n\r\n\r\nexport default {\r\n\r\n    name : \"ProjectManage\",\r\n    \r\n    data : () => {\r\n        return {\r\n            // windows\r\n            windowHeight : window.innerHeight,\r\n            windowWidth : window.innerWidth,\r\n            \r\n            // manage\r\n            manage : false,\r\n\r\n            // project -> props\r\n            project : \"\",\r\n\r\n            //songs -> props\r\n        }\r\n    },\r\n\r\n    components : {\r\n        ManageSongs,\r\n        ManageStatus\r\n    },\r\n    \r\n    methods: {\r\n        parsePlayer : function(song){\r\n            song.players.map((player) => {\r\n                if (player.fixed){\r\n                    song[player.position] = player.user.name \r\n                }\r\n            })\r\n            return song\r\n        },\r\n        \r\n        setIndex : function(oldSong, newSong){\r\n            newSong.index = oldSong.index\r\n            newSong = this.parsePlayer(newSong)\r\n            return newSong\r\n        }, \r\n        retrieveProject : function(){\r\n            axios({\r\n                method : \"GET\",\r\n                url : url + this.$route.params.project_id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                }\r\n            }).then((response) => {\r\n                this.project = response.data\r\n                this.songs = this.project.songs.map( (song, index) => {\r\n                    song.index = index\r\n                    song = this.parsePlayer(song)\r\n                    this.selectedSongs.push(song.fix)\r\n                    return song\r\n                })\r\n\r\n                console.log(this.selectedSongs)\r\n\r\n                this.status = this.project.status\r\n\r\n                console.log(this.project)\r\n\r\n\r\n                if (parseInt(localStorage.getItem('user')) === this.project.leader){\r\n                    console.log(\"ture\")\r\n                    this.manage_mode = true\r\n                }\r\n\r\n            }).catch((error) => {\r\n                console.log(\"Failed to get retreival\", error.response);\r\n            });\r\n        },\r\n\r\n\r\n\r\n        to : function(destination){\r\n            // console.log(this.$router)\r\n\r\n            this.$router.push({\r\n                name : destination,\r\n                params : {\r\n                    project_id : this.$route.params.project_id\r\n                }})\r\n        },\r\n\r\n        serialize : function(item){\r\n            let instruments = {}\r\n            let selectedPlayers = {}\r\n            let players = item.players\r\n            let inst_list = Array()\r\n\r\n            players = players.map((player) => {\r\n                player.name = player.user.name\r\n                player = { ...player }; // Proxy to dictionary\r\n                return player\r\n            })\r\n\r\n            for (let i in players){\r\n                let position = players[i].position\r\n                if (!(position in instruments)){\r\n                    instruments[position] = Array()\r\n                    selectedPlayers[position] = \"\"\r\n                }\r\n                instruments[position].push(players[i])\r\n            }\r\n\r\n            for (let index in item.instruments){\r\n                let position = item.instruments[index]\r\n                inst_list.push({\r\n                    'position' : position,\r\n                    'player' : instruments[position],\r\n                    'selected' : \"\"\r\n                })\r\n            }\r\n            this.selectedPlayers = selectedPlayers\r\n            return inst_list\r\n        },\r\n\r\n        fix : function(song){\r\n            console.log(song)\r\n            axios({\r\n                method : \"PATCH\",\r\n                url : song_url + song.id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                    selectedPlayers : JSON.stringify(this.selectedPlayers),\r\n                    action : \"fix\"\r\n                }\r\n            }).then((response) => {\r\n                this.songs[song.index] = this.setIndex(song, response.data)\r\n                this.manage = false\r\n            }).catch((error) => {\r\n                console.log(\"Failed to fix this song\", error.response);\r\n            });\r\n        },\r\n\r\n        save : function(){\r\n            console.log(this.selectedSongs)\r\n\r\n            this.selectedSongs.map((boolean, song_index)=> {\r\n                this.songs[song_index].fix = boolean\r\n            })\r\n\r\n\r\n            axios({\r\n                method : \"PATCH\",\r\n                url : url + this.project.id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                    project_id : this.project.id,\r\n                    selectedSongs : JSON.stringify(this.songs),\r\n                    status : this.status,\r\n                    action : \"fix\"\r\n                }\r\n            }).then((response) => {\r\n                // saved modal 띄우기\r\n                console.log(response)\r\n            }).catch((error) => {\r\n                console.log(\"Failed to fix the project\", error.response);\r\n            });\r\n\r\n        },\r\n\r\n        modal : function(item){\r\n            this.openModal = true\r\n            this.delItem = item\r\n        },\r\n\r\n\r\n        deleteSong : function(song){\r\n            //모달 띄우고 delete view로 걍 보내버리면 됨?> \r\n            axios({\r\n                method : \"DELETE\",\r\n                url : song_url + song.id,\r\n                headers : setToken(),\r\n            }).then((response) => {\r\n                response;\r\n                this.openModal = false\r\n                // this.songs에서 지우고 index 다시 세팅\r\n                this.songs.splice(song.index, 1)\r\n                this.selectedSongs.splice(song.index, 1)\r\n                this.songs = this.songs.map( (song, index) => {\r\n                    song.index = index\r\n                    return song\r\n                })\r\n                // saved modal 띄우기\r\n            }).catch((error) => {\r\n                console.log(\"Failed to delete song\", error.response);\r\n            });\r\n\r\n\r\n        },\r\n\r\n        idle : function(item){\r\n            item;\r\n\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n        window.onresize = () => {\r\n            this.windowHeight = window.innerHeight\r\n        }\r\n    },\r\n\r\n    watch : {\r\n        songs : {\r\n            handler: function(newVal, oldVal){\r\n                newVal; oldVal\r\n            },\r\n            deep : true,\r\n            immediate : true\r\n        },\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n#parralax{\r\n    background-image : url('~@/assets/wallpaper.jpg');\r\n    background-size: cover;\r\n\r\n}\r\n\r\n.posting-container{\r\n    width: 80%;\r\n}\r\n\r\n\r\n\r\n.blurred{\r\n    background: rgba(0, 0, 0, 0.2);\r\n    backdrop-filter: blur(2px);\r\n    width : 100% !important;\r\n    height:  100% !important;\r\n}\r\n\r\n.dialog{\r\n    margin-left: auto!important; margin-right: auto!important; \r\n}\r\n\r\n.customize-table{\r\n    --easy-table-body-item-padding : 0px, 0px;\r\n    --easy-table-body-row-height : 24px!important;\r\n}\r\n\r\n.cbox >>> .v-input__control{\r\n    justify-content: center;\r\n}\r\n\r\n.cbox >>> .v-input__details{\r\n    height: 0px!important;\r\n}\r\n</style>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}