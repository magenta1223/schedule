{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock, Fragment as _Fragment, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-a2ec46aa\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"font-weight-medium text-white\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \" 비고\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \" 지원하기 \", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_parallax = _resolveComponent(\"v-parallax\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_select = _resolveComponent(\"v-select\");\n  const _component_EasyDataTable = _resolveComponent(\"EasyDataTable\");\n  const _component_v_card_actions = _resolveComponent(\"v-card-actions\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_dialog = _resolveComponent(\"v-dialog\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    class: \"mb-6\"\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" 헤더 \"), _createVNode(_component_v_container, null, {\n      default: _withCtx(() => [_createVNode(_component_v_parallax, {\n        id: \"parralax\",\n        class: \"rounded-xl\",\n        width: _ctx.windowWidth,\n        height: \"200px\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_row, {\n          class: \"blurred align-center justify-start rounded-xl ma-0\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_col, {\n            class: \"ma-4\"\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"h1\", _hoisted_1, _toDisplayString(_ctx.project.title), 1 /* TEXT */)]),\n\n            _: 1 /* STABLE */\n          }), _createCommentVNode(\" title :src=\\\"require('@/assets/wallpaper.jpg')\\\" \"), _createCommentVNode(\" body \"), _createCommentVNode(\" buttons \"), _createVNode(_component_v_btn, {\n            onClick: _cache[0] || (_cache[0] = $event => $options.to())\n          }, {\n            default: _withCtx(() => [_createTextVNode(\" Create Song \")]),\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"width\"])]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 바디 \"), _createVNode(_component_v_container, null, {\n      default: _withCtx(() => [_createCommentVNode(\" 선곡 테이블. 확정 여부로 필터링 가능하게. 곡 생성하면 기본적으로 선곡모드. 매니저가 픽스 박으면 확정모드. \"), _createVNode(_component_EasyDataTable, {\n        headers: _ctx.headers,\n        items: _ctx.songs,\n        onExpandRow: $options.selectSong\n      }, {\n        expand: _withCtx(item => [_ctx.manage ? (_openBlock(), _createBlock(_component_v_card, {\n          key: 0\n        }, {\n          default: _withCtx(() => [_createCommentVNode(\" 세션 별 선택 \"), _createCommentVNode(\" 확정모드로 변경. 그러려면 모드가 3개있어야 함. 선곡, 관리, 확정 \"), _createCommentVNode(\" 세션 하나씩 확정? 그러면 확정된 세션에는 지원 불가능하게 하는 기능도 있어야 함 \"), _createCommentVNode(\" 별로 좋아보이진 않는데.. 그냥 하자 \"), _createVNode(_component_v_card_title, null, {\n            default: _withCtx(() => [_createTextVNode(\" MANAGE MODE \")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_EasyDataTable, {\n            headers: _ctx.manage_header,\n            items: $options.serialize(item)\n          }, {\n            \"item-position\": _withCtx(item => [_createElementVNode(\"td\", {\n              onClick: $event => $options.log(item)\n            }, _toDisplayString(item.position), 9 /* TEXT, PROPS */, _hoisted_2)]),\n            \"item-player\": _withCtx(item => [_createElementVNode(\"td\", null, [_createCommentVNode(\" item의 개수는 가변임. 키도 막 달라짐 \"), _createCommentVNode(\" instrument를 받으면 그에 맞게 바로 세팅을 해야되나?  \"), _createCommentVNode(\" v-model=\\\"selectedPlayers[item.position]\\\" \"), _createVNode(_component_v_select, {\n              modelValue: _ctx.ss,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.ss = $event),\n              items: item.player,\n              \"item-title\": \"name\",\n              \"item-value\": \"user\",\n              density: \"compact\",\n              onUpdate: $event => $options.updateFixedPosition(item)\n            }, {\n              default: _withCtx(() => [_createCommentVNode(\" @update=\\\"updateFixedPosition(item)\\\" \")]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"items\", \"onUpdate\"])])]),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"headers\", \"items\"]), _createVNode(_component_v_card_actions, null, {\n            default: _withCtx(() => [_createVNode(_component_v_btn, {\n              width: \"100%\",\n              onClick: $event => $options.fix(item)\n            }, {\n              default: _withCtx(() => [_createTextVNode(\" FIX \")]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)]),\n\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)) : (_openBlock(), _createElementBlock(_Fragment, {\n          key: 1\n        }, [_createCommentVNode(\" 선곡모드 :: 추가 링크, 유툽, 뭐.. 줄 선 사람 리스트? 특수 세션 등 \"), _createVNode(_component_v_card, null, {\n          default: _withCtx(() => [_createVNode(_component_v_row, null, {\n            default: _withCtx(() => [_createCommentVNode(\" title \"), _createVNode(_component_v_col, {\n              cols: \"4\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n                default: _withCtx(() => [_createElementVNode(\"h3\", null, _toDisplayString(item.title), 1 /* TEXT */), _createElementVNode(\"h6\", null, _toDisplayString(item.artist), 1 /* TEXT */)]),\n\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_card_text, null, {\n                default: _withCtx(() => [_hoisted_3]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_card_text, {\n                class: \"text-start\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(item.content), 1 /* TEXT */)]),\n\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_card_actions, null, {\n                default: _withCtx(() => [_createVNode(_component_v_btn, {\n                  width: \"100%\",\n                  onClick: _cache[2] || (_cache[2] = $event => _ctx.manage = true)\n                }, {\n                  default: _withCtx(() => [_createTextVNode(\" Fix \")]),\n                  _: 1 /* STABLE */\n                })]),\n\n                _: 1 /* STABLE */\n              })]),\n\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_col, null, {\n              default: _withCtx(() => [_createCommentVNode(\" 비고 \"), _hoisted_4, _createVNode(_component_v_row, null, {\n                default: _withCtx(() => [_createVNode(_component_v_col, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_select, {\n                    modelValue: _ctx.selected_position,\n                    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.selected_position = $event),\n                    items: item.instruments,\n                    \"item-title\": \"name\",\n                    \"item-value\": \"name\",\n                    label: \"Position\",\n                    density: \"compact\"\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"items\"])]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_col, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_btn, {\n                    class: \"ma-2\",\n                    outlined: \"\",\n                    color: \"indigo\",\n                    onClick: $event => $options.applyPosition(item)\n                  }, {\n                    default: _withCtx(() => [_createTextVNode(\" Apply! \")]),\n                    _: 2 /* DYNAMIC */\n                  }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */)]),\n\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */), _createCommentVNode(\" 세션 지원 및 현황 \"), _createVNode(_component_EasyDataTable, {\n                headers: _ctx.pos_headers,\n                items: item.players,\n                onClickRow: $options.deleteModal\n              }, {\n                \"item-name\": _withCtx(({\n                  user\n                }) => [_createElementVNode(\"td\", null, _toDisplayString(user.name), 1 /* TEXT */)]),\n\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"headers\", \"items\", \"onClickRow\"])]),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */)]),\n\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)]),\n\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)), _createCommentVNode(\" item마다 확정인지 아닌지를 보여주는 field 필요 \"), _createCommentVNode(\" <v-card v-else-if=\\\"mode==='fix'\\\"> Fix </v-card> \")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"headers\", \"items\", \"onExpandRow\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_dialog, {\n      modelValue: _ctx.openModal,\n      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.openModal = $event)\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_card, {\n        \"max-width\": \"600px\",\n        class: \"dialog\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n          default: _withCtx(() => [_createTextVNode(\" Quit from \" + _toDisplayString(this.delFrom.title), 1 /* TEXT */)]),\n\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_card_text, null, {\n          default: _withCtx(() => [_createTextVNode(\" Are you sure to quit from \" + _toDisplayString(this.delPosition.position) + \" from \" + _toDisplayString(this.delFrom.title) + \"? \", 1 /* TEXT */)]),\n\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_card_actions, null, {\n          default: _withCtx(() => [_createVNode(_component_v_btn, {\n            color: \"error\",\n            variant: \"outlined\",\n            width: \"100%\",\n            onClick: $options.quitPosition\n          }, {\n            default: _withCtx(() => [_createTextVNode(\" Quit \")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","_createBlock","_component_v_container","_createCommentVNode","_createVNode","_component_v_parallax","id","width","_ctx","height","_component_v_row","_component_v_col","_hoisted_1","title","_component_v_btn","onClick","$options","_component_EasyDataTable","headers","items","onExpandRow","expand","item","_component_v_card","key","_component_v_card_title","position","_component_v_select","player","density","onUpdate","_component_v_card_actions","_createElementBlock","_Fragment","cols","artist","_component_v_card_text","_hoisted_3","content","_hoisted_4","instruments","label","outlined","color","players","onClickRow","user","name","_component_v_dialog","delFrom","delPosition","variant"],"sourceRoot":"","sources":["C:\\schedule\\config\\front\\src\\views\\ProjectRetrieve.vue"],"sourcesContent":["<template>\r\n    \r\n    <v-container class = \"mb-6\">\r\n        <!-- 헤더 -->\r\n        <v-container>\r\n        <v-parallax\r\n            id = \"parralax\"\r\n            class = \"rounded-xl\"\r\n            :width=\"windowWidth\"\r\n            height=\"200px\"\r\n        >\r\n            <v-row class=\"blurred align-center justify-start rounded-xl ma-0\">\r\n                <v-col class = \"ma-4\">\r\n                <h1 class = \"font-weight-medium text-white\">\r\n                    {{project.title}}\r\n                </h1>\r\n                </v-col>\r\n\r\n            <!-- title :src=\"require('@/assets/wallpaper.jpg')\" -->\r\n            <!-- body -->\r\n            <!-- buttons -->\r\n            <v-btn @click=\"to()\">\r\n                Create Song\r\n            </v-btn>\r\n            </v-row>\r\n        </v-parallax>\r\n        </v-container>\r\n        <!-- 바디 -->\r\n        \r\n        <v-container>\r\n            <!-- 선곡 테이블. 확정 여부로 필터링 가능하게. 곡 생성하면 기본적으로 선곡모드. 매니저가 픽스 박으면 확정모드. -->\r\n            <EasyDataTable\r\n                :headers=\"headers\"\r\n                :items=\"songs\"\r\n                @expand-row=\"selectSong\"\r\n            >\r\n                <template #expand=\"item\">\r\n                    <v-card v-if=\"manage\">\r\n                        <!-- 세션 별 선택 -->\r\n                        <!-- 확정모드로 변경. 그러려면 모드가 3개있어야 함. 선곡, 관리, 확정 -->\r\n                        <!-- 세션 하나씩 확정? 그러면 확정된 세션에는 지원 불가능하게 하는 기능도 있어야 함 -->\r\n                        <!-- 별로 좋아보이진 않는데.. 그냥 하자 -->\r\n                        <v-card-title>\r\n                            MANAGE MODE\r\n                        </v-card-title>\r\n                        <EasyDataTable\r\n                            :headers=\"manage_header\"\r\n                            :items=\"serialize(item)\"\r\n                        >\r\n                        <template #item-position=\"item\">\r\n                            <td @click=\"log(item)\">\r\n                                {{item.position}}\r\n                            </td>\r\n                        </template>\r\n                            <template #item-player=\"item\">\r\n                                \r\n                                <td>\r\n                                    <!-- item의 개수는 가변임. 키도 막 달라짐 -->\r\n                                    <!-- instrument를 받으면 그에 맞게 바로 세팅을 해야되나?  -->\r\n                                    <!-- v-model=\"selectedPlayers[item.position]\" -->\r\n                                    <v-select\r\n                                    v-model=\"ss\"\r\n                                    :items=\"item.player\"\r\n                                    item-title=\"name\"\r\n                                    item-value=\"user\"\r\n                                    density=\"compact\"\r\n                                    @update=\"updateFixedPosition(item)\"\r\n                                    >\r\n                                     <!-- @update=\"updateFixedPosition(item)\" -->\r\n                                      \r\n                                    </v-select>\r\n                                </td>\r\n                            </template>\r\n                        </EasyDataTable>\r\n                        <v-card-actions>\r\n                            <v-btn width = \"100%\" @click=\"fix(item)\">\r\n                                FIX\r\n                            </v-btn>\r\n                        </v-card-actions>\r\n\r\n\r\n                    </v-card>\r\n                    <!-- 선곡모드 :: 추가 링크, 유툽, 뭐.. 줄 선 사람 리스트? 특수 세션 등 -->\r\n                    <v-card v-else>\r\n                        <v-row>\r\n                            <!-- title -->\r\n                            <v-col cols=\"4\">\r\n                                <v-card-title>\r\n                                    <h3>\r\n                                        {{item.title}}\r\n                                    </h3>\r\n                                    <h6>\r\n                                        {{item.artist}}\r\n                                    </h6>\r\n                                </v-card-title>\r\n                                <v-card-text>\r\n                                    <h2> 비고</h2>\r\n                                </v-card-text>\r\n                                <v-card-text class=\"text-start\">\r\n                                    {{item.content}}\r\n                                </v-card-text>\r\n                                <v-card-actions>\r\n                                    <v-btn width=\"100%\" @click=\"manage=true\">\r\n                                        Fix\r\n                                    </v-btn>\r\n                                </v-card-actions>\r\n                            </v-col>\r\n                        <v-col>\r\n                            <!-- 비고 -->\r\n                            <h3> 지원하기 </h3>\r\n                            <v-row>\r\n                                <v-col>\r\n                                    <v-select\r\n                                        v-model=\"selected_position\"\r\n                                        :items=\"item.instruments\"\r\n                                        item-title=\"name\"\r\n                                        item-value=\"name\"\r\n                                        label=\"Position\"\r\n                                        density=\"compact\"\r\n                                    ></v-select>\r\n                                </v-col>\r\n                                <v-col>\r\n                                    <v-btn\r\n                                    class=\"ma-2\"\r\n                                    outlined\r\n                                    color=\"indigo\"\r\n                                    @click=\"applyPosition(item)\"\r\n                                    >\r\n                                    Apply!  \r\n                                    </v-btn>\r\n\r\n                                </v-col>\r\n                            </v-row>\r\n\r\n                            <!-- 세션 지원 및 현황 -->\r\n                                <EasyDataTable\r\n                                    :headers=\"pos_headers\"\r\n                                    :items=\"item.players\"\r\n                                    @click-row=\"deleteModal\"\r\n                                >\r\n                                    <template #item-name=\"{user}\">\r\n                                        <td>\r\n                                            {{user.name}}\r\n                                        </td>\r\n                                    </template>\r\n                                </EasyDataTable>\r\n                        </v-col>\r\n                        </v-row>\r\n                    </v-card>\r\n                    <!-- item마다 확정인지 아닌지를 보여주는 field 필요 -->\r\n                    <!-- <v-card v-else-if=\"mode==='fix'\"> Fix </v-card> -->\r\n\r\n                </template>\r\n\r\n            </EasyDataTable>\r\n\r\n\r\n\r\n        </v-container>\r\n\r\n        <v-dialog v-model =\"openModal\" >\r\n            <v-card max-width=\"600px\" class=\"dialog\">\r\n                <v-card-title>\r\n                    Quit from {{this.delFrom.title}}\r\n                </v-card-title>\r\n                <v-card-text>\r\n                    Are you sure to quit from {{this.delPosition.position}} from {{this.delFrom.title}}?\r\n                </v-card-text>\r\n                <v-card-actions>\r\n                    <v-btn color=\"error\"  variant=\"outlined\" width=\"100%\" @click=\"quitPosition\">\r\n                        Quit\r\n                    </v-btn>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n\r\n    </v-container>\r\n\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport setToken from \"@/utils/auth.js\"\r\n// import { Header, Item } from \"vue3-easy-data-table\";\r\n\r\nlet url = \"http://127.0.0.1:8000/api/project/\";  // 장고 drf 서버 주소\r\nlet song_url = \"http://127.0.0.1:8000/api/song/\";  // 장고 drf 서버 주소\r\n\r\n\r\n\r\nexport default {\r\n    \r\n    name : \"ProjectRetrieve\",\r\n\r\n    data : () => {\r\n        return {\r\n            // windows\r\n            windowHeight : window.innerHeight,\r\n            windowWidth : window.innerWidth,\r\n            \r\n            // project\r\n            project : \"\",\r\n\r\n            //songs\r\n            songs : [],\r\n            headers : [\r\n                    {text : 'Artist', value : 'artist'},\r\n                    {text : 'Title', value : 'title'},\r\n                    {text : 'Vocal', value : 'Vocal'},\r\n                    {text : 'Guitar1', value : 'Guitar1'},\r\n                    {text : 'Guitar2', value : 'Guitar2'},\r\n                    {text : 'Bass', value : 'Bass'},\r\n                    {text : 'Drum', value : 'Drum'},\r\n                    {text : 'Keyboard', value : 'Keyboard'},\r\n            ],\r\n            delFrom : \"\",\r\n            \r\n            // positions\r\n            pos_headers : [\r\n                {text : \"Name\", value : \"name\"},\r\n                {text : \"Position\", value : \"position\"},\r\n            ],\r\n            selected_position : \"\",\r\n            openModal : false,\r\n            delPosition : \"\",\r\n            manage : false,\r\n\r\n            //manage\r\n            manage_header : [\r\n                {text : \"Positions\", value : \"position\"},\r\n                {text : \"Select Player\", value : \"player\"},\r\n            ],\r\n            ss : \"\",\r\n            fixed : \"\",\r\n            fixedPosition : {\r\n                \r\n                // ??\r\n                // 셀렉트할때마다 값을 더함.\r\n            }\r\n            \r\n\r\n        }\r\n    },\r\n\r\n    components : {\r\n    },\r\n    \r\n    methods: {\r\n        \r\n        retrieveProject : function(){\r\n            axios({\r\n                method : \"GET\",\r\n                url : url + this.$route.params.project_id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                }\r\n            }).then((response) => {\r\n                this.project = response.data\r\n                this.songs = this.project.songs.map( (song, index) => {\r\n                    song.index = index\r\n                    return song\r\n                })\r\n            }).catch((error) => {\r\n                console.log(\"Failed to get retreival\", error.response);\r\n            });\r\n        },\r\n\r\n        setIndex : function(old_val, new_val){\r\n            new_val.index = old_val.index\r\n            return new_val\r\n        }, \r\n\r\n        to : function(){\r\n            // console.log(this.$router)\r\n            this.$router.push({\r\n                name : 'song_create',\r\n                params : {\r\n                    project_id : this.$route.params.project_id\r\n                }})\r\n        },\r\n\r\n        applyPosition : function(song){\r\n            axios({\r\n                method : \"PATCH\",\r\n                url : song_url + song.id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                    position : this.selected_position,\r\n                    action : \"apply\"\r\n                }\r\n            }).then((response) => {\r\n                this.songs[song.index] = this.setIndex(song, response.data)\r\n            }).catch((error) => {\r\n                console.log(\"Failed to update song\", error.response);\r\n            });\r\n        },\r\n\r\n        selectSong : function(index){\r\n            this.delFrom = this.songs[index]\r\n        },\r\n\r\n        deleteModal : function(item){\r\n            // item의 user와 현재 user가 같은지?\r\n            if (item.user.id === parseInt(localStorage.getItem(\"user\"))){\r\n                this.delPosition = item\r\n                this.openModal = true\r\n            } \r\n        },\r\n\r\n        quitPosition : function(){\r\n            axios({\r\n                method : \"PATCH\",\r\n                url : song_url + this.delFrom.id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                    position : this.delPosition.position,\r\n                    action : \"quit\"\r\n                }\r\n            }).then((response) => {\r\n                this.openModal = false\r\n                this.songs[this.delFrom.index] = this.setIndex(this.delFrom, response.data)\r\n            }).catch((error) => {\r\n                console.log(\"Failed to quit from the song\", error.response);\r\n            });\r\n        },\r\n\r\n        serialize : function(item){\r\n\r\n            let instruments = {}\r\n            let selectedPlayers = {}\r\n            let players = item.players\r\n\r\n            players = players.map((player) => {\r\n                player.name = player.user.name\r\n                player = { ...player }; // Proxy to dictionary\r\n                return player\r\n            })\r\n\r\n            let inst_list = Array()\r\n            \r\n            for (let i in players){\r\n                let position = players[i].position\r\n                if (!(position in instruments)){\r\n                    instruments[position] = Array()\r\n                    selectedPlayers[position] = \"\"\r\n                }\r\n                instruments[position].push(players[i])\r\n            }\r\n\r\n            for (let index in item.instruments){\r\n                let position = item.instruments[index]\r\n                inst_list.push({\r\n                    'position' : position,\r\n                    'player' : instruments[position],\r\n                    'selected' : \"\"\r\n                })\r\n            }\r\n\r\n            this.selectedPlayers = selectedPlayers\r\n\r\n            return inst_list\r\n        },\r\n\r\n        updateFixedPosition : function(item){\r\n            console.log(\"updating\",  this.fixedPosition)\r\n            this.fixedPosition[item.position] = item.player \r\n        },\r\n        \r\n        fix : function(song){\r\n            song;\r\n            this.fi\r\n            // 확정 정보를 넘겨줘야 함. \r\n\r\n        },\r\n        log : function(item) {\r\n            console.log(item),\r\n            console.log(this.selectedPlayers)\r\n        }\r\n\r\n    },\r\n\r\n    mounted() {\r\n        this.retrieveProject()\r\n        window.onresize = () => {\r\n            this.windowHeight = window.innerHeight\r\n        }\r\n\r\n    },\r\n\r\n    watch : {\r\n        songs : {\r\n            handler: function(newVal, oldVal){\r\n                newVal; oldVal\r\n            },\r\n            deep : true,\r\n            immediate : true\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n#parralax{\r\n    background-image : url('~@/assets/wallpaper.jpg');\r\n    background-size: cover;\r\n\r\n}\r\n\r\n.posting-container{\r\n    width: 80%;\r\n}\r\n\r\n\r\n.btn-container{\r\n    margin-left: auto!important;\r\n}\r\n\r\n.blurred{\r\n    background: rgba(0, 0, 0, 0.2);\r\n    backdrop-filter: blur(2px);\r\n    width : 100% !important;\r\n    height:  100% !important;\r\n}\r\n\r\n.dialog{\r\n    margin-left: auto!important; margin-right: auto!important; \r\n}\r\n\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}