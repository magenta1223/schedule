{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-a2ec46aa\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"d-flex flex-column fill-height justify-center align-center text-white\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_card_actions = _resolveComponent(\"v-card-actions\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_parallax = _resolveComponent(\"v-parallax\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    class: \"posting-container\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_parallax, {\n      align: \"center\",\n      height: _ctx.windowHeight,\n      src: require('@/assets/wallpaper.jpg')\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_v_card, {\n        class: \"elevation-12 transparent-body\",\n        width: \"50%\"\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" title \"), _createCommentVNode(\" body \"), _createVNode(_component_v_card_text, null, {\n          default: _withCtx(() => [_createVNode(_component_v_form, null, {\n            default: _withCtx(() => [_createVNode(_component_v_text_field, {\n              modelValue: _ctx.user.username,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.user.username = $event),\n              class: \"text-white\",\n              name: \"username\",\n              label: \"Email/ID\",\n              type: \"text\"\n            }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_text_field, {\n              modelValue: _ctx.user.password,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.user.password = $event),\n              id: \"password\",\n              class: \"text-white\",\n              name: \"password\",\n              label: \"Password\",\n              type: \"password\",\n              color: \"white\"\n            }, null, 8 /* PROPS */, [\"modelValue\"])]),\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        }), _createCommentVNode(\" buttons \"), _createVNode(_component_v_card_actions, null, {\n          default: _withCtx(() => [_createVNode(_component_v_spacer), _createVNode(_component_v_spacer), _createVNode(_component_v_btn, {\n            color: \"white\",\n            onClick: _ctx.Login\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Sign In\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_v_spacer), _createElementVNode(\"a\", {\n            id: \"register\",\n            class: \"ma-4\",\n            onClick: _cache[2] || (_cache[2] = (...args) => _ctx.Register && _ctx.Register(...args))\n          }, \" or Register \"), _createVNode(_component_v_spacer), _createVNode(_component_v_spacer)]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })])]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"height\", \"src\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":";;;EAOSA,KAAK,EAAC;AAAuE;;;;;;;;;;;uBANlFC,aAgDcC;IAhDDF,KAAK,EAAG;EAAmB;sBACpC,MA8CK,CA9CLG,aA8CKC;MA7CTC,KAAK,EAAC,QAAQ;MACbC,MAAM,EAAEC,iBAAY;MACpBC,GAAG,EAAEC,OAAO;;wBAEb,MAwCM,CAxCNC,oBAwCM,OAxCNC,UAwCM,GAvCFR,aAsCSS;QAtCDZ,KAAK,EAAC,+BAA+B;QAACa,KAAK,EAAC;;0BAChD,MAAc,CAAdC,8BAAc,EAGdA,6BAAa,EACbX,aAoBcY;4BAnBV,MAkBS,CAlBTZ,aAkBSa;8BAjBL,MAMgB,CANhBb,aAMgBc;0BALHV,SAAI,CAACW,QAAQ;yEAAbX,SAAI,CAACW,QAAQ;cACtBlB,KAAK,EAAG,YAAY;cACpBmB,IAAI,EAAC,UAAU;cACfC,KAAK,EAAC,UAAU;cAChBC,IAAI,EAAC;qDAETlB,aASgBc;0BARHV,SAAI,CAACe,QAAQ;yEAAbf,SAAI,CAACe,QAAQ;cACtBC,EAAE,EAAC,UAAU;cACbvB,KAAK,EAAG,YAAY;cACpBmB,IAAI,EAAC,UAAU;cACfC,KAAK,EAAC,UAAU;cAChBC,IAAI,EAAC,UAAU;cACfG,KAAK,EAAG;;;;;;YAKpBV,gCAAgB,EAGhBX,aAQiBsB;4BAPb,MAAqB,CAArBtB,aAAqBuB,sBACrBvB,aAAqBuB,sBACrBvB,aAAmDwB;YAA5CH,KAAK,EAAC,OAAO;YAAEI,OAAK,EAAErB;;8BAAO,MAAO,kBAAP,SAAO;;0CAC3CJ,aAAqBuB,sBACrBhB,oBAAoE;YAAjEa,EAAE,EAAG,UAAU;YAACvB,KAAK,EAAC,MAAM;YAAE4B,OAAK,yCAAErB,uCAAQ;aAAG,eAAa,GAChEJ,aAAqBuB,sBACrBvB,aAAqBuB","names":["class","_createBlock","_component_v_container","_createVNode","_component_v_parallax","align","height","_ctx","src","require","_createElementVNode","_hoisted_1","_component_v_card","width","_createCommentVNode","_component_v_card_text","_component_v_form","_component_v_text_field","username","name","label","type","password","id","color","_component_v_card_actions","_component_v_spacer","_component_v_btn","onClick"],"sourceRoot":"","sources":["C:\\schedule\\config\\front\\src\\views\\ProjectRetrieve.vue"],"sourcesContent":["<template>\r\n    <v-container class = \"posting-container\">\r\n        <v-parallax\r\n    align=\"center\"\r\n    :height=\"windowHeight\"\r\n    :src=\"require('@/assets/wallpaper.jpg')\"\r\n  >\r\n    <div class=\"d-flex flex-column fill-height justify-center align-center text-white\">\r\n        <v-card class=\"elevation-12 transparent-body\" width=\"50%\">\r\n            <!-- title -->\r\n\r\n\r\n            <!-- body -->\r\n            <v-card-text >\r\n                <v-form>\r\n                    <v-text-field\r\n                        v-model=\"user.username\"\r\n                        class = \"text-white\"\r\n                        name=\"username\"\r\n                        label=\"Email/ID\"\r\n                        type=\"text\"\r\n                    ></v-text-field>\r\n                    <v-text-field\r\n                        v-model=\"user.password\"\r\n                        id=\"password\"\r\n                        class = \"text-white\"\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        color = \"white\"\r\n\r\n                    ></v-text-field>\r\n                </v-form>\r\n            </v-card-text>\r\n            <!-- buttons -->\r\n\r\n\r\n            <v-card-actions>\r\n                <v-spacer></v-spacer>\r\n                <v-spacer></v-spacer>\r\n                <v-btn color=\"white\" @click=\"Login\">Sign In</v-btn>\r\n                <v-spacer></v-spacer>\r\n                <a id = \"register\" class=\"ma-4\" @click=\"Register\" > or Register </a>\r\n                <v-spacer></v-spacer>\r\n                <v-spacer></v-spacer>\r\n            </v-card-actions>\r\n        </v-card>\r\n    </div>\r\n</v-parallax>\r\n    </v-container>\r\n\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport setToken from \"@/utils/auth.js\"\r\n\r\nlet url = \"http://127.0.0.1:8000/api/project/\";  // 장고 drf 서버 주소\r\n\r\nexport default {\r\n    \r\n    name : \"ProjectRetrieve\",\r\n\r\n    data : () => {\r\n        return {\r\n            title : \"\",\r\n            content : \"\",\r\n            update : false,\r\n            }\r\n        },\r\n\r\n    components : {\r\n    },\r\n    \r\n    // param이 바뀌어도 갱신이 되지 않음\r\n    // board는 이미 mount가 끝났기 때문\r\n    // 그래서 mounted를 call하지 않음\r\n    // mounted를 method화 하고, param을 watch하면서 변경될때마다 call하면 됨\r\n    methods: {\r\n        retrieveProject : function(){\r\n            \r\n            axios({\r\n                method : \"GET\",\r\n                url : url + this.$route.params.project_id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                }\r\n            }).then((response) => {\r\n                console.log(response);\r\n\r\n\r\n                // js redirect\r\n                // window.location.href = 'http://localhost:8080/';\r\n                // vue\r\n                //this.$router.push({ name : 'home'})\r\n\r\n            }).catch((error) => {\r\n                console.log(\"Failed to get retreival\", error.response);\r\n            });\r\n        },\r\n\r\n    },\r\n\r\n    mounted() {\r\n        this.retrieveProject()\r\n        // update인 경우와 아닌 경우\r\n        // update면 값을 미리 세팅해야 함\r\n        // this.update = this.$route.params.update\r\n        // this.category_id = this.$route.params.category_id\r\n        // this.wrapper_id = this.$route.params.wrapper_id\r\n\r\n        // console.log(this.$route.params)\r\n\r\n        // if (this.update) {\r\n        //     axios({\r\n        //         method : \"GET\",\r\n        //         url : url + this.wrapper_id,\r\n        //         headers : setToken(),\r\n        //         params : {\r\n        //             content_type : \"post\",\r\n        //         }\r\n        //     })\r\n        //     .then((response) => {\r\n        //         this.title = response.data.post.title\r\n        //         this.content = response.data.post.content\r\n        //     })\r\n        //     .catch(response => {\r\n        //         console.log(\"Failed\", response);\r\n        //     });\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    }\r\n\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n    .btn-container{\r\n        margin-left: auto!important;\r\n    }\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}