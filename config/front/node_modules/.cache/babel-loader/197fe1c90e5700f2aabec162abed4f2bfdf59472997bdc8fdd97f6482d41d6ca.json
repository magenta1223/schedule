{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-a2ec46aa\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"d-flex flex-column fill-height justify-center align-center text-white\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_parallax = _resolveComponent(\"v-parallax\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    class: \"posting-container\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_parallax, {\n      align: \"center\",\n      width: _ctx.windowWidth,\n      src: require('@/assets/wallpaper.jpg')\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_v_card, {\n        class: \"elevation-12 transparent-body text-white\",\n        width: \"50%\",\n        height: \"500px\"\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" title \"), _createTextVNode(\" CEX \"), _createCommentVNode(\" body \"), _createCommentVNode(\" buttons \")]),\n        _: 1 /* STABLE */\n      })])]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"width\", \"src\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":";;;EAOKA,KAAK,EAAC;AAAuE;;;;;uBAN9EC,aAmBcC;IAnBDF,KAAK,EAAG;EAAmB;sBACpC,MAiBK,CAjBLG,aAiBKC;MAhBDC,KAAK,EAAC,QAAQ;MACbC,KAAK,EAAEC,gBAAW;MAClBC,GAAG,EAAEC,OAAO;;wBAEzB,MAWU,CAXVC,oBAWU,OAXVC,UAWU,GAVFR,aASSS;QATDZ,KAAK,EAAC,0CAA0C;QAACM,KAAK,EAAC,KAAK;QAACO,MAAM,EAAC;;0BACxE,MAAc,CAAdC,8BAAc,0BAGd,gCAAa,EAEbA,gCAAgB","names":["class","_createBlock","_component_v_container","_createVNode","_component_v_parallax","align","width","_ctx","src","require","_createElementVNode","_hoisted_1","_component_v_card","height","_createCommentVNode"],"sourceRoot":"","sources":["C:\\schedule\\config\\front\\src\\views\\ProjectRetrieve.vue"],"sourcesContent":["<template>\r\n    <v-container class = \"posting-container\">\r\n        <v-parallax\r\n            align=\"center\"\r\n            :width=\"windowWidth\"\r\n            :src=\"require('@/assets/wallpaper.jpg')\"\r\n        >\r\n<div class=\"d-flex flex-column fill-height justify-center align-center text-white\">\r\n        <v-card class=\"elevation-12 transparent-body text-white\" width=\"50%\" height=\"500px\">\r\n            <!-- title -->\r\n            CEX\r\n\r\n            <!-- body -->\r\n\r\n            <!-- buttons -->\r\n\r\n\r\n        </v-card>\r\n    </div>\r\n</v-parallax>\r\n    </v-container>\r\n\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport setToken from \"@/utils/auth.js\"\r\n\r\nlet url = \"http://127.0.0.1:8000/api/project/\";  // 장고 drf 서버 주소\r\n\r\nexport default {\r\n    \r\n    name : \"ProjectRetrieve\",\r\n\r\n    data : () => {\r\n        return {\r\n            title : \"\",\r\n            content : \"\",\r\n            update : false,\r\n            windowHeight : window.innerHeight,\r\n            windowWidth : window.innerWidth\r\n\r\n            }\r\n        },\r\n\r\n    components : {\r\n    },\r\n    \r\n    // param이 바뀌어도 갱신이 되지 않음\r\n    // board는 이미 mount가 끝났기 때문\r\n    // 그래서 mounted를 call하지 않음\r\n    // mounted를 method화 하고, param을 watch하면서 변경될때마다 call하면 됨\r\n    methods: {\r\n        \r\n        retrieveProject : function(){\r\n            \r\n            axios({\r\n                method : \"GET\",\r\n                url : url + this.$route.params.project_id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                }\r\n            }).then((response) => {\r\n                console.log(response);\r\n\r\n\r\n                // js redirect\r\n                // window.location.href = 'http://localhost:8080/';\r\n                // vue\r\n                //this.$router.push({ name : 'home'})\r\n\r\n            }).catch((error) => {\r\n                console.log(\"Failed to get retreival\", error.response);\r\n            });\r\n        },\r\n\r\n    },\r\n\r\n    mounted() {\r\n        this.retrieveProject()\r\n\r\n        window.onresize = () => {\r\n        this.windowHeight = window.innerHeight\r\n        }\r\n\r\n        // update인 경우와 아닌 경우\r\n        // update면 값을 미리 세팅해야 함\r\n        // this.update = this.$route.params.update\r\n        // this.category_id = this.$route.params.category_id\r\n        // this.wrapper_id = this.$route.params.wrapper_id\r\n\r\n        // console.log(this.$route.params)\r\n\r\n        // if (this.update) {\r\n        //     axios({\r\n        //         method : \"GET\",\r\n        //         url : url + this.wrapper_id,\r\n        //         headers : setToken(),\r\n        //         params : {\r\n        //             content_type : \"post\",\r\n        //         }\r\n        //     })\r\n        //     .then((response) => {\r\n        //         this.title = response.data.post.title\r\n        //         this.content = response.data.post.content\r\n        //     })\r\n        //     .catch(response => {\r\n        //         console.log(\"Failed\", response);\r\n        //     });\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    }\r\n\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n    .btn-container{\r\n        margin-left: auto!important;\r\n    }\r\n\r\n    .v-parallax__image {\r\n  transform: none !important;\r\n  /* width: 100% !important; */\r\n  height: 100% !important;\r\n\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}