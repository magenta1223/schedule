{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport setToken from \"@/utils/auth.js\";\n// import { Header, Item } from \"vue3-easy-data-table\";\n\nlet url = \"http://127.0.0.1:8000/api/project/\"; // 장고 drf 서버 주소\n\nexport default {\n  name: \"ProjectRetrieve\",\n  data: () => {\n    return {\n      // windows\n      windowHeight: window.innerHeight,\n      windowWidth: window.innerWidth,\n      // manage\n      manage_mode: false,\n      // project\n      project: {\n        id: 0\n      },\n      tab_headers: [],\n      active_tab: 0\n    };\n  },\n  components: {},\n  methods: {\n    retrieveProject: function () {\n      axios({\n        method: \"GET\",\n        url: url + this.$route.params.project_id + '/',\n        headers: setToken(),\n        params: {\n          user_id: localStorage.getItem('user')\n        }\n      }).then(response => {\n        this.project = response.data; // project만 가져오자. songs는 songs list에서 가져오고 \n        if (parseInt(localStorage.getItem('user')) === this.project.leader) {\n          this.manage_mode = true;\n        }\n\n        // project 상태에 따라 tab_header를 바꿔야 함\n        let dest = this.setTabs(this.project.status);\n        this.$router.replace({\n          name: dest\n        });\n      }).catch(error => {\n        console.log(\"Failed to get retreival\", error.response);\n      });\n    },\n    setTabs: function (project_status) {\n      if (project_status === 'P') {\n        this.tab_headers = [{\n          text: 'Songs',\n          value: 'song_list'\n        }, {\n          text: 'Create Song',\n          value: 'song_create'\n        }];\n        return 'song_list';\n      } else if (project_status === 'R') {\n        this.tab_headers = [{\n          text: 'Set List',\n          value: 'song_fixed_list'\n        }];\n        return 'song_fixed_list';\n      } else if (project_status === 'O') {\n        this.tab_headers = [{\n          text: 'Songs',\n          value: 'song_list'\n        }, {\n          text: 'Create Song',\n          value: 'song_create'\n        }];\n        return 'song_fixed_list';\n      } else {\n        this.tab_headers = [{\n          text: 'Songs',\n          value: 'song_list'\n        }, {\n          text: 'Create Song',\n          value: 'song_create'\n        }];\n        return 'song_fixed_list';\n      }\n    },\n    to: function (destination) {\n      this.$router.push({\n        name: destination\n      });\n    }\n  },\n  mounted() {\n    this.retrieveProject();\n    // this.to('song_list')\n    window.onresize = () => {\n      this.windowHeight = window.innerHeight;\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","setToken","url","name","data","windowHeight","window","innerHeight","windowWidth","innerWidth","manage_mode","project","id","tab_headers","active_tab","components","methods","retrieveProject","method","$route","params","project_id","headers","user_id","localStorage","getItem","then","response","parseInt","leader","dest","setTabs","status","$router","replace","catch","error","console","log","project_status","text","value","to","destination","push","mounted","onresize"],"sourceRoot":"","sources":["C:\\schedule\\config\\front\\src\\views\\Project\\ProjectRetrieve.vue"],"sourcesContent":["<template>\r\n    \r\n    <v-container class = \"mb-6\">\r\n        <!-- 헤더 -->\r\n        <v-container>\r\n        <v-parallax\r\n            id = \"parralax\"\r\n            class = \"rounded-xl\"\r\n            :width=\"windowWidth\"\r\n            height=\"200px\"\r\n        >\r\n        <v-row class=\"blurred rounded-xl ma-0\"  justify=\"space-between\" align=\"center\">\r\n                <v-col class = \"ma-4\">\r\n                    <h1 class = \"font-weight-medium text-white\">\r\n                        {{project.title}}\r\n                    </h1>\r\n                    <v-btn v-if=\"manage_mode\" @click=\"to('project_manage')\">\r\n                        MANAGE\r\n                    </v-btn>\r\n                </v-col>\r\n\r\n        </v-row>\r\n        </v-parallax>\r\n        </v-container>\r\n        <!-- 바디 -->\r\n        <v-tabs\r\n        show-arrows\r\n        v-model=\"active_tab\"\r\n        >\r\n\r\n        <v-tab\r\n            v-for=\"header in tab_headers\"\r\n            :key=\"header.text\"\r\n            @click=\"to(header.value)\"\r\n        >\r\n            {{header.text}}\r\n\r\n        </v-tab>\r\n    </v-tabs>\r\n    <router-view></router-view>\r\n    </v-container>\r\n\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport setToken from \"@/utils/auth.js\"\r\n// import { Header, Item } from \"vue3-easy-data-table\";\r\n\r\nlet url = \"http://127.0.0.1:8000/api/project/\";  // 장고 drf 서버 주소\r\n\r\n\r\n\r\nexport default {\r\n    \r\n    name : \"ProjectRetrieve\",\r\n\r\n    data : () => {\r\n        return {\r\n            // windows\r\n            windowHeight : window.innerHeight,\r\n            windowWidth : window.innerWidth,\r\n            \r\n            // manage\r\n            manage_mode : false,\r\n\r\n            // project\r\n            project : {\r\n                id : 0\r\n            },\r\n\r\n            tab_headers : [\r\n            ],\r\n            active_tab : 0\r\n        }\r\n    },\r\n\r\n    components : {\r\n    },\r\n    \r\n    methods: {\r\n        retrieveProject : function(){\r\n            axios({\r\n                method : \"GET\",\r\n                url : url + this.$route.params.project_id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                }\r\n            }).then((response) => {\r\n                this.project = response.data // project만 가져오자. songs는 songs list에서 가져오고 \r\n                if (parseInt(localStorage.getItem('user')) === this.project.leader){\r\n                    this.manage_mode = true\r\n                }\r\n\r\n                // project 상태에 따라 tab_header를 바꿔야 함\r\n                let dest = this.setTabs(this.project.status)\r\n                this.$router.replace({\r\n                    name : dest,\r\n                })\r\n\r\n\r\n            }).catch((error) => {\r\n                console.log(\"Failed to get retreival\", error.response);\r\n            });\r\n        },\r\n\r\n        setTabs : function(project_status){\r\n\r\n            if (project_status === 'P'){\r\n                this.tab_headers =  [\r\n                    {text : 'Songs', value : 'song_list'},\r\n                    {text : 'Create Song', value : 'song_create'},\r\n                ]\r\n                return 'song_list'\r\n\r\n            } else if(project_status === 'R') {\r\n                this.tab_headers =  [\r\n                    {text : 'Set List', value : 'song_fixed_list'},\r\n                ] \r\n                return 'song_fixed_list'\r\n\r\n                \r\n            } else if(project_status === 'O') {\r\n                this.tab_headers =  [\r\n                    {text : 'Songs', value : 'song_list'},\r\n                    {text : 'Create Song', value : 'song_create'},\r\n                ]   \r\n                return 'song_fixed_list' \r\n            } else {\r\n                this.tab_headers =  [\r\n                    {text : 'Songs', value : 'song_list'},\r\n                    {text : 'Create Song', value : 'song_create'},\r\n                ]         \r\n                return 'song_fixed_list'\r\n            }\r\n\r\n        },\r\n\r\n        to : function(destination){\r\n            this.$router.push({\r\n                name : destination,\r\n            })\r\n        },\r\n\r\n\r\n\r\n    },\r\n\r\n    mounted() {\r\n        this.retrieveProject()\r\n        // this.to('song_list')\r\n        window.onresize = () => {\r\n            this.windowHeight = window.innerHeight\r\n        }\r\n    },\r\n\r\n\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n#parralax{\r\n    background-image : url('~@/assets/wallpaper.jpg');\r\n    background-size: cover;\r\n\r\n}\r\n\r\n.posting-container{\r\n    width: 80%;\r\n}\r\n\r\n.btn-container{\r\n    margin-left: auto!important;\r\n}\r\n\r\n.blurred{\r\n    background: rgba(0, 0, 0, 0.2);\r\n    backdrop-filter: blur(10px);\r\n    width : 100% !important;\r\n    height:  100% !important;\r\n}\r\n\r\n\r\n</style>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}