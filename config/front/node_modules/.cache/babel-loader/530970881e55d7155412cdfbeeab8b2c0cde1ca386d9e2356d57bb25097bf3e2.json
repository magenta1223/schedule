{"ast":null,"code":"import axios from \"axios\";\nimport setToken from \"@/utils/auth.js\";\nlet url = \"http://127.0.0.1:8000/api/project/\"; // 장고 drf 서버 주소\n\nexport default {\n  name: \"ManageStatus\",\n  data: () => {\n    return {\n      // route : useRoute(),\n      // router : useRouter(),\n      project_id: -1,\n      status: \"P\",\n      statusOptions: [{\n        name: \"Prepare\",\n        value: \"P\",\n        color: \"orange\"\n      }, {\n        name: \"Ready\",\n        value: \"R\",\n        color: \"success\"\n      }, {\n        name: \"OnGoing\",\n        value: \"O\",\n        color: \"primary\"\n      }, {\n        name: \"Done\",\n        value: \"D\",\n        color: \"error\"\n      }]\n    };\n  },\n  methods: {\n    retrieveProject: function () {\n      axios({\n        method: \"GET\",\n        url: url + this.$route.query.project_id + '/',\n        headers: setToken(),\n        params: {\n          user_id: localStorage.getItem('user')\n        }\n      }).then(response => {\n        this.project = response.data;\n        this.status = this.project.status;\n        console.log(\"here\");\n        this.$router.replace({\n          name: 'manage_status',\n          query: {\n            project_id: this.project.id\n          }\n        });\n        console.log(\"here\");\n      }).catch(error => {\n        console.log(\"Failed to get retreival\", error.response);\n      });\n    },\n    updateStatus: function () {\n      axios({\n        method: \"PATCH\",\n        url: url + this.project_id + '/',\n        headers: setToken(),\n        params: {\n          project_id: this.project_id,\n          status: this.status,\n          action: 'status'\n        }\n      }).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(\"Failed to update status\", error.response);\n      });\n    }\n  },\n  mounted() {\n    this.status = this.$route.query.status;\n    this.project_id = this.$route.query.project_id;\n  },\n  watch: {\n    status: function () {\n      this.updateStatus();\n    }\n  }\n};","map":{"version":3,"mappings":"AAyBA,OAAOA,KAAI,MAAO,OAAM;AACxB,OAAOC,QAAO,MAAO,iBAAgB;AAErC,IAAIC,GAAE,GAAI,oCAAoC,EAAG;;AAEjD,eAAe;EACXC,IAAG,EAAI,cAAa;EAGpBC,IAAG,EAAI,MAAM;IACT,OAAO;MACC;MACA;MACAC,UAAS,EAAI,CAAC,CAAC;MACfC,MAAK,EAAI,GAAG;MACZC,aAAY,EAAI,CACZ;QACIJ,IAAG,EAAI,SAAS;QAChBK,KAAI,EAAI,GAAG;QACXC,KAAI,EAAI;MACZ,CAAC,EACD;QACIN,IAAG,EAAI,OAAO;QACdK,KAAI,EAAI,GAAG;QACXC,KAAI,EAAI;MACZ,CAAC,EACD;QACIN,IAAG,EAAI,SAAS;QAChBK,KAAI,EAAI,GAAG;QACXC,KAAI,EAAI;MACZ,CAAC,EACD;QACIN,IAAG,EAAI,MAAM;QACbK,KAAI,EAAI,GAAG;QACXC,KAAI,EAAI;MACZ,CAAC;IAEb;EACJ,CAAC;EAGDC,OAAM,EAAI;IAENC,eAAc,EAAI,YAAU;MACxBX,KAAK,CAAC;QACFY,MAAK,EAAI,KAAK;QACdV,GAAE,EAAIA,GAAE,GAAI,IAAI,CAACW,MAAM,CAACC,KAAK,CAACT,UAAS,GAAI,GAAG;QAC9CU,OAAM,EAAId,QAAQ,EAAE;QACpBe,MAAK,EAAI;UACLC,OAAM,EAAIC,YAAY,CAACC,OAAO,CAAC,MAAM;QACzC;MACJ,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACC,OAAM,GAAID,QAAQ,CAACjB,IAAG;QAC3B,IAAI,CAACE,MAAK,GAAI,IAAI,CAACgB,OAAO,CAAChB,MAAK;QAEhCiB,OAAO,CAACC,GAAG,CAAC,MAAM;QAClB,IAAI,CAACC,OAAO,CAACC,OAAO,CAAC;UACjBvB,IAAG,EAAI,eAAe;UACtBW,KAAI,EAAI;YACJT,UAAS,EAAI,IAAI,CAACiB,OAAO,CAACK;UAC9B;QACJ,CAAC;QACDJ,OAAO,CAACC,GAAG,CAAC,MAAM;MAEtB,CAAC,CAAC,CAACI,KAAK,CAAEC,KAAK,IAAK;QAChBN,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEK,KAAK,CAACR,QAAQ,CAAC;MAC1D,CAAC,CAAC;IACN,CAAC;IAEDS,YAAW,EAAI,YAAU;MACpB9B,KAAK,CAAC;QACHY,MAAK,EAAI,OAAO;QAChBV,GAAE,EAAIA,GAAE,GAAI,IAAI,CAACG,UAAS,GAAI,GAAG;QACjCU,OAAM,EAAId,QAAQ,EAAE;QACpBe,MAAK,EAAI;UACLX,UAAS,EAAI,IAAI,CAACA,UAAU;UAC5BC,MAAK,EAAI,IAAI,CAACA,MAAM;UACpByB,MAAK,EAAI;QACb;MACJ,CAAC,CAAC,CAACX,IAAI,CAAEC,QAAQ,IAAK;QAClBE,OAAO,CAACC,GAAG,CAACH,QAAQ;MACxB,CAAC,CAAC,CAACO,KAAK,CAAEC,KAAK,IAAK;QAChBN,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEK,KAAK,CAACR,QAAQ,CAAC;MAC1D,CAAC,CAAC;IAEN;EACJ,CAAC;EAEDW,OAAO,GAAG;IACN,IAAI,CAAC1B,MAAK,GAAI,IAAI,CAACO,MAAM,CAACC,KAAK,CAACR,MAAK;IACrC,IAAI,CAACD,UAAS,GAAI,IAAI,CAACQ,MAAM,CAACC,KAAK,CAACT,UAAS;EACjD,CAAC;EAGD4B,KAAI,EAAI;IACJ3B,MAAK,EAAI,YAAU;MACf,IAAI,CAACwB,YAAY,EAAC;IACtB;EACJ;AAUJ","names":["axios","setToken","url","name","data","project_id","status","statusOptions","value","color","methods","retrieveProject","method","$route","query","headers","params","user_id","localStorage","getItem","then","response","project","console","log","$router","replace","id","catch","error","updateStatus","action","mounted","watch"],"sourceRoot":"","sources":["C:\\schedule\\config\\front\\src\\views\\Project\\Manage\\ManageStatus.vue"],"sourcesContent":["<template>\r\n    <v-container>\r\n        <!-- <v-radio-group v-model=\"status\" inline @change=\"save\"> -->\r\n        <v-radio-group v-model=\"status\" inline>\r\n            <template v-slot:label>\r\n                <strong> Status of Project </strong>\r\n            </template>\r\n            <v-radio\r\n                v-for=\"option in statusOptions\"\r\n                :key=\"option.value\"\r\n                :value=\"option.value\"\r\n                :color=\"option.color\"\r\n            >\r\n                <template v-slot:label>\r\n                    <strong >{{option.name}} </strong>\r\n                </template>\r\n            </v-radio>\r\n        </v-radio-group>\r\n    </v-container>\r\n</template>\r\n\r\n\r\n\r\n\r\n<script>\r\nimport axios from \"axios\"\r\nimport setToken from \"@/utils/auth.js\"\r\n\r\nlet url = \"http://127.0.0.1:8000/api/project/\";  // 장고 drf 서버 주소\r\n\r\nexport default {\r\n    name : \"ManageStatus\" , \r\n\r\n\r\n    data : () => {\r\n        return {\r\n                // route : useRoute(),\r\n                // router : useRouter(),\r\n                project_id : -1,\r\n                status : \"P\",\r\n                statusOptions : [\r\n                    {\r\n                        name : \"Prepare\",\r\n                        value : \"P\",\r\n                        color : \"orange\"\r\n                    },\r\n                    {\r\n                        name : \"Ready\",\r\n                        value : \"R\",\r\n                        color : \"success\"\r\n                    },\r\n                    {\r\n                        name : \"OnGoing\",\r\n                        value : \"O\",\r\n                        color : \"primary\"\r\n                    },\r\n                    {\r\n                        name : \"Done\",\r\n                        value : \"D\",\r\n                        color : \"error\"\r\n                    },                \r\n                ]\r\n        }\r\n    },\r\n\r\n\r\n    methods : {\r\n\r\n        retrieveProject : function(){\r\n            axios({\r\n                method : \"GET\",\r\n                url : url + this.$route.query.project_id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                }\r\n            }).then((response) => {\r\n                this.project = response.data\r\n                this.status = this.project.status\r\n\r\n                console.log(\"here\")\r\n                this.$router.replace({\r\n                    name : 'manage_status',\r\n                    query : {\r\n                        project_id : this.project.id\r\n                    }\r\n                })\r\n                console.log(\"here\")\r\n\r\n            }).catch((error) => {\r\n                console.log(\"Failed to get retreival\", error.response);\r\n            });\r\n        },\r\n\r\n        updateStatus : function(){\r\n             axios({\r\n                method : \"PATCH\",\r\n                url : url + this.project_id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    project_id : this.project_id,\r\n                    status : this.status,\r\n                    action : 'status'\r\n                }\r\n            }).then((response) => {\r\n                console.log(response)\r\n            }).catch((error) => {\r\n                console.log(\"Failed to update status\", error.response);\r\n            });\r\n            \r\n        }\r\n    },\r\n\r\n    mounted() {\r\n        this.status = this.$route.query.status\r\n        this.project_id = this.$route.query.project_id\r\n    },\r\n\r\n\r\n    watch : {\r\n        status : function(){\r\n            this.updateStatus()\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    \r\n\r\n\r\n    \r\n\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}