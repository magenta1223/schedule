{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport setToken from \"@/utils/auth.js\";\n// import { Header, Item } from \"vue3-easy-data-table\";\n\nlet url = \"http://127.0.0.1:8000/api/project/\"; // 장고 drf 서버 주소\nlet song_url = \"http://127.0.0.1:8000/api/song/\"; // 장고 drf 서버 주소\n\nexport default {\n  name: \"SongList\",\n  data: () => {\n    return {\n      //songs\n      songs: [],\n      headers: [{\n        text: 'Artist',\n        value: 'artist'\n      }, {\n        text: 'Title',\n        value: 'title'\n      }, {\n        text: 'Vocal',\n        value: 'Vocal'\n      }, {\n        text: 'Guitar1',\n        value: 'Guitar1'\n      }, {\n        text: 'Guitar2',\n        value: 'Guitar2'\n      }, {\n        text: 'Bass',\n        value: 'Bass'\n      }, {\n        text: 'Drum',\n        value: 'Drum'\n      }, {\n        text: 'Keyboard',\n        value: 'Keyboard'\n      }, {\n        text: 'Fixed',\n        value: 'fix'\n      }],\n      delFrom: \"\",\n      // quit from song\n\n      // positions\n      pos_headers: [{\n        text: \"Name\",\n        value: \"name\"\n      }, {\n        text: \"Position\",\n        value: \"position\"\n      }, {\n        text: \"Status\",\n        value: \"fixed\"\n      }],\n      selected_position: \"\",\n      openModal: false,\n      delPosition: \"\",\n      colors: {\n        true: \"primary\",\n        false: \"error\"\n      },\n      texts: {\n        true: \"Fixed\",\n        false: \"Not Fixed\"\n      }\n    };\n  },\n  props: ['project'],\n  components: {},\n  methods: {\n    parsePlayer: function (song) {\n      song.players.map(player => {\n        if (player.fixed) {\n          //song[player.position] = player \n          song[player.position] = player.user.name;\n        }\n      });\n      return song;\n    },\n    songList: function () {\n      axios({\n        method: \"GET\",\n        url: url + this.$route.params.project_id + '/',\n        headers: setToken(),\n        params: {\n          user_id: localStorage.getItem('user')\n        }\n      }).then(response => {\n        this.project = response.data;\n        this.songs = this.project.songs.map((song, index) => {\n          song.index = index;\n          song = this.parsePlayer(song);\n          return song;\n        });\n        // if (parseInt(localStorage.getItem('user')) === this.project.leader){\n        //     console.log(\"ture\")\n        //     this.manage_mode = true\n        // } project retrieve vue로 넘기자. \n      }).catch(error => {\n        console.log(\"Failed to get retreival\", error.response);\n      });\n    },\n    setIndex: function (oldSong, newSong) {\n      newSong.index = oldSong.index;\n      newSong = this.parsePlayer(newSong);\n      return newSong;\n    },\n    to: function (destination) {\n      this.$router.push({\n        name: destination,\n        params: {\n          project_id: this.$route.params.project_id\n        }\n      });\n    },\n    applyPosition: function (song) {\n      axios({\n        method: \"PATCH\",\n        url: song_url + song.id + '/',\n        headers: setToken(),\n        params: {\n          user_id: localStorage.getItem('user'),\n          position: this.selected_position,\n          action: \"apply\"\n        }\n      }).then(response => {\n        this.songs[song.index] = this.setIndex(song, response.data);\n      }).catch(error => {\n        console.log(\"Failed to update song\", error.response);\n      });\n    },\n    selectSong: function (index) {\n      this.delFrom = this.songs[index];\n    },\n    deleteModal: function (item) {\n      // item의 user와 현재 user가 같은지?\n      if (item.user.id === parseInt(localStorage.getItem(\"user\"))) {\n        this.delPosition = item;\n        this.openModal = true;\n      }\n    },\n    quitPosition: function () {\n      axios({\n        method: \"PATCH\",\n        url: song_url + this.delFrom.id + '/',\n        headers: setToken(),\n        params: {\n          user_id: localStorage.getItem('user'),\n          position: this.delPosition.position,\n          action: \"quit\"\n        }\n      }).then(response => {\n        this.openModal = false;\n        this.songs[this.delFrom.index] = this.setIndex(this.delFrom, response.data);\n      }).catch(error => {\n        console.log(\"Failed to quit from the song\", error.response);\n      });\n    }\n  },\n  mounted() {\n    this.songList();\n    window.onresize = () => {\n      this.windowHeight = window.innerHeight;\n    };\n  },\n  watch: {\n    songs: {\n      handler: function (newVal, oldVal) {\n        newVal;\n        oldVal;\n      },\n      deep: true,\n      immediate: true\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","setToken","url","song_url","name","data","songs","headers","text","value","delFrom","pos_headers","selected_position","openModal","delPosition","colors","true","false","texts","props","components","methods","parsePlayer","song","players","map","player","fixed","position","user","songList","method","$route","params","project_id","user_id","localStorage","getItem","then","response","project","index","catch","error","console","log","setIndex","oldSong","newSong","to","destination","$router","push","applyPosition","id","action","selectSong","deleteModal","item","parseInt","quitPosition","mounted","window","onresize","windowHeight","innerHeight","watch","handler","newVal","oldVal","deep","immediate"],"sourceRoot":"","sources":["C:\\schedule\\config\\front\\src\\views\\Song\\SongList.vue"],"sourcesContent":["<template>\r\n    <v-container>\r\n        <v-container>\r\n            <EasyDataTable\r\n                :headers=\"headers\"\r\n                :items=\"songs\"\r\n                @expand-row=\"selectSong\"\r\n                table-class-name=\"customize-table\"\r\n                show-index\r\n                body-text-direction =\"center\"\r\n                header-text-direction = \"center\"\r\n                :hide-rows-per-page=\"true\"\r\n            >\r\n                <template #item-fix=\"{fix}\">\r\n                        <v-chip width=\"100%\" size=\"small\" :color=\"colors[fix]\">{{texts[fix]}}</v-chip>\r\n                </template>\r\n                <template #expand=\"item\">\r\n                    <!-- 선곡모드 :: 추가 링크, 유툽, 뭐.. 줄 선 사람 리스트? 특수 세션 등 -->\r\n                    <v-card class=\"elevation-0 pa-2\">\r\n                        <v-row>\r\n                            <!-- title -->\r\n                            <v-col cols=\"4\">\r\n                                <v-card-title>\r\n                                    <h3>\r\n                                        {{item.title}}\r\n                                    </h3>\r\n                                    <h6>\r\n                                        {{item.artist}}\r\n                                    </h6>\r\n                                </v-card-title>\r\n                                <v-card-text>\r\n                                    <h2> 비고</h2>\r\n                                </v-card-text>\r\n                                <v-card-text class=\"text-start\">\r\n                                    {{item.content}}\r\n                                </v-card-text>\r\n                            </v-col>\r\n                        <v-col>\r\n                            <!-- 비고 -->\r\n                            <h3> 지원하기 </h3>\r\n                            <v-row>\r\n                                <v-col>\r\n                                    <v-select\r\n                                        v-model=\"selected_position\"\r\n                                        :items=\"item.instruments\"\r\n                                        item-title=\"name\"\r\n                                        item-value=\"name\"\r\n                                        label=\"Position\"\r\n                                        density=\"compact\"\r\n                                    ></v-select>\r\n                                </v-col>\r\n                                <v-col>\r\n                                    <v-btn\r\n                                    class=\"ma-2\"\r\n                                    outlined\r\n                                    color=\"indigo\"\r\n                                    @click=\"applyPosition(item)\"\r\n                                    >\r\n                                    Apply!  \r\n                                    </v-btn>\r\n\r\n                                </v-col>\r\n                            </v-row>\r\n\r\n                            <!-- 세션 지원 및 현황 -->\r\n                                <EasyDataTable\r\n                                    :headers=\"pos_headers\"\r\n                                    :items=\"item.players\"\r\n                                    @click-row=\"deleteModal\"\r\n                                    body-text-direction =\"center\"\r\n                                    header-text-direction = \"center\"\r\n                                    :hide-rows-per-page=\"true\"\r\n\r\n                                    show-index\r\n                                >\r\n                                    <template #item-name=\"{user}\">\r\n                                        <td>\r\n                                            {{user.name}}\r\n                                        </td>\r\n                                    </template>\r\n                                </EasyDataTable>\r\n                        </v-col>\r\n                        </v-row>\r\n                    </v-card>\r\n                    <!-- item마다 확정인지 아닌지를 보여주는 field 필요 -->\r\n                    <!-- <v-card v-else-if=\"mode==='fix'\"> Fix </v-card> -->\r\n\r\n                </template>\r\n            </EasyDataTable>\r\n        </v-container>\r\n\r\n        <v-dialog v-model =\"openModal\" >\r\n            <v-card max-width=\"600px\" class=\"dialog\">\r\n                <v-card-title>\r\n                    Quit from {{this.delFrom.title}}\r\n                </v-card-title>\r\n                <v-card-text>\r\n                    Are you sure to quit from {{this.delPosition.position}} from {{this.delFrom.title}}?\r\n                </v-card-text>\r\n                <v-card-actions>\r\n                    <v-btn color=\"error\"  variant=\"outlined\" width=\"100%\" @click=\"quitPosition\">\r\n                        Quit\r\n                    </v-btn>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n    </v-container>\r\n\r\n\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport setToken from \"@/utils/auth.js\"\r\n// import { Header, Item } from \"vue3-easy-data-table\";\r\n\r\nlet url = \"http://127.0.0.1:8000/api/project/\";  // 장고 drf 서버 주소\r\nlet song_url = \"http://127.0.0.1:8000/api/song/\";  // 장고 drf 서버 주소\r\n\r\n\r\n\r\nexport default {\r\n    \r\n    name : \"SongList\",\r\n\r\n    data : () => {\r\n        return {\r\n\r\n            //songs\r\n            songs : [],\r\n            headers : [\r\n                    {text : 'Artist', value : 'artist'},\r\n                    {text : 'Title', value : 'title'},\r\n                    {text : 'Vocal', value : 'Vocal'},\r\n                    {text : 'Guitar1', value : 'Guitar1'},\r\n                    {text : 'Guitar2', value : 'Guitar2'},\r\n                    {text : 'Bass', value : 'Bass'},\r\n                    {text : 'Drum', value : 'Drum'},\r\n                    {text : 'Keyboard', value : 'Keyboard'},\r\n                    {text : 'Fixed', value : 'fix'},\r\n],\r\n            delFrom : \"\", // quit from song\r\n            \r\n            // positions\r\n            pos_headers : [\r\n                {text : \"Name\", value : \"name\"},\r\n                {text : \"Position\", value : \"position\"},\r\n                {text : \"Status\", value : \"fixed\"},\r\n            ],\r\n            selected_position : \"\",\r\n            openModal : false,\r\n            delPosition : \"\",\r\n\r\n            colors : {\r\n                true : \"primary\",\r\n                false : \"error\"\r\n            },\r\n            texts : {\r\n                true : \"Fixed\",\r\n                false : \"Not Fixed\"\r\n            }\r\n\r\n      \r\n        }\r\n    },\r\n\r\n    props : ['project'],\r\n\r\n    components : {\r\n    },\r\n    \r\n    methods: {\r\n        parsePlayer : function(song){\r\n            song.players.map((player) => {\r\n                if (player.fixed){\r\n                    //song[player.position] = player \r\n                    song[player.position] = player.user.name \r\n                }\r\n            })\r\n            return song\r\n        },\r\n        \r\n        songList : function(){\r\n            axios({\r\n                method : \"GET\",\r\n                url : url + this.$route.params.project_id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                }\r\n            }).then((response) => {\r\n                this.project = response.data\r\n                this.songs = this.project.songs.map( (song, index) => {\r\n                    song.index = index\r\n                    song = this.parsePlayer(song)\r\n                    return song\r\n                })\r\n                // if (parseInt(localStorage.getItem('user')) === this.project.leader){\r\n                //     console.log(\"ture\")\r\n                //     this.manage_mode = true\r\n                // } project retrieve vue로 넘기자. \r\n\r\n            }).catch((error) => {\r\n                console.log(\"Failed to get retreival\", error.response);\r\n            });\r\n        },\r\n\r\n        setIndex : function(oldSong, newSong){\r\n            newSong.index = oldSong.index\r\n            newSong = this.parsePlayer(newSong)\r\n            return newSong\r\n        }, \r\n\r\n        to : function(destination){\r\n            this.$router.push({\r\n                name : destination,\r\n                params : {\r\n                    project_id : this.$route.params.project_id\r\n                }})\r\n        },\r\n\r\n        applyPosition : function(song){\r\n            axios({\r\n                method : \"PATCH\",\r\n                url : song_url + song.id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                    position : this.selected_position,\r\n                    action : \"apply\"\r\n                }\r\n            }).then((response) => {\r\n                this.songs[song.index] = this.setIndex(song, response.data)\r\n            }).catch((error) => {\r\n                console.log(\"Failed to update song\", error.response);\r\n            });\r\n        },\r\n\r\n        selectSong : function(index){\r\n            this.delFrom = this.songs[index]\r\n        },\r\n\r\n        deleteModal : function(item){\r\n            // item의 user와 현재 user가 같은지?\r\n            if (item.user.id === parseInt(localStorage.getItem(\"user\"))){\r\n                this.delPosition = item\r\n                this.openModal = true\r\n            } \r\n        },\r\n\r\n        quitPosition : function(){\r\n            axios({\r\n                method : \"PATCH\",\r\n                url : song_url + this.delFrom.id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                    position : this.delPosition.position,\r\n                    action : \"quit\"\r\n                }\r\n            }).then((response) => {\r\n                this.openModal = false\r\n                this.songs[this.delFrom.index] = this.setIndex(this.delFrom, response.data)\r\n            }).catch((error) => {\r\n                console.log(\"Failed to quit from the song\", error.response);\r\n            });\r\n        },\r\n\r\n\r\n\r\n    },\r\n\r\n    mounted() {\r\n        this.songList()\r\n        window.onresize = () => {\r\n            this.windowHeight = window.innerHeight\r\n        }\r\n    },\r\n\r\n    watch : {\r\n        songs : {\r\n            handler: function(newVal, oldVal){\r\n                newVal; oldVal\r\n            },\r\n            deep : true,\r\n            immediate : true\r\n        },\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n#parralax{\r\n    background-image : url('~@/assets/wallpaper.jpg');\r\n    background-size: cover;\r\n\r\n}\r\n\r\n.posting-container{\r\n    width: 80%;\r\n}\r\n\r\n.btn-container{\r\n    margin-left: auto!important;\r\n}\r\n\r\n.blurred{\r\n    background: rgba(0, 0, 0, 0.2);\r\n    backdrop-filter: blur(10px);\r\n    width : 100% !important;\r\n    height:  100% !important;\r\n}\r\n\r\n.dialog{\r\n    margin-left: auto!important; margin-right: auto!important; \r\n}\r\n\r\n.customize-table{\r\n    --easy-table-body-item-padding : 0px, 0px;\r\n}\r\n</style>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}