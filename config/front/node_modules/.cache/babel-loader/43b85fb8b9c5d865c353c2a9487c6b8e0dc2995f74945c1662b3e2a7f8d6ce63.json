{"ast":null,"code":"import MainView from './components/Main.vue';\nimport LogIn from './components/AuthCompo/LogIn.vue';\n// import axios from \"axios\";\nimport parseJwt from '@/utils/auth.js';\nexport default {\n  name: 'App',\n  data: () => ({\n    logged: false\n  }),\n  created: function () {\n    // 로컬스토리지에 jwt 이 존재하는지에 따라 로그인 여부 판단하기\n    const token = localStorage.getItem('access_token');\n    const expired = parseJwt(token);\n    console.log(\"xpir\", expired);\n    if (expired.exp < Date.now() / 1000) {\n      // token expired\n      this.logged = false;\n    }\n    if (token && expired.exp < Date.now() / 1000) {\n      this.logged = true;\n    }\n  },\n  components: {\n    MainView,\n    LogIn\n  }\n};","map":{"version":3,"mappings":"AAYA,OAAOA,QAAO,MAAO,uBAAsB;AAC3C,OAAOC,KAAI,MAAO,kCAAiC;AACnD;AACA,OAAOC,QAAO,MAAO,iBAAgB;AAErC,eAAe;EACbC,IAAI,EAAE,KAAK;EAETC,IAAI,EAAE,OAAO;IACTC,MAAK,EAAI;EACb,CAAC,CAAC;EACFC,OAAM,EAAI,YAAU;IAChB;IACA,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,cAAc;IAGjD,MAAMC,OAAM,GAAIR,QAAQ,CAACK,KAAK;IAC9BI,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEF,OAAO;IAE3B,IAAIA,OAAO,CAACG,GAAE,GAAIC,IAAI,CAACC,GAAG,EAAE,GAAC,IAAI,EAAE;MAC/B;MACA,IAAI,CAACV,MAAK,GAAI,KAAI;IACtB;IAEA,IAAGE,KAAI,IAAMG,OAAO,CAACG,GAAE,GAAIC,IAAI,CAACC,GAAG,EAAE,GAAC,IAAK,EAAC;MACxC,IAAI,CAACV,MAAK,GAAI,IAAG;IACrB;EACJ,CAAC;EAGDW,UAAU,EAAE;IACRhB,QAAQ;IACRC;EACJ;AAGJ","names":["MainView","LogIn","parseJwt","name","data","logged","created","token","localStorage","getItem","expired","console","log","exp","Date","now","components"],"sourceRoot":"","sources":["C:\\schedule\\config\\front\\src\\App.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-main v-if=\"logged\">\n            <MainView/>\n        </v-main>\n        <v-main v-else>\n            <LogIn/>\n        </v-main>\n    </v-app>\n</template>\n\n<script>\nimport MainView from './components/Main.vue'\nimport LogIn from './components/AuthCompo/LogIn.vue'\n// import axios from \"axios\";\nimport parseJwt from '@/utils/auth.js'\n\nexport default {\n  name: 'App',\n\n    data: () => ({\n        logged : false\n    }),\n    created : function(){\n        // 로컬스토리지에 jwt 이 존재하는지에 따라 로그인 여부 판단하기\n        const token = localStorage.getItem('access_token')\n        \n        \n        const expired = parseJwt(token)\n        console.log(\"xpir\", expired)\n\n        if (expired.exp < Date.now()/1000) {\n            // token expired\n            this.logged = false\n        }\n\n        if(token && (expired.exp < Date.now()/1000)){\n            this.logged = true\n        }\n    },\n\n\n    components: {\n        MainView,\n        LogIn,\n    },\n\n\n}\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}