{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport setToken from \"@/utils/auth.js\";\nimport { mdiMinus, mdiPlus } from '@mdi/js';\nlet url = \"http://127.0.0.1:8000/api/song/\"; // 장고 drf 서버 주소\n\nexport default {\n  name: \"SongCreate\",\n  data: () => {\n    return {\n      title: \"\",\n      artist: \"\",\n      content: \"\",\n      newPosition: \"\",\n      positions: [{\n        name: 'Vocal',\n        requirement: 0\n      }, {\n        name: 'Guitar',\n        requirement: 0\n      }, {\n        name: 'Bass',\n        requirement: 0\n      }, {\n        name: 'Drum',\n        requirement: 0\n      }, {\n        name: 'Keyboard',\n        requirement: 0\n      }],\n      icons: {\n        mdiMinus,\n        mdiPlus\n      }\n    };\n  },\n  components: {},\n  methods: {\n    subtract: function (item) {\n      if (item.requirement - 1 >= 0) {\n        item.requirement = item.requirement - 1;\n      }\n    },\n    add: function (item) {\n      item.requirement = item.requirement + 1;\n    },\n    addPosition: function () {\n      let existingPosition = false;\n      for (let i in this.positions) {\n        if (this.positions[i].name === this.newPosition) {\n          this.positions[i].requirement += 1;\n          existingPosition = true;\n        }\n      }\n      if (!existingPosition) {\n        this.positions.push({\n          name: this.newPosition,\n          requirement: 1\n        });\n      }\n      this.newPosition = \"\";\n    },\n    resetData: function () {\n      this.title = \"\";\n      this.artist = \"\";\n      this.content = \"\";\n      this.newPosition = \"\";\n      this.positions = [{\n        name: 'Vocal',\n        requirement: 0\n      }, {\n        name: 'Guitar',\n        requirement: 0\n      }, {\n        name: 'Bass',\n        requirement: 0\n      }, {\n        name: 'Drum',\n        requirement: 0\n      }, {\n        name: 'Keyboard',\n        requirement: 0\n      }];\n    },\n    createSong: function () {\n      axios({\n        method: \"POST\",\n        url: url,\n        headers: setToken(),\n        params: {\n          user_id: localStorage.getItem('user'),\n          project_id: this.$route.query.project_id,\n          title: this.title,\n          artist: this.artist,\n          content: this.content,\n          positions: JSON.stringify(this.positions)\n        }\n      }).then(response => {\n        console.log(response);\n        // 그냥 연속생성하자\n        // 아래에 non-overlapping 알림 띄우고 수 초안에 collapse하게\n        // 그리고 값만 비워주자 \n        this.resetData();\n      }).catch(error => {\n        console.log(\"Failed to get retreival\", error.response);\n      });\n    }\n  },\n  mounted() {}\n};","map":{"version":3,"mappings":"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","names":["axios","setToken","mdiMinus","mdiPlus","url","name","data","title","artist","content","newPosition","positions","requirement","icons","components","methods","subtract","item","add","addPosition","existingPosition","i","push","resetData","createSong","method","headers","params","user_id","localStorage","getItem","project_id","$route","query","JSON","stringify","then","response","console","log","catch","error","mounted"],"sourceRoot":"","sources":["C:\\schedule\\config\\front\\src\\views\\Song\\SongCreate.vue"],"sourcesContent":["<template>\r\n    <v-container class = \"posting-container\">\r\n\r\n        <v-row>\r\n            <v-col class =\"text-h2 text-start active mb-2\"> New Song\r\n            </v-col>\r\n        </v-row>\r\n        <!-- Title -->\r\n        <v-row>\r\n            <v-col> \r\n                <v-text-field v-model=\"title\" placeholder=\"Title\" name=\"title\" type=\"text\"></v-text-field>\r\n            </v-col>\r\n        </v-row>\r\n        <v-row>\r\n            <v-col> \r\n                <v-text-field v-model=\"artist\" placeholder=\"Artist\" name=\"artist\" type=\"text\"></v-text-field>\r\n            </v-col>\r\n        </v-row>\r\n\r\n        <!-- Content -->\r\n        <!-- Text Editor : TipTap https://uxgjs.tistory.com/220 -->\r\n        <v-row>\r\n            <v-col> \r\n                <v-textarea\r\n                v-model=\"content\"\r\n                name=\"input-7-4\"\r\n                :value=\"content\"\r\n                ></v-textarea>\r\n            </v-col>\r\n        </v-row>\r\n        <!-- button -->\r\n        <v-row class=\"text-start\">\r\n            <v-col class=\"btn-container\">\r\n                <v-btn\r\n                class=\"ma-2\"\r\n                outlined\r\n                color=\"indigo\"\r\n                @click=\"createSong()\"\r\n                >\r\n                Create!  \r\n                </v-btn>\r\n            </v-col>\r\n        </v-row>\r\n\r\n          <v-table>\r\n            <thead>\r\n                <tr>\r\n                    <th class=\"text-left\">\r\n                    Name\r\n                    </th>\r\n                    <th class=\"text-center\">\r\n                    requirement\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr\r\n                    v-for=\"item in positions\"\r\n                    :key=\"item.name\"\r\n                >\r\n                    <td>{{ item.name }}</td>\r\n                    <td class=\"text-center\">\r\n                        <v-btn class = \"elevation-0\" :icon=\"icons.mdiMinus\" size=\"small\" @click=\"subtract(item)\"></v-btn>\r\n                        {{ item.requirement }} 명\r\n                        <v-btn class = \"elevation-0\" :icon=\"icons.mdiPlus\" size=\"small\" @click=\"add(item)\">+</v-btn></td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <v-text-field v-model=\"newPosition\" variant=\"underlined\">\r\n                        </v-text-field>\r\n                    </td>\r\n                    <td>\r\n                        <v-btn class=\"elevation-0\" width=\"100%\" @click=\"addPosition()\">\r\n                            Add New Position\r\n                        </v-btn>\r\n                    </td>\r\n                </tr>\r\n\r\n            </tbody>\r\n            \r\n        </v-table>\r\n\r\n    </v-container>\r\n\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport setToken from \"@/utils/auth.js\"\r\nimport { mdiMinus, mdiPlus  } from '@mdi/js';\r\n\r\nlet url = \"http://127.0.0.1:8000/api/song/\";  // 장고 drf 서버 주소\r\n\r\nexport default {\r\n    \r\n    name : \"SongCreate\",\r\n\r\n    data : () => {\r\n        return {\r\n            title : \"\",\r\n            artist : \"\",\r\n            content : \"\",\r\n            newPosition : \"\",\r\n            positions: [\r\n                {\r\n                    name: 'Vocal',\r\n                    requirement: 0,\r\n                },\r\n                {\r\n                    name: 'Guitar',\r\n                    requirement: 0,\r\n                },\r\n                {\r\n                    name: 'Bass',\r\n                    requirement: 0,\r\n                },\r\n                {\r\n                    name: 'Drum',\r\n                    requirement: 0,\r\n                },\r\n                {\r\n                    name: 'Keyboard',\r\n                    requirement: 0,\r\n                },\r\n          \r\n        ],\r\n        icons : { \r\n            mdiMinus, mdiPlus\r\n        }\r\n            }\r\n        },\r\n\r\n    components : {\r\n    },\r\n    \r\n    methods: {\r\n        subtract : function(item){\r\n            if (item.requirement - 1 >= 0){\r\n                item.requirement = item.requirement - 1\r\n            }\r\n        },\r\n\r\n        add : function(item){\r\n            item.requirement = item.requirement + 1\r\n        },\r\n\r\n        addPosition : function(){\r\n            let existingPosition = false\r\n            for (let i in this.positions){\r\n                if (this.positions[i].name === this.newPosition){\r\n                    this.positions[i].requirement += 1\r\n                    existingPosition = true\r\n                }\r\n            }\r\n            \r\n            if (!existingPosition){\r\n                this.positions.push({\r\n                    name : this.newPosition,\r\n                    requirement : 1\r\n                })\r\n            }\r\n            this.newPosition = \"\"\r\n\r\n        },\r\n\r\n        resetData : function(){\r\n            this.title = \"\"\r\n            this.artist = \"\"\r\n            this.content = \"\"\r\n            this.newPosition = \"\"\r\n            this.positions = [\r\n                {\r\n                    name: 'Vocal',\r\n                    requirement: 0,\r\n                },\r\n                {\r\n                    name: 'Guitar',\r\n                    requirement: 0,\r\n                },\r\n                {\r\n                    name: 'Bass',\r\n                    requirement: 0,\r\n                },\r\n                {\r\n                    name: 'Drum',\r\n                    requirement: 0,\r\n                },\r\n                {\r\n                    name: 'Keyboard',\r\n                    requirement: 0,\r\n                }\r\n            ]\r\n        },\r\n\r\n        createSong : function(){\r\n            axios({\r\n                method : \"POST\",\r\n                url : url,\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                    project_id : this.$route.query.project_id,\r\n                    title : this.title,\r\n                    artist : this.artist,\r\n                    content: this.content,\r\n                    positions : JSON.stringify(this.positions)\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(response)\r\n                // 그냥 연속생성하자\r\n                // 아래에 non-overlapping 알림 띄우고 수 초안에 collapse하게\r\n                // 그리고 값만 비워주자 \r\n                this.resetData()\r\n            }).catch((error) => {\r\n                console.log(\"Failed to get retreival\", error.response);\r\n            });\r\n        },\r\n\r\n    },\r\n\r\n    mounted() {\r\n\r\n    }\r\n\r\n    }\r\n</script>\r\n\r\n\r\n<style scoped>\r\n    .btn-container{\r\n        margin-left: auto!important;\r\n    }\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}