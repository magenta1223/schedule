{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport setToken from \"@/utils/auth.js\";\n// import { Header, Item } from \"vue3-easy-data-table\";\nlet url = \"http://127.0.0.1:8000/api/project/\"; // 장고 drf 서버 주소\nlet song_url = \"http://127.0.0.1:8000/api/song/\"; // 장고 drf 서버 주소\n\nimport { mdiDelete } from '@mdi/js';\nexport default {\n  name: \"ProjectManage\",\n  data: () => {\n    return {\n      icons: {\n        mdiDelete\n      },\n      // windows\n      windowHeight: window.innerHeight,\n      windowWidth: window.innerWidth,\n      // manage\n      manage: false,\n      // project -> props\n      project: \"\",\n      //songs -> props\n      songs: [],\n      headers: [{\n        text: 'Artist',\n        value: 'artist'\n      }, {\n        text: 'Title',\n        value: 'title'\n      }, {\n        text: 'Vocal',\n        value: 'Vocal'\n      }, {\n        text: 'Guitar1',\n        value: 'Guitar1'\n      }, {\n        text: 'Guitar2',\n        value: 'Guitar2'\n      }, {\n        text: 'Bass',\n        value: 'Bass'\n      }, {\n        text: 'Drum',\n        value: 'Drum'\n      }, {\n        text: 'Keyboard',\n        value: 'Keyboard'\n      }, {\n        text: 'Fix',\n        value: 'fix'\n      }, {\n        text: 'Delete',\n        value: 'delete'\n      }],\n      delFrom: \"\",\n      //manage\n      manage_header: [{\n        text: \"Positions\",\n        value: \"position\"\n      }, {\n        text: \"Select Player\",\n        value: \"player\"\n      }],\n      selectedPlayers: {},\n      selectedSongs: [],\n      runCounter: 0\n    };\n  },\n  components: {},\n  methods: {\n    parsePlayer: function (song) {\n      song.players.map(player => {\n        if (player.fixed) {\n          song[player.position] = player.user.name;\n        }\n      });\n      return song;\n    },\n    setIndex: function (oldSong, newSong) {\n      newSong.index = oldSong.index;\n      newSong = this.parsePlayer(newSong);\n      return newSong;\n    },\n    retrieveProject: function () {\n      axios({\n        method: \"GET\",\n        url: url + this.$route.params.project_id + '/',\n        headers: setToken(),\n        params: {\n          user_id: localStorage.getItem('user')\n        }\n      }).then(response => {\n        this.project = response.data;\n        this.songs = this.project.songs.map((song, index) => {\n          song.index = index;\n          song = this.parsePlayer(song);\n          console.log(song.fix);\n          this.selectedSongs.push(song.fix);\n          return song;\n        });\n        console.log(this.selectedSongs);\n\n        // this.selectedPlayers = this.songs.map((i) => {\n        //     i;\n        //     return {}\n        // })\n        if (parseInt(localStorage.getItem('user')) === this.project.leader) {\n          console.log(\"ture\");\n          this.manage_mode = true;\n        }\n      }).catch(error => {\n        console.log(\"Failed to get retreival\", error.response);\n      });\n    },\n    to: function (destination) {\n      // console.log(this.$router)\n\n      this.$router.push({\n        name: destination,\n        params: {\n          project_id: this.$route.params.project_id\n        }\n      });\n    },\n    serialize: function (item) {\n      let instruments = {};\n      let selectedPlayers = {};\n      let players = item.players;\n      let inst_list = Array();\n      players = players.map(player => {\n        player.name = player.user.name;\n        player = {\n          ...player\n        }; // Proxy to dictionary\n        return player;\n      });\n      for (let i in players) {\n        let position = players[i].position;\n        if (!(position in instruments)) {\n          instruments[position] = Array();\n          selectedPlayers[position] = \"\";\n        }\n        instruments[position].push(players[i]);\n      }\n      for (let index in item.instruments) {\n        let position = item.instruments[index];\n        inst_list.push({\n          'position': position,\n          'player': instruments[position],\n          'selected': \"\"\n        });\n      }\n      this.selectedPlayers = selectedPlayers;\n      return inst_list;\n    },\n    fix: function (song) {\n      console.log(song);\n      axios({\n        method: \"PATCH\",\n        url: song_url + song.id + '/',\n        headers: setToken(),\n        params: {\n          user_id: localStorage.getItem('user'),\n          selectedPlayers: JSON.stringify(this.selectedPlayers),\n          action: \"fix\"\n        }\n      }).then(response => {\n        this.songs[song.index] = this.setIndex(song, response.data);\n        this.manage = false;\n      }).catch(error => {\n        console.log(\"Failed to fix this song\", error.response);\n      });\n    },\n    save: function () {\n      console.log(this.selectedSongs);\n      this.selectedSongs.map((boolean, song_index) => {\n        this.songs[song_index].fix = boolean;\n      });\n      axios({\n        method: \"PATCH\",\n        url: url + this.project.id + '/',\n        headers: setToken(),\n        params: {\n          user_id: localStorage.getItem('user'),\n          project_id: this.project.id,\n          selectedSongs: JSON.stringify(this.songs),\n          action: \"fix\"\n        }\n      }).then(response => {\n        // saved modal 띄우기\n        console.log(response);\n      }).catch(error => {\n        console.log(\"Failed to fix the project\", error.response);\n      });\n    },\n    deleteSong: function (item) {\n\n      //delete\n      //모달 띄우고 delete view로 걍 보내버리면 됨?> \n    },\n    idle: function (item) {\n      item;\n    }\n  },\n  mounted() {\n    this.retrieveProject();\n    window.onresize = () => {\n      this.windowHeight = window.innerHeight;\n    };\n  },\n  watch: {\n    songs: {\n      handler: function (newVal, oldVal) {\n        newVal;\n        oldVal;\n      },\n      deep: true,\n      immediate: true\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","setToken","url","song_url","mdiDelete","name","data","icons","windowHeight","window","innerHeight","windowWidth","innerWidth","manage","project","songs","headers","text","value","delFrom","manage_header","selectedPlayers","selectedSongs","runCounter","components","methods","parsePlayer","song","players","map","player","fixed","position","user","setIndex","oldSong","newSong","index","retrieveProject","method","$route","params","project_id","user_id","localStorage","getItem","then","response","console","log","fix","push","parseInt","leader","manage_mode","catch","error","to","destination","$router","serialize","item","instruments","inst_list","Array","i","id","JSON","stringify","action","save","boolean","song_index","deleteSong","idle","mounted","onresize","watch","handler","newVal","oldVal","deep","immediate"],"sourceRoot":"","sources":["C:\\schedule\\config\\front\\src\\views\\Project\\ProjectManage.vue"],"sourcesContent":["<template>\r\n    <v-container class = \"mb-6\">\r\n        <!-- 헤더 -->\r\n        <v-container>\r\n        <v-parallax\r\n            id = \"parralax\"\r\n            class = \"rounded-xl\"\r\n            :width=\"windowWidth\"\r\n            height=\"200px\"\r\n        >\r\n            <v-row class=\"blurred align-center justify-start rounded-xl ma-0\">\r\n                <v-col class = \"ma-4\">\r\n                    <h1 class = \"font-weight-medium text-white\">\r\n                        MANAGE MODE : {{project.title}}\r\n                    </h1>\r\n\r\n                    <v-btn @click=\"save\">\r\n                        SAVE\r\n                    </v-btn>\r\n                </v-col>\r\n            </v-row>\r\n        </v-parallax>\r\n        </v-container>\r\n        <!-- 바디 -->\r\n        \r\n        <v-container>\r\n            <EasyDataTable\r\n                :headers=\"headers\"\r\n                :items=\"songs\"\r\n                table-class-name=\"customize-table\"\r\n                show-index\r\n                body-text-direction =\"center\"\r\n                header-text-direction = \"center\"\r\n                :hide-rows-per-page=\"true\"\r\n            >\r\n                <template #item-fix=\"item\">\r\n                    <v-checkbox  v-model=\"selectedSongs[item.index]\" density=\"compact\" class=\"cbox\"></v-checkbox>\r\n                </template>\r\n                <template #item-delete=\"item\">\r\n                    <v-icon :icon=\"icons.mdiDelete\" @click=\"deleteSong(item)\" density=\"compact\"></v-icon>\r\n                </template>\r\n                <template #expand=\"item\">\r\n                    <v-card class=\"elevation-0 pa-2\">\r\n                        <EasyDataTable\r\n                            :headers=\"manage_header\"\r\n                            :items=\"serialize(item)\"\r\n                            body-text-direction =\"center\"\r\n                            header-text-direction = \"center\"\r\n                            :hide-rows-per-page=\"true\"\r\n                            show-index\r\n                        >\r\n                            <template #item-player=\"item\">\r\n                                <td>\r\n                                    <v-select\r\n                                    v-model=\"selectedPlayers[item.position]\"\r\n                                    :items=\"item.player\"\r\n                                    item-title=\"name\"\r\n                                    item-value=\"id\"\r\n                                    density=\"compact\"\r\n                                    >                                      \r\n                                    </v-select>\r\n                                </td>\r\n                            </template>\r\n                        </EasyDataTable>\r\n                        <v-card-actions>\r\n                            <v-btn width = \"100%\" @click=\"fix(item)\">\r\n                                FIX\r\n                            </v-btn>\r\n                        </v-card-actions>\r\n                    </v-card>\r\n                </template>\r\n\r\n            </EasyDataTable>\r\n\r\n        </v-container>\r\n    </v-container>\r\n\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport setToken from \"@/utils/auth.js\"\r\n// import { Header, Item } from \"vue3-easy-data-table\";\r\nlet url = \"http://127.0.0.1:8000/api/project/\";  // 장고 drf 서버 주소\r\nlet song_url = \"http://127.0.0.1:8000/api/song/\";  // 장고 drf 서버 주소\r\n\r\nimport { mdiDelete  } from '@mdi/js';\r\n\r\n\r\nexport default {\r\n\r\n    name : \"ProjectManage\",\r\n    \r\n    data : () => {\r\n        return {\r\n            icons:{mdiDelete},\r\n            // windows\r\n            windowHeight : window.innerHeight,\r\n            windowWidth : window.innerWidth,\r\n            \r\n            // manage\r\n            manage : false,\r\n\r\n            // project -> props\r\n            project : \"\",\r\n\r\n            //songs -> props\r\n            songs : [],\r\n            headers : [\r\n                    {text : 'Artist', value : 'artist'},\r\n                    {text : 'Title', value : 'title'},\r\n                    {text : 'Vocal', value : 'Vocal'},\r\n                    {text : 'Guitar1', value : 'Guitar1'},\r\n                    {text : 'Guitar2', value : 'Guitar2'},\r\n                    {text : 'Bass', value : 'Bass'},\r\n                    {text : 'Drum', value : 'Drum'},\r\n                    {text : 'Keyboard', value : 'Keyboard'},\r\n                    {text : 'Fix', value : 'fix'},\r\n                    {text : 'Delete', value : 'delete'},\r\n\r\n            ],\r\n            delFrom : \"\",\r\n            \r\n            //manage\r\n            manage_header : [\r\n                {text : \"Positions\", value : \"position\"},\r\n                {text : \"Select Player\", value : \"player\"},\r\n            ],\r\n            selectedPlayers : {},\r\n            selectedSongs : [],\r\n\r\n\r\n            runCounter : 0\r\n        }\r\n    },\r\n\r\n    components : {\r\n    },\r\n    \r\n    methods: {\r\n        parsePlayer : function(song){\r\n            song.players.map((player) => {\r\n                if (player.fixed){\r\n                    song[player.position] = player.user.name \r\n                }\r\n            })\r\n            return song\r\n        },\r\n        \r\n        setIndex : function(oldSong, newSong){\r\n            newSong.index = oldSong.index\r\n            newSong = this.parsePlayer(newSong)\r\n            return newSong\r\n        }, \r\n        retrieveProject : function(){\r\n            axios({\r\n                method : \"GET\",\r\n                url : url + this.$route.params.project_id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                }\r\n            }).then((response) => {\r\n                this.project = response.data\r\n                this.songs = this.project.songs.map( (song, index) => {\r\n                    song.index = index\r\n                    song = this.parsePlayer(song)\r\n                    console.log(song.fix)\r\n                    this.selectedSongs.push(song.fix)\r\n\r\n    \r\n                    return song\r\n                })\r\n\r\n                console.log(this.selectedSongs)\r\n\r\n                // this.selectedPlayers = this.songs.map((i) => {\r\n                //     i;\r\n                //     return {}\r\n                // })\r\n                if (parseInt(localStorage.getItem('user')) === this.project.leader){\r\n                    console.log(\"ture\")\r\n                    this.manage_mode = true\r\n                }\r\n\r\n            }).catch((error) => {\r\n                console.log(\"Failed to get retreival\", error.response);\r\n            });\r\n        },\r\n\r\n\r\n\r\n        to : function(destination){\r\n            // console.log(this.$router)\r\n\r\n            this.$router.push({\r\n                name : destination,\r\n                params : {\r\n                    project_id : this.$route.params.project_id\r\n                }})\r\n        },\r\n\r\n        serialize : function(item){\r\n            let instruments = {}\r\n            let selectedPlayers = {}\r\n            let players = item.players\r\n            let inst_list = Array()\r\n\r\n            players = players.map((player) => {\r\n                player.name = player.user.name\r\n                player = { ...player }; // Proxy to dictionary\r\n                return player\r\n            })\r\n\r\n            for (let i in players){\r\n                let position = players[i].position\r\n                if (!(position in instruments)){\r\n                    instruments[position] = Array()\r\n                    selectedPlayers[position] = \"\"\r\n                }\r\n                instruments[position].push(players[i])\r\n            }\r\n\r\n            for (let index in item.instruments){\r\n                let position = item.instruments[index]\r\n                inst_list.push({\r\n                    'position' : position,\r\n                    'player' : instruments[position],\r\n                    'selected' : \"\"\r\n                })\r\n            }\r\n            this.selectedPlayers = selectedPlayers\r\n            return inst_list\r\n        },\r\n\r\n        fix : function(song){\r\n            console.log(song)\r\n            axios({\r\n                method : \"PATCH\",\r\n                url : song_url + song.id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                    selectedPlayers : JSON.stringify(this.selectedPlayers),\r\n                    action : \"fix\"\r\n                }\r\n            }).then((response) => {\r\n                this.songs[song.index] = this.setIndex(song, response.data)\r\n                this.manage = false\r\n            }).catch((error) => {\r\n                console.log(\"Failed to fix this song\", error.response);\r\n            });\r\n        },\r\n\r\n        save : function(){\r\n            console.log(this.selectedSongs)\r\n\r\n            this.selectedSongs.map((boolean, song_index)=> {\r\n                this.songs[song_index].fix = boolean\r\n            })\r\n\r\n\r\n            axios({\r\n                method : \"PATCH\",\r\n                url : url + this.project.id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                    project_id : this.project.id,\r\n                    selectedSongs : JSON.stringify(this.songs),\r\n                    action : \"fix\"\r\n                }\r\n            }).then((response) => {\r\n                // saved modal 띄우기\r\n                console.log(response)\r\n            }).catch((error) => {\r\n                console.log(\"Failed to fix the project\", error.response);\r\n            });\r\n\r\n        },\r\n\r\n        deleteSong : function(item){\r\n\r\n            //delete\r\n            //모달 띄우고 delete view로 걍 보내버리면 됨?> \r\n\r\n        },\r\n\r\n        idle : function(item){\r\n            item;\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n        this.retrieveProject()\r\n        window.onresize = () => {\r\n            this.windowHeight = window.innerHeight\r\n        }\r\n    },\r\n\r\n    watch : {\r\n        songs : {\r\n            handler: function(newVal, oldVal){\r\n                newVal; oldVal\r\n            },\r\n            deep : true,\r\n            immediate : true\r\n        },\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n#parralax{\r\n    background-image : url('~@/assets/wallpaper.jpg');\r\n    background-size: cover;\r\n\r\n}\r\n\r\n.posting-container{\r\n    width: 80%;\r\n}\r\n\r\n\r\n.btn-container{\r\n    margin-left: auto!important;\r\n}\r\n\r\n.blurred{\r\n    background: rgba(0, 0, 0, 0.2);\r\n    backdrop-filter: blur(2px);\r\n    width : 100% !important;\r\n    height:  100% !important;\r\n}\r\n\r\n.dialog{\r\n    margin-left: auto!important; margin-right: auto!important; \r\n}\r\n\r\n.customize-table{\r\n    --easy-table-body-item-padding : 0px, 0px;\r\n    --easy-table-body-row-height : 24px!important;\r\n}\r\n\r\n.cbox >>> .v-input__control{\r\n    justify-content: center;\r\n}\r\n\r\n.cbox >>> .v-input__details{\r\n    height: 0px!important;\r\n}\r\n</style>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}