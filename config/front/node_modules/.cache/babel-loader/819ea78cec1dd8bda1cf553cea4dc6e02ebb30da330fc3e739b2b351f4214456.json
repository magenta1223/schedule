{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  key: 1,\n  class: \"vuecal__cell-events-count\"\n};\nconst _hoisted_4 = {\n  key: 2,\n  class: \"vuecal__no-event\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_select = _resolveComponent(\"v-select\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_item = _resolveComponent(\"v-item\");\n  const _component_VueCal = _resolveComponent(\"VueCal\");\n  const _component_v_item_group = _resolveComponent(\"v-item-group\");\n  const _component_v_toolbar_title = _resolveComponent(\"v-toolbar-title\");\n  const _component_v_toolbar = _resolveComponent(\"v-toolbar\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_chip = _resolveComponent(\"v-chip\");\n  const _component_v_divider = _resolveComponent(\"v-divider\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_dialog = _resolveComponent(\"v-dialog\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_createCommentVNode(\" 헤더 \"), _createVNode(_component_v_row, {\n      class: \"mb-4\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"4\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_select, {\n          modelValue: _ctx.activeView,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.activeView = $event),\n          items: _ctx.activeViewOptions,\n          \"item-title\": \"name\",\n          \"item-value\": \"name\",\n          label: \"View\",\n          density: \"compact\"\n        }, null, 8 /* PROPS */, [\"modelValue\", \"items\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_col, {\n        cols: \"4\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_btn, {\n          class: \"mr-1\",\n          onClick: _cache[1] || (_cache[1] = $event => _ctx.$refs.vuecal.previous()),\n          icon: _ctx.icons.mdiArrowLeft,\n          size: \"small\"\n        }, null, 8 /* PROPS */, [\"icon\"]), _createVNode(_component_v_btn, {\n          onClick: _cache[2] || (_cache[2] = $event => _ctx.$refs.vuecal.next()),\n          icon: _ctx.icons.mdiArrowRight,\n          size: \"small\"\n        }, null, 8 /* PROPS */, [\"icon\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_col, null, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.selectedDate), 1 /* TEXT */)]),\n\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_col, {\n        cols: \"2\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_btn, {\n          onClick: $options.modal\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" SEARCH \")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 캘린더 \"), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_item_group, {\n        multiple: \"\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_VueCal, {\n          ref: \"vuecal\",\n          \"selected-date\": _ctx.selectedDate,\n          \"onUpdate:selected-date\": _cache[3] || (_cache[3] = $event => _ctx.selectedDate = $event),\n          \"active-view\": _ctx.activeView,\n          \"onUpdate:active-view\": _cache[4] || (_cache[4] = $event => _ctx.activeView = $event),\n          \"hide-view-selector\": \"\",\n          \"hide-title-bar\": \"\",\n          events: _ctx.events,\n          \"disable-views\": _ctx.disable_views,\n          \"time-from\": _ctx.time_from,\n          \"time-to\": _ctx.time_to,\n          \"time-step\": _ctx.time_step,\n          \"events-on-month-view\": _ctx.eomv,\n          \"on-event-click\": $options.onEventClick,\n          onCellClick: $options.onCellClick\n        }, {\n          \"weekday-heading\": _withCtx(({\n            heading\n          }) => [_createElementVNode(\"div\", {\n            style: _normalizeStyle($options.wdHeaderStyle(heading))\n          }, _toDisplayString($options.wdHeaderText(heading)), 5 /* TEXT, STYLE */)]),\n\n          \"cell-content\": _withCtx(({\n            cell,\n            view,\n            events,\n            goNarrower\n          }) => [_createElementVNode(\"div\", {\n            class: \"vuecal__flex vuecal__cell-content custom-cell\",\n            onClick: $event => $options.onCellClick(cell)\n          }, [_createCommentVNode(\" <v-row class =\\\"ma-2\\\">\\r\\n                                {{ cell.content }}\\r\\n                            </v-row> \"), _createVNode(_component_v_item, null, {\n            default: _withCtx(({\n              isSelected,\n              toggle\n            }) => [_createVNode(_component_v_card, {\n              color: isSelected ? 'primary' : '',\n              class: \"d-flex align-center rounded-0 elevation-0\",\n              dark: \"\",\n              onClick: $event => [$options.onCellClick(isSelected, cell), toggle()],\n              height: \"100%\",\n              width: \"100%\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_card_text, {\n                class: \"text-center\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(cell.content) + \" \", 1 /* TEXT */), _createCommentVNode(\" {{ isSelected ? 'Selected' : 'Click Me!' }} \")]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)]),\n\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"color\", \"onClick\"])]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)], 8 /* PROPS */, _hoisted_1), view.id === 'day' ? (_openBlock(), _createElementBlock(\"span\", {\n            key: 0,\n            class: _normalizeClass([\"vuecal__cell-date\", view.id]),\n            onClick: goNarrower\n          }, _toDisplayString(cell.content), 11 /* TEXT, CLASS, PROPS */, _hoisted_2)) : _createCommentVNode(\"v-if\", true), view.id === 'month' && events.length ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, _toDisplayString(events.length), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), ['week', 'day'].includes(view.id) && !events.length ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, \"Nothing here 👌\")) : _createCommentVNode(\"v-if\", true)]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"selected-date\", \"active-view\", \"events\", \"disable-views\", \"time-from\", \"time-to\", \"time-step\", \"events-on-month-view\", \"on-event-click\", \"onCellClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 모달 \"), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_dialog, {\n        modelValue: _ctx.openAddMeeting,\n        \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.openAddMeeting = $event),\n        fullscreen: \"\",\n        scrim: false,\n        transition: \"dialog-bottom-transition\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_card, null, {\n          default: _withCtx(() => [_createCommentVNode(\" 툴바 \"), _createVNode(_component_v_toolbar, {\n            dark: \"\",\n            color: \"primary\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_btn, {\n              icon: _ctx.icons.mdiClose,\n              dark: \"\",\n              onClick: _cache[5] || (_cache[5] = $event => _ctx.openAddMeeting = false)\n            }, null, 8 /* PROPS */, [\"icon\"]), _createVNode(_component_v_toolbar_title, null, {\n              default: _withCtx(() => [_createTextVNode(\" Searching best meeting \")]),\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          }), _createCommentVNode(\" 참여 가능 인원 받아오기 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.selectedNewDates, date => {\n            return _openBlock(), _createBlock(_component_v_container, {\n              key: date\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(date), 1 /* TEXT */)]),\n\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.getSongs(), song => {\n                return _openBlock(), _createBlock(_component_v_chip, {\n                  key: song\n                }, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString(song.title), 1 /* TEXT */)]),\n\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */);\n              }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_v_divider)]),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */);\n          }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" 일단 되는 사람 다 불러오고 \"), _createCommentVNode(\" 시간대, 곡 등을 조건을 걸어본다. 그에 맞춰서 disable되는 곡이나 사람이 생기겠지? \"), _createCommentVNode(\" 시간대를 조건으로 걸면?  \"), _createCommentVNode(\" 조건 다 골랐으면 배치를 해야됨. \"), _createCommentVNode(\" phase 별로 페이지 짜야됨. 페이지 넘기기 \")]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":"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","names":["class","_createBlock","_component_v_container","_createCommentVNode","_createVNode","_component_v_row","_component_v_col","cols","_component_v_select","_ctx","items","label","density","_component_v_btn","onClick","vuecal","previous","icon","mdiArrowLeft","size","next","mdiArrowRight","$options","_component_v_item_group","multiple","_component_VueCal","ref","events","onCellClick","heading","_createElementVNode","style","cell","view","goNarrower","_component_v_item","isSelected","toggle","_component_v_card","color","dark","height","width","_component_v_card_text","content","id","_createElementBlock","length","_hoisted_3","includes","_hoisted_4","_component_v_dialog","fullscreen","scrim","transition","_component_v_toolbar","mdiClose","_component_v_toolbar_title","_Fragment","date","key","_component_v_card_title","song","_component_v_chip","title","_component_v_divider"],"sourceRoot":"","sources":["C:\\schedule\\config\\front\\src\\views\\Project\\Manage\\ManageSchedule.vue"],"sourcesContent":["<template>\r\n    <v-container>\r\n        <!-- 헤더 -->\r\n        <v-row class =\"mb-4\">\r\n            <v-col cols=\"4\">\r\n                <v-select\r\n                    v-model=\"activeView\"\r\n                    :items=\"activeViewOptions\"\r\n                    item-title=\"name\"\r\n                    item-value=\"name\"\r\n                    label=\"View\"\r\n                    density=\"compact\"\r\n                ></v-select>\r\n            </v-col>\r\n            <v-col cols=\"4\">\r\n                <v-btn\r\n                    class =\"mr-1\"\r\n                    @click=\"$refs.vuecal.previous()\"\r\n                    :icon=\"icons.mdiArrowLeft\"\r\n                    size=\"small\"\r\n                >\r\n                </v-btn>\r\n                <v-btn\r\n                    \r\n                    @click=\"$refs.vuecal.next()\"\r\n                    :icon=\"icons.mdiArrowRight\"\r\n                    size=\"small\"\r\n                >\r\n                </v-btn>\r\n            </v-col>\r\n            <v-col>\r\n                {{selectedDate}}\r\n            </v-col>\r\n            <v-col cols=\"2\">\r\n                <v-btn @click=\"modal\"> SEARCH </v-btn>\r\n            </v-col>\r\n        </v-row>\r\n        \r\n        <!-- 캘린더 -->\r\n        <v-row>\r\n            <v-item-group multiple>\r\n                <VueCal\r\n                    ref=\"vuecal\"\r\n                    v-model:selected-date=\"selectedDate\"\r\n                    v-model:active-view=\"activeView\"\r\n                    hide-view-selector\r\n                    hide-title-bar\r\n                    :events=\"events\"\r\n                    :disable-views=\"disable_views\"\r\n                    :time-from=\"time_from\"\r\n                    :time-to=\"time_to\"\r\n                    :time-step=\"time_step\"\r\n                    :events-on-month-view=\"eomv\"\r\n                    :on-event-click=\"onEventClick\"\r\n                    @cell-click=\"onCellClick\"\r\n                >\r\n                    <template #weekday-heading={heading}>\r\n                        <div :style=\"wdHeaderStyle(heading)\">\r\n                            {{wdHeaderText(heading)}}\r\n                        </div>\r\n                    </template>\r\n                    \r\n                    <template #cell-content=\"{ cell, view, events, goNarrower }\" >\r\n                        <div class=\"vuecal__flex vuecal__cell-content custom-cell\" @click=\"onCellClick(cell)\">\r\n                            <!-- <v-row class =\"ma-2\">\r\n                                {{ cell.content }}\r\n                            </v-row> -->\r\n                            <v-item v-slot=\"{ isSelected, toggle }\">\r\n                                <v-card\r\n                                :color=\"isSelected ? 'primary' : ''\"\r\n                                class=\"d-flex align-center rounded-0 elevation-0\"\r\n                                dark\r\n                                @click=\"[onCellClick(isSelected, cell), toggle()]\"\r\n                                height=\"100%\"\r\n                                width=\"100%\"\r\n                                >\r\n                                <v-card-text class=\"text-center\">\r\n                                    {{cell.content}}\r\n                                    <!-- {{ isSelected ? 'Selected' : 'Click Me!' }} -->\r\n                                </v-card-text>\r\n                                </v-card>\r\n                            </v-item>\r\n\r\n                        </div>\r\n                        <span class=\"vuecal__cell-date\" :class=\"view.id\" v-if=\"view.id === 'day'\" @click=\"goNarrower\">\r\n                        {{ cell.content }}\r\n                        </span>\r\n                        <span class=\"vuecal__cell-events-count\" v-if=\"view.id === 'month' && events.length\">{{ events.length }} </span>\r\n                        <span class=\"vuecal__no-event\" v-if=\"['week', 'day'].includes(view.id) && !events.length\">Nothing here 👌</span>\r\n                    </template>\r\n                </VueCal>\r\n            </v-item-group>\r\n        </v-row>\r\n        <!-- 모달 -->\r\n        <v-row>\r\n            <v-dialog\r\n            v-model=\"openAddMeeting\"\r\n            fullscreen\r\n            :scrim=\"false\"\r\n            transition=\"dialog-bottom-transition\"\r\n            >\r\n\r\n                <v-card>\r\n                    <!-- 툴바 -->\r\n                    <v-toolbar\r\n                    dark\r\n                    color=\"primary\"\r\n                    >\r\n                        <v-btn\r\n                            :icon=\"icons.mdiClose\"\r\n                            dark\r\n                            @click=\"openAddMeeting = false\"\r\n                        >\r\n                        </v-btn>\r\n\r\n                        <v-toolbar-title>\r\n                            Searching best meeting\r\n                        </v-toolbar-title>\r\n                    </v-toolbar>\r\n\r\n                    <!-- 참여 가능 인원 받아오기 -->\r\n                    \r\n                    <v-container v-for=\"date in selectedNewDates\" :key=\"date\"> \r\n                        <v-card-title>\r\n                            {{date}}\r\n                        </v-card-title>\r\n                        <v-chip v-for=\"song in getSongs()\" :key=\"song\">\r\n                            {{song.title}}\r\n                        </v-chip>\r\n                        <v-divider></v-divider>\r\n                    </v-container>\r\n                    <!-- 일단 되는 사람 다 불러오고 -->\r\n                    <!-- 시간대, 곡 등을 조건을 걸어본다. 그에 맞춰서 disable되는 곡이나 사람이 생기겠지? -->\r\n                    <!-- 시간대를 조건으로 걸면?  -->\r\n\r\n                    <!-- 조건 다 골랐으면 배치를 해야됨. -->\r\n                    <!-- phase 별로 페이지 짜야됨. 페이지 넘기기 -->\r\n                    \r\n\r\n\r\n                </v-card>\r\n            </v-dialog>\r\n\r\n        </v-row>\r\n\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\"\r\nimport VueCal from 'vue-cal'\r\nimport 'vue-cal/dist/vuecal.css'\r\n// import Datepicker from '@vuepic/vue-datepicker';\r\nimport {mdiArrowLeft, mdiArrowRight, mdiClose} from \"@mdi/js\"\r\n\r\nimport setToken from \"@/utils/auth.js\"\r\n\r\nlet url = \"http://127.0.0.1:8000/api/project/\";  // 장고 drf 서버 주소\r\n\r\nexport default {\r\n    name: 'YourComponent',\r\n\r\n    data : () => {\r\n        return {\r\n            icons : {\r\n                mdiArrowLeft, mdiArrowRight, mdiClose\r\n            },\r\n            \r\n            // calendar header\r\n            selectedDate: null,\r\n            activeView: \"month\",\r\n            activeViewOptions : ['month', 'week', 'day'],\r\n            \r\n            // views \r\n            disable_views : ['years', 'year'],\r\n            disable_days : [], // 이거 computed로 설정. 곡 넣을 때 \r\n                    \r\n            // week / day time interval\r\n            time_from : 8 * 60,\r\n            time_to :23 * 60,\r\n            time_step : 30,\r\n\r\n            // view events in month\r\n            eomv : 'short',\r\n        \r\n            // header\r\n            weekdayHeadings : {\r\n                Sunday : {\r\n                    short : 'Sun',\r\n                    color : 'red'\r\n                },\r\n                Monday : {\r\n                    short : 'Mon',\r\n                    color : 'black'\r\n                },\r\n                Tuesday : {\r\n                    short : 'Tue',\r\n                    color : 'black'\r\n                },\r\n                Wednesday : {\r\n                    short : 'Wed',\r\n                    color : 'black'\r\n                },\r\n                Thursday : {\r\n                    short : 'Thu',\r\n                    color : 'black'\r\n                },\r\n                Friday : {\r\n                    short : 'Fri',\r\n                    color : 'black'\r\n                },\r\n                Saturday : {\r\n                    short : 'Sat',\r\n                    color : 'blue'\r\n                },\r\n\r\n            },\r\n\r\n            events: [\r\n                {\r\n                    id : 1,\r\n                    author : 1,\r\n                    start: '2022-11-26 14:00',\r\n                    end: '2022-11-26 17:30',\r\n                    title: 'Boring event',\r\n                    content: 'CEX',\r\n                    // split : 1\r\n                },\r\n                {\r\n                start: '2022-11-26 12:00',\r\n                end: '2022-11-26 14:00',\r\n                title: '합주',\r\n                class: 'meeting',\r\n                background: true,\r\n                // split : 2\r\n                },\r\n            ],\r\n\r\n            // add events\r\n            openAdd : false,\r\n            newDate : [\r\n                new Date(), \r\n                new Date()\r\n            ],\r\n            newEvent : {\r\n                title : \"\",\r\n                content : \"\"\r\n            },\r\n\r\n            // retrieve events\r\n            openRetrieve : false,\r\n\r\n            selectedNewDates : new Set(),\r\n            openAddMeeting : false,\r\n\r\n        }\r\n    },\r\n\r\n    components: {\r\n        VueCal,\r\n        // Datepicker\r\n    },\r\n\r\n    methods : {\r\n        wdHeaderStyle : function(heading){\r\n            if (heading.label === ''){\r\n                return ''\r\n            } else {\r\n                return 'color:' + this.weekdayHeadings[heading.label].color\r\n            }\r\n        },\r\n        wdHeaderText : function(heading){\r\n            if (heading.label === ''){\r\n                return ''\r\n            } else {\r\n                return this.weekdayHeadings[heading.label].short\r\n            }\r\n        },\r\n\r\n        onEventClick: function(event){\r\n            event;\r\n            console.log('eventclick')\r\n        },\r\n\r\n        onCellClick : function(isSelected, event){\r\n            event;\r\n            // isSelected === true : 이제 선택 안함\r\n            // isSelected === false : 이제 선택 함\r\n            // selected events에서 제거할지 말지 ? \r\n            if (typeof(isSelected) === 'boolean'){\r\n                if (!isSelected){\r\n                    console.log(event.startDate)\r\n                    this.selectedNewDates.add(String(event.startDate))\r\n                } else {\r\n                    this.selectedNewDates.delete(String(event.startDate))\r\n                }\r\n            } \r\n\r\n            // console.log('----------------------------')\r\n            // console.log(isSelected, this.selectedNewDates)\r\n            // console.log('----------------------------')\r\n\r\n        },\r\n\r\n        retrieveProject : function(){\r\n            axios({\r\n                method : \"GET\",\r\n                url : url + this.$route.query.project_id + '/',\r\n                headers : setToken(),\r\n                params : {\r\n                    user_id : localStorage.getItem('user'),\r\n                }\r\n            }).then((response) => {\r\n                this.project = response.data // project만 가져오자. songs는 songs list에서 가져오고 \r\n                this.project.songs.map((song, index) => {\r\n                    song.index = index\r\n                    return this.parsePlayer(song)\r\n                })\r\n            }).catch((error) => {\r\n                console.log(\"Failed to get retreival\", error.response);\r\n            });\r\n        },\r\n\r\n        parsePlayer : function(song){\r\n            song.players.map((player) => {\r\n                if (player.fixed){\r\n                    //song[player.position] = player \r\n                    song[player.position] = player.user.name \r\n                }\r\n            })\r\n            return song\r\n        },\r\n\r\n\r\n        modal : function(){\r\n            \r\n            this.openAddMeeting = true\r\n            console.log(this.selectedNewDates)\r\n            this.getSongs()\r\n\r\n        },\r\n\r\n        \r\n        // 1. 전체 사용자에 대해 날짜별, 시간대별로 가능한 곡을 전부 뽑는다. \r\n        // 2. 리스팅\r\n\r\n        // 이걸 날짜별로 나누고 싶어.\r\n        // 1. 전체 사용자에 대해 일정 contraint를 고려해, 날짜별로 가능한 곡을 전부 뽑아본다\r\n        // 2. 여기에 추가적으로 합주시간 범위를 지정. global contraint\r\n        // 3. 곡에 대한 constraint : \r\n        // 1번과 조건이 역임.\r\n        // 어떤 곡에 대해, 현재 선택된 날짜들로 가봄\r\n        // 날짜와 곡이 동시에 주어진 상황. 되냐?\r\n        // \r\n\r\n        getSongs : function(){\r\n            // 일단은 하루별로 가능한 곡을 뽑아봄. \r\n            console.log()\r\n            let availableSongs = Array()\r\n            for (let date of this.selectedNewDates){\r\n                // 탐색의 범위를 줄이기 위해. 일부라도 가능하면.. \r\n\r\n\r\n                // let availableUsers = this.getAvailableUsers(date)\r\n\r\n                // constraints\r\n                // 1) 여기서 available 시간대를 주면 됨\r\n                let tMin = 12\r\n                let tMax = 18\r\n                \r\n                for (let j in this.project.songs){\r\n                    let song = this.project.songs[j]\r\n                    \r\n                    for (let t = tMin; t < tMax; t++) {\r\n                        if(this.isAvailableAt(song, date, t)){\r\n                            availableSongs.push(song)\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                // 2) song. 루프 돌기전에 그 곡들을 먼저 체크. 하나라도 안되면 그날은 안되는 날.\r\n\r\n                \r\n            }\r\n            console.log(availableSongs[0])\r\n            return availableSongs\r\n\r\n        },\r\n\r\n        isAvailableAt(song, date, time){\r\n            let songStart = new Date(date)\r\n            let songEnd = new Date(date)\r\n            songStart.setHours(time)\r\n            songEnd.setHours(time + 1)\r\n\r\n            for (let i in song.players){\r\n                let events = song.players[i].user.events\r\n                for (let j in events){\r\n                    let event = events[j]\r\n                    let start = new Date(event.start)\r\n                    let end = new Date(event.end)\r\n                    if (event.allDay){\r\n                        if (start <= songStart){\r\n                            return false\r\n                        }\r\n                    } else {\r\n                        if (start <= songStart && end > songEnd){\r\n                            return false\r\n                        }    \r\n                    }\r\n                }\r\n            }\r\n\r\n            return true\r\n\r\n        }, \r\n\r\n        getAvailableUsers : function(date){\r\n\r\n            let users = new Set()\r\n            users; date;\r\n\r\n            date = new Date(date)\r\n            \r\n            for (let i in this.project.songs){\r\n                let players = this.project.songs[i].players\r\n                let breakpoint = false\r\n                for (let j in players){\r\n                    let events = players[j].user.events\r\n                    for (let k in events){\r\n                        let event = events[k]\r\n                        let start = new Date(event.start)\r\n                        let end = new Date(event.end)\r\n\r\n\r\n                        if (event.allDay){\r\n                            if (start <= date && end >= date){\r\n                                // allday 1일 찍어놓으면 시작과 끝이 같음.\r\n                                // 겹치면 ? 일정이 있음! \r\n                                breakpoint = true\r\n                                break\r\n                            }\r\n                        } else {\r\n                            if (start <= date && end > date){\r\n                                // allday 1일 찍어놓으면 시작과 끝이 같음.\r\n                                breakpoint = true\r\n                                break\r\n                            }    \r\n                        }\r\n                    }\r\n                    // 무사히 루프를 빠져나오면?\r\n                    if (!breakpoint){\r\n                        users.add(players[j])\r\n                        breakpoint = false\r\n                    }\r\n                }\r\n            }\r\n            console.log(users)\r\n\r\n\r\n        }, \r\n\r\n        getAvailableSongs : function(availableUsers){\r\n            // \r\n            \r\n            availableUsers;\r\n            let availableSongs = Array()\r\n            return availableSongs\r\n            \r\n        },\r\n\r\n\r\n\r\n        getAvailableDays : function(constraintSongs){\r\n            // 이 곡을 꼭 해야돼\r\n            // 그르면 날짜별로 그 곡이 가능한지 체크를 한다.\r\n            // 되는 날짜를 반환\r\n            constraintSongs;\r\n\r\n            this.selectedNewDates.map((date) => {\r\n                date;\r\n\r\n            })\r\n\r\n            let availableDays = Array()\r\n            return availableDays\r\n\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n        this.retrieveProject()\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n.v-dialog .v-overlay__content{\r\n    flex-direction : row;\r\n    justify-content : center\r\n}\r\n\r\n.vuecal--month-view .vuecal__cell {height: 100px;}\r\n\r\n.vuecal--month-view .vuecal__cell-content {\r\n  justify-content: flex-start;\r\n  height: 100%;\r\n  align-items: flex-end;\r\n}\r\n\r\n.vuecal--month-view .vuecal__cell-date {padding: 4px;}\r\n.vuecal--month-view .vuecal__no-event {display: none;}\r\n.vuecal--week-view .vuecal__no-event {display: none;}\r\n\r\n.vuecal__event.P {\r\n  background: rgb(255, 98, 98);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.vuecal__flex[grow]{\r\n    flex:none\r\n}\r\n\r\n\r\n\r\n.vuecal__flex .vuecal__cell-content .custom-cell{\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n}\r\n\r\n</style>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}